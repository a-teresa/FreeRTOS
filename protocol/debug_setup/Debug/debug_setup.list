
debug_setup.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012bc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000084  0800148c  0800148c  0001148c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001510  08001510  00020060  2**0
                  CONTENTS
  4 .ARM          00000000  08001510  08001510  00020060  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001510  08001510  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001510  08001510  00011510  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001514  08001514  00011514  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  08001518  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  08001578  00020060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001578  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000fb8  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000004a1  00000000  00000000  0002108b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00021530  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000084  00000000  00000000  000215f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000cda3  00000000  00000000  0002167c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001178  00000000  00000000  0002e41f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00045c9e  00000000  00000000  0002f597  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000ad8  00000000  00000000  00075238  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  00075d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000060 	.word	0x20000060
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001474 	.word	0x08001474

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000064 	.word	0x20000064
 800020c:	08001474 	.word	0x08001474

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002bc:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002c0:	f003 0301 	and.w	r3, r3, #1
 80002c4:	2b00      	cmp	r3, #0
 80002c6:	d013      	beq.n	80002f0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002c8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002cc:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002d0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002d4:	2b00      	cmp	r3, #0
 80002d6:	d00b      	beq.n	80002f0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002d8:	e000      	b.n	80002dc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002da:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002dc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	2b00      	cmp	r3, #0
 80002e4:	d0f9      	beq.n	80002da <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002e6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ea:	687a      	ldr	r2, [r7, #4]
 80002ec:	b2d2      	uxtb	r2, r2
 80002ee:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	370c      	adds	r7, #12
 80002f6:	46bd      	mov	sp, r7
 80002f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fc:	4770      	bx	lr

080002fe <_write>:
#include "stm32f4xx.h"

//redirects printf() output to theserial wire out (SWO)
//this function overrides a weak function symbol and is not to be used directly

int _write(int file, char *ptr, int len){
 80002fe:	b580      	push	{r7, lr}
 8000300:	b086      	sub	sp, #24
 8000302:	af00      	add	r7, sp, #0
 8000304:	60f8      	str	r0, [r7, #12]
 8000306:	60b9      	str	r1, [r7, #8]
 8000308:	607a      	str	r2, [r7, #4]
	int i=0;
 800030a:	2300      	movs	r3, #0
 800030c:	617b      	str	r3, [r7, #20]
	for(i=0; i<len;i++)
 800030e:	2300      	movs	r3, #0
 8000310:	617b      	str	r3, [r7, #20]
 8000312:	e009      	b.n	8000328 <_write+0x2a>
		ITM_SendChar((*ptr++));
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	1c5a      	adds	r2, r3, #1
 8000318:	60ba      	str	r2, [r7, #8]
 800031a:	781b      	ldrb	r3, [r3, #0]
 800031c:	4618      	mov	r0, r3
 800031e:	f7ff ffc7 	bl	80002b0 <ITM_SendChar>
	for(i=0; i<len;i++)
 8000322:	697b      	ldr	r3, [r7, #20]
 8000324:	3301      	adds	r3, #1
 8000326:	617b      	str	r3, [r7, #20]
 8000328:	697a      	ldr	r2, [r7, #20]
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	429a      	cmp	r2, r3
 800032e:	dbf1      	blt.n	8000314 <_write+0x16>
	return len;
 8000330:	687b      	ldr	r3, [r7, #4]
}
 8000332:	4618      	mov	r0, r3
 8000334:	3718      	adds	r7, #24
 8000336:	46bd      	mov	sp, r7
 8000338:	bd80      	pop	{r7, pc}
	...

0800033c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800033c:	b480      	push	{r7}
 800033e:	b083      	sub	sp, #12
 8000340:	af00      	add	r7, sp, #0
 8000342:	4603      	mov	r3, r0
 8000344:	71fb      	strb	r3, [r7, #7]
	switch(log_level){
 8000346:	79fb      	ldrb	r3, [r7, #7]
 8000348:	2b02      	cmp	r3, #2
 800034a:	d00a      	beq.n	8000362 <_get_log_level_string+0x26>
 800034c:	2b02      	cmp	r3, #2
 800034e:	dc0a      	bgt.n	8000366 <_get_log_level_string+0x2a>
 8000350:	2b00      	cmp	r3, #0
 8000352:	d002      	beq.n	800035a <_get_log_level_string+0x1e>
 8000354:	2b01      	cmp	r3, #1
 8000356:	d002      	beq.n	800035e <_get_log_level_string+0x22>
 8000358:	e005      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_ERROR:
			return "ERROR";
 800035a:	4b06      	ldr	r3, [pc, #24]	; (8000374 <_get_log_level_string+0x38>)
 800035c:	e003      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_INFORMATION:
			return "INFO";
 800035e:	4b06      	ldr	r3, [pc, #24]	; (8000378 <_get_log_level_string+0x3c>)
 8000360:	e001      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_DEBUG:
			return "DEBUG";
 8000362:	4b06      	ldr	r3, [pc, #24]	; (800037c <_get_log_level_string+0x40>)
 8000364:	e7ff      	b.n	8000366 <_get_log_level_string+0x2a>
	}
}
 8000366:	4618      	mov	r0, r3
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	0800148c 	.word	0x0800148c
 8000378:	08001494 	.word	0x08001494
 800037c:	0800149c 	.word	0x0800149c

08000380 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args){
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	4603      	mov	r3, r0
 8000388:	60b9      	str	r1, [r7, #8]
 800038a:	607a      	str	r2, [r7, #4]
 800038c:	73fb      	strb	r3, [r7, #15]
	{
		if(log_level > system_log_level)
 800038e:	4b0f      	ldr	r3, [pc, #60]	; (80003cc <_log+0x4c>)
 8000390:	781b      	ldrb	r3, [r3, #0]
 8000392:	7bfa      	ldrb	r2, [r7, #15]
 8000394:	429a      	cmp	r2, r3
 8000396:	d814      	bhi.n	80003c2 <_log+0x42>
			return;
		printf("[%s]", _get_log_level_string(log_level));
 8000398:	7bfb      	ldrb	r3, [r7, #15]
 800039a:	4618      	mov	r0, r3
 800039c:	f7ff ffce 	bl	800033c <_get_log_level_string>
 80003a0:	4603      	mov	r3, r0
 80003a2:	4619      	mov	r1, r3
 80003a4:	480a      	ldr	r0, [pc, #40]	; (80003d0 <_log+0x50>)
 80003a6:	f000 fd4f 	bl	8000e48 <iprintf>
		vfprintf(stdout, format, args);
 80003aa:	4b0a      	ldr	r3, [pc, #40]	; (80003d4 <_log+0x54>)
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	689b      	ldr	r3, [r3, #8]
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	68b9      	ldr	r1, [r7, #8]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f000 f9f3 	bl	80007a0 <vfiprintf>
		printf("\n");
 80003ba:	200a      	movs	r0, #10
 80003bc:	f000 fd56 	bl	8000e6c <putchar>
 80003c0:	e000      	b.n	80003c4 <_log+0x44>
			return;
 80003c2:	bf00      	nop
	}
}
 80003c4:	3710      	adds	r7, #16
 80003c6:	46bd      	mov	sp, r7
 80003c8:	bd80      	pop	{r7, pc}
 80003ca:	bf00      	nop
 80003cc:	20000000 	.word	0x20000000
 80003d0:	080014a4 	.word	0x080014a4
 80003d4:	2000005c 	.word	0x2000005c

080003d8 <log_info>:
	}


	void log_info(char const * const format, ...)

	{
 80003d8:	b40f      	push	{r0, r1, r2, r3}
 80003da:	b580      	push	{r7, lr}
 80003dc:	b082      	sub	sp, #8
 80003de:	af00      	add	r7, sp, #0

	    va_list args;

		va_start(args, format);
 80003e0:	f107 0314 	add.w	r3, r7, #20
 80003e4:	607b      	str	r3, [r7, #4]

	    _log(LOG_LEVEL_INFORMATION, format, args);
 80003e6:	687a      	ldr	r2, [r7, #4]
 80003e8:	6939      	ldr	r1, [r7, #16]
 80003ea:	2001      	movs	r0, #1
 80003ec:	f7ff ffc8 	bl	8000380 <_log>

	    va_end(args);

	}
 80003f0:	bf00      	nop
 80003f2:	3708      	adds	r7, #8
 80003f4:	46bd      	mov	sp, r7
 80003f6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003fa:	b004      	add	sp, #16
 80003fc:	4770      	bx	lr
	...

08000400 <main>:
#include "Helpers/logger.h"

int main(void){
 8000400:	b580      	push	{r7, lr}
 8000402:	af00      	add	r7, sp, #0

	log_info("Program_start");
 8000404:	4801      	ldr	r0, [pc, #4]	; (800040c <main+0xc>)
 8000406:	f7ff ffe7 	bl	80003d8 <log_info>

	for(;;);
 800040a:	e7fe      	b.n	800040a <main+0xa>
 800040c:	080014cc 	.word	0x080014cc

08000410 <configure_clock>:
//APB prescaller1 = 2, APB prescaller2 ? 1
//MC01 prescaller = 2


void configure_clock()
{
 8000410:	b480      	push	{r7}
 8000412:	af00      	add	r7, sp, #0
	MODIFY_REG(FLASH->ACR,
 8000414:	4b25      	ldr	r3, [pc, #148]	; (80004ac <configure_clock+0x9c>)
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	f023 0307 	bic.w	r3, r3, #7
 800041c:	4a23      	ldr	r2, [pc, #140]	; (80004ac <configure_clock+0x9c>)
 800041e:	f043 0302 	orr.w	r3, r3, #2
 8000422:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY,
			_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS)//FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
			);
	//Enable HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 8000424:	4b22      	ldr	r3, [pc, #136]	; (80004b0 <configure_clock+0xa0>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	4a21      	ldr	r2, [pc, #132]	; (80004b0 <configure_clock+0xa0>)
 800042a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800042e:	6013      	str	r3, [r2, #0]

	//wait until HSE is stable
	while(!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 8000430:	bf00      	nop
 8000432:	4b1f      	ldr	r3, [pc, #124]	; (80004b0 <configure_clock+0xa0>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800043a:	2b00      	cmp	r3, #0
 800043c:	d0f9      	beq.n	8000432 <configure_clock+0x22>


	//configure PLL: source hse; SYSCLK=72 MHZ -> config only before enable PLL

	MODIFY_REG(RCC->PLLCFGR,
 800043e:	4b1c      	ldr	r3, [pc, #112]	; (80004b0 <configure_clock+0xa0>)
 8000440:	685b      	ldr	r3, [r3, #4]
 8000442:	4a1c      	ldr	r2, [pc, #112]	; (80004b4 <configure_clock+0xa4>)
 8000444:	401a      	ands	r2, r3
 8000446:	491a      	ldr	r1, [pc, #104]	; (80004b0 <configure_clock+0xa0>)
 8000448:	4b1b      	ldr	r3, [pc, #108]	; (80004b8 <configure_clock+0xa8>)
 800044a:	4313      	orrs	r3, r2
 800044c:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM|RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ |RCC_PLLCFGR_PLLP | RCC_PLLCFGR_PLLSRC,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4)|_VAL2FLD(RCC_PLLCFGR_PLLN, 72)|_VAL2FLD(RCC_PLLCFGR_PLLQ,3)| _VAL2FLD(RCC_PLLCFGR_PLLSRC, 1));

	//enable PLL
		SET_BIT(RCC->CR, RCC_CR_PLLON);
 800044e:	4b18      	ldr	r3, [pc, #96]	; (80004b0 <configure_clock+0xa0>)
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a17      	ldr	r2, [pc, #92]	; (80004b0 <configure_clock+0xa0>)
 8000454:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000458:	6013      	str	r3, [r2, #0]

	//wait until PLL is stable
	while(!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 800045a:	bf00      	nop
 800045c:	4b14      	ldr	r3, [pc, #80]	; (80004b0 <configure_clock+0xa0>)
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000464:	2b00      	cmp	r3, #0
 8000466:	d0f9      	beq.n	800045c <configure_clock+0x4c>

	//Switch system clock to PLL
	MODIFY_REG(RCC->CFGR,
 8000468:	4b11      	ldr	r3, [pc, #68]	; (80004b0 <configure_clock+0xa0>)
 800046a:	689b      	ldr	r3, [r3, #8]
 800046c:	f023 0303 	bic.w	r3, r3, #3
 8000470:	4a0f      	ldr	r2, [pc, #60]	; (80004b0 <configure_clock+0xa0>)
 8000472:	f043 0302 	orr.w	r3, r3, #2
 8000476:	6093      	str	r3, [r2, #8]
			RCC_CFGR_SW,
			_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL));

	//Configure PPRE1
	MODIFY_REG(RCC->CFGR,
 8000478:	4b0d      	ldr	r3, [pc, #52]	; (80004b0 <configure_clock+0xa0>)
 800047a:	689b      	ldr	r3, [r3, #8]
 800047c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000480:	4a0b      	ldr	r2, [pc, #44]	; (80004b0 <configure_clock+0xa0>)
 8000482:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000486:	6093      	str	r3, [r2, #8]
				RCC_CFGR_PPRE1,
				_VAL2FLD(RCC_CFGR_PPRE1, 4));

	//wait until PLL is used
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS)  != RCC_CFGR_SWS_PLL);
 8000488:	bf00      	nop
 800048a:	4b09      	ldr	r3, [pc, #36]	; (80004b0 <configure_clock+0xa0>)
 800048c:	689b      	ldr	r3, [r3, #8]
 800048e:	f003 030c 	and.w	r3, r3, #12
 8000492:	2b08      	cmp	r3, #8
 8000494:	d1f9      	bne.n	800048a <configure_clock+0x7a>

	//Disable HSI
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 8000496:	4b06      	ldr	r3, [pc, #24]	; (80004b0 <configure_clock+0xa0>)
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	4a05      	ldr	r2, [pc, #20]	; (80004b0 <configure_clock+0xa0>)
 800049c:	f023 0301 	bic.w	r3, r3, #1
 80004a0:	6013      	str	r3, [r2, #0]
}
 80004a2:	bf00      	nop
 80004a4:	46bd      	mov	sp, r7
 80004a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004aa:	4770      	bx	lr
 80004ac:	40023c00 	.word	0x40023c00
 80004b0:	40023800 	.word	0x40023800
 80004b4:	f0bc8000 	.word	0xf0bc8000
 80004b8:	03401204 	.word	0x03401204

080004bc <SystemInit>:
void SystemInit(void)
{
 80004bc:	b580      	push	{r7, lr}
 80004be:	af00      	add	r7, sp, #0
	configure_clock();
 80004c0:	f7ff ffa6 	bl	8000410 <configure_clock>
}
 80004c4:	bf00      	nop
 80004c6:	bd80      	pop	{r7, pc}

080004c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004c8:	480d      	ldr	r0, [pc, #52]	; (8000500 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004cc:	f7ff fff6 	bl	80004bc <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d0:	480c      	ldr	r0, [pc, #48]	; (8000504 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d2:	490d      	ldr	r1, [pc, #52]	; (8000508 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d4:	4a0d      	ldr	r2, [pc, #52]	; (800050c <LoopForever+0xe>)
  movs r3, #0
 80004d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004d8:	e002      	b.n	80004e0 <LoopCopyDataInit>

080004da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004de:	3304      	adds	r3, #4

080004e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e4:	d3f9      	bcc.n	80004da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004e6:	4a0a      	ldr	r2, [pc, #40]	; (8000510 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004e8:	4c0a      	ldr	r4, [pc, #40]	; (8000514 <LoopForever+0x16>)
  movs r3, #0
 80004ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004ec:	e001      	b.n	80004f2 <LoopFillZerobss>

080004ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f0:	3204      	adds	r2, #4

080004f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f4:	d3fb      	bcc.n	80004ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004f6:	f000 fceb 	bl	8000ed0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fa:	f7ff ff81 	bl	8000400 <main>

080004fe <LoopForever>:

LoopForever:
  b LoopForever
 80004fe:	e7fe      	b.n	80004fe <LoopForever>
  ldr   r0, =_estack
 8000500:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000504:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000508:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 800050c:	08001518 	.word	0x08001518
  ldr r2, =_sbss
 8000510:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000514:	200001cc 	.word	0x200001cc

08000518 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000518:	e7fe      	b.n	8000518 <ADC_IRQHandler>

0800051a <__sfputc_r>:
 800051a:	6893      	ldr	r3, [r2, #8]
 800051c:	3b01      	subs	r3, #1
 800051e:	2b00      	cmp	r3, #0
 8000520:	b410      	push	{r4}
 8000522:	6093      	str	r3, [r2, #8]
 8000524:	da08      	bge.n	8000538 <__sfputc_r+0x1e>
 8000526:	6994      	ldr	r4, [r2, #24]
 8000528:	42a3      	cmp	r3, r4
 800052a:	db01      	blt.n	8000530 <__sfputc_r+0x16>
 800052c:	290a      	cmp	r1, #10
 800052e:	d103      	bne.n	8000538 <__sfputc_r+0x1e>
 8000530:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000534:	f000 bb90 	b.w	8000c58 <__swbuf_r>
 8000538:	6813      	ldr	r3, [r2, #0]
 800053a:	1c58      	adds	r0, r3, #1
 800053c:	6010      	str	r0, [r2, #0]
 800053e:	7019      	strb	r1, [r3, #0]
 8000540:	4608      	mov	r0, r1
 8000542:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000546:	4770      	bx	lr

08000548 <__sfputs_r>:
 8000548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800054a:	4606      	mov	r6, r0
 800054c:	460f      	mov	r7, r1
 800054e:	4614      	mov	r4, r2
 8000550:	18d5      	adds	r5, r2, r3
 8000552:	42ac      	cmp	r4, r5
 8000554:	d101      	bne.n	800055a <__sfputs_r+0x12>
 8000556:	2000      	movs	r0, #0
 8000558:	e007      	b.n	800056a <__sfputs_r+0x22>
 800055a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800055e:	463a      	mov	r2, r7
 8000560:	4630      	mov	r0, r6
 8000562:	f7ff ffda 	bl	800051a <__sfputc_r>
 8000566:	1c43      	adds	r3, r0, #1
 8000568:	d1f3      	bne.n	8000552 <__sfputs_r+0xa>
 800056a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800056c <_vfiprintf_r>:
 800056c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000570:	460d      	mov	r5, r1
 8000572:	b09d      	sub	sp, #116	; 0x74
 8000574:	4614      	mov	r4, r2
 8000576:	4698      	mov	r8, r3
 8000578:	4606      	mov	r6, r0
 800057a:	b118      	cbz	r0, 8000584 <_vfiprintf_r+0x18>
 800057c:	6a03      	ldr	r3, [r0, #32]
 800057e:	b90b      	cbnz	r3, 8000584 <_vfiprintf_r+0x18>
 8000580:	f000 fb34 	bl	8000bec <__sinit>
 8000584:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000586:	07d9      	lsls	r1, r3, #31
 8000588:	d405      	bmi.n	8000596 <_vfiprintf_r+0x2a>
 800058a:	89ab      	ldrh	r3, [r5, #12]
 800058c:	059a      	lsls	r2, r3, #22
 800058e:	d402      	bmi.n	8000596 <_vfiprintf_r+0x2a>
 8000590:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000592:	f000 fcc2 	bl	8000f1a <__retarget_lock_acquire_recursive>
 8000596:	89ab      	ldrh	r3, [r5, #12]
 8000598:	071b      	lsls	r3, r3, #28
 800059a:	d501      	bpl.n	80005a0 <_vfiprintf_r+0x34>
 800059c:	692b      	ldr	r3, [r5, #16]
 800059e:	b99b      	cbnz	r3, 80005c8 <_vfiprintf_r+0x5c>
 80005a0:	4629      	mov	r1, r5
 80005a2:	4630      	mov	r0, r6
 80005a4:	f000 fb96 	bl	8000cd4 <__swsetup_r>
 80005a8:	b170      	cbz	r0, 80005c8 <_vfiprintf_r+0x5c>
 80005aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80005ac:	07dc      	lsls	r4, r3, #31
 80005ae:	d504      	bpl.n	80005ba <_vfiprintf_r+0x4e>
 80005b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80005b4:	b01d      	add	sp, #116	; 0x74
 80005b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80005ba:	89ab      	ldrh	r3, [r5, #12]
 80005bc:	0598      	lsls	r0, r3, #22
 80005be:	d4f7      	bmi.n	80005b0 <_vfiprintf_r+0x44>
 80005c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80005c2:	f000 fcab 	bl	8000f1c <__retarget_lock_release_recursive>
 80005c6:	e7f3      	b.n	80005b0 <_vfiprintf_r+0x44>
 80005c8:	2300      	movs	r3, #0
 80005ca:	9309      	str	r3, [sp, #36]	; 0x24
 80005cc:	2320      	movs	r3, #32
 80005ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80005d2:	f8cd 800c 	str.w	r8, [sp, #12]
 80005d6:	2330      	movs	r3, #48	; 0x30
 80005d8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 800078c <_vfiprintf_r+0x220>
 80005dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80005e0:	f04f 0901 	mov.w	r9, #1
 80005e4:	4623      	mov	r3, r4
 80005e6:	469a      	mov	sl, r3
 80005e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005ec:	b10a      	cbz	r2, 80005f2 <_vfiprintf_r+0x86>
 80005ee:	2a25      	cmp	r2, #37	; 0x25
 80005f0:	d1f9      	bne.n	80005e6 <_vfiprintf_r+0x7a>
 80005f2:	ebba 0b04 	subs.w	fp, sl, r4
 80005f6:	d00b      	beq.n	8000610 <_vfiprintf_r+0xa4>
 80005f8:	465b      	mov	r3, fp
 80005fa:	4622      	mov	r2, r4
 80005fc:	4629      	mov	r1, r5
 80005fe:	4630      	mov	r0, r6
 8000600:	f7ff ffa2 	bl	8000548 <__sfputs_r>
 8000604:	3001      	adds	r0, #1
 8000606:	f000 80a9 	beq.w	800075c <_vfiprintf_r+0x1f0>
 800060a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800060c:	445a      	add	r2, fp
 800060e:	9209      	str	r2, [sp, #36]	; 0x24
 8000610:	f89a 3000 	ldrb.w	r3, [sl]
 8000614:	2b00      	cmp	r3, #0
 8000616:	f000 80a1 	beq.w	800075c <_vfiprintf_r+0x1f0>
 800061a:	2300      	movs	r3, #0
 800061c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000620:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000624:	f10a 0a01 	add.w	sl, sl, #1
 8000628:	9304      	str	r3, [sp, #16]
 800062a:	9307      	str	r3, [sp, #28]
 800062c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000630:	931a      	str	r3, [sp, #104]	; 0x68
 8000632:	4654      	mov	r4, sl
 8000634:	2205      	movs	r2, #5
 8000636:	f814 1b01 	ldrb.w	r1, [r4], #1
 800063a:	4854      	ldr	r0, [pc, #336]	; (800078c <_vfiprintf_r+0x220>)
 800063c:	f7ff fde8 	bl	8000210 <memchr>
 8000640:	9a04      	ldr	r2, [sp, #16]
 8000642:	b9d8      	cbnz	r0, 800067c <_vfiprintf_r+0x110>
 8000644:	06d1      	lsls	r1, r2, #27
 8000646:	bf44      	itt	mi
 8000648:	2320      	movmi	r3, #32
 800064a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800064e:	0713      	lsls	r3, r2, #28
 8000650:	bf44      	itt	mi
 8000652:	232b      	movmi	r3, #43	; 0x2b
 8000654:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000658:	f89a 3000 	ldrb.w	r3, [sl]
 800065c:	2b2a      	cmp	r3, #42	; 0x2a
 800065e:	d015      	beq.n	800068c <_vfiprintf_r+0x120>
 8000660:	9a07      	ldr	r2, [sp, #28]
 8000662:	4654      	mov	r4, sl
 8000664:	2000      	movs	r0, #0
 8000666:	f04f 0c0a 	mov.w	ip, #10
 800066a:	4621      	mov	r1, r4
 800066c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000670:	3b30      	subs	r3, #48	; 0x30
 8000672:	2b09      	cmp	r3, #9
 8000674:	d94d      	bls.n	8000712 <_vfiprintf_r+0x1a6>
 8000676:	b1b0      	cbz	r0, 80006a6 <_vfiprintf_r+0x13a>
 8000678:	9207      	str	r2, [sp, #28]
 800067a:	e014      	b.n	80006a6 <_vfiprintf_r+0x13a>
 800067c:	eba0 0308 	sub.w	r3, r0, r8
 8000680:	fa09 f303 	lsl.w	r3, r9, r3
 8000684:	4313      	orrs	r3, r2
 8000686:	9304      	str	r3, [sp, #16]
 8000688:	46a2      	mov	sl, r4
 800068a:	e7d2      	b.n	8000632 <_vfiprintf_r+0xc6>
 800068c:	9b03      	ldr	r3, [sp, #12]
 800068e:	1d19      	adds	r1, r3, #4
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	9103      	str	r1, [sp, #12]
 8000694:	2b00      	cmp	r3, #0
 8000696:	bfbb      	ittet	lt
 8000698:	425b      	neglt	r3, r3
 800069a:	f042 0202 	orrlt.w	r2, r2, #2
 800069e:	9307      	strge	r3, [sp, #28]
 80006a0:	9307      	strlt	r3, [sp, #28]
 80006a2:	bfb8      	it	lt
 80006a4:	9204      	strlt	r2, [sp, #16]
 80006a6:	7823      	ldrb	r3, [r4, #0]
 80006a8:	2b2e      	cmp	r3, #46	; 0x2e
 80006aa:	d10c      	bne.n	80006c6 <_vfiprintf_r+0x15a>
 80006ac:	7863      	ldrb	r3, [r4, #1]
 80006ae:	2b2a      	cmp	r3, #42	; 0x2a
 80006b0:	d134      	bne.n	800071c <_vfiprintf_r+0x1b0>
 80006b2:	9b03      	ldr	r3, [sp, #12]
 80006b4:	1d1a      	adds	r2, r3, #4
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	9203      	str	r2, [sp, #12]
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	bfb8      	it	lt
 80006be:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80006c2:	3402      	adds	r4, #2
 80006c4:	9305      	str	r3, [sp, #20]
 80006c6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800079c <_vfiprintf_r+0x230>
 80006ca:	7821      	ldrb	r1, [r4, #0]
 80006cc:	2203      	movs	r2, #3
 80006ce:	4650      	mov	r0, sl
 80006d0:	f7ff fd9e 	bl	8000210 <memchr>
 80006d4:	b138      	cbz	r0, 80006e6 <_vfiprintf_r+0x17a>
 80006d6:	9b04      	ldr	r3, [sp, #16]
 80006d8:	eba0 000a 	sub.w	r0, r0, sl
 80006dc:	2240      	movs	r2, #64	; 0x40
 80006de:	4082      	lsls	r2, r0
 80006e0:	4313      	orrs	r3, r2
 80006e2:	3401      	adds	r4, #1
 80006e4:	9304      	str	r3, [sp, #16]
 80006e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006ea:	4829      	ldr	r0, [pc, #164]	; (8000790 <_vfiprintf_r+0x224>)
 80006ec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80006f0:	2206      	movs	r2, #6
 80006f2:	f7ff fd8d 	bl	8000210 <memchr>
 80006f6:	2800      	cmp	r0, #0
 80006f8:	d03f      	beq.n	800077a <_vfiprintf_r+0x20e>
 80006fa:	4b26      	ldr	r3, [pc, #152]	; (8000794 <_vfiprintf_r+0x228>)
 80006fc:	bb1b      	cbnz	r3, 8000746 <_vfiprintf_r+0x1da>
 80006fe:	9b03      	ldr	r3, [sp, #12]
 8000700:	3307      	adds	r3, #7
 8000702:	f023 0307 	bic.w	r3, r3, #7
 8000706:	3308      	adds	r3, #8
 8000708:	9303      	str	r3, [sp, #12]
 800070a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800070c:	443b      	add	r3, r7
 800070e:	9309      	str	r3, [sp, #36]	; 0x24
 8000710:	e768      	b.n	80005e4 <_vfiprintf_r+0x78>
 8000712:	fb0c 3202 	mla	r2, ip, r2, r3
 8000716:	460c      	mov	r4, r1
 8000718:	2001      	movs	r0, #1
 800071a:	e7a6      	b.n	800066a <_vfiprintf_r+0xfe>
 800071c:	2300      	movs	r3, #0
 800071e:	3401      	adds	r4, #1
 8000720:	9305      	str	r3, [sp, #20]
 8000722:	4619      	mov	r1, r3
 8000724:	f04f 0c0a 	mov.w	ip, #10
 8000728:	4620      	mov	r0, r4
 800072a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800072e:	3a30      	subs	r2, #48	; 0x30
 8000730:	2a09      	cmp	r2, #9
 8000732:	d903      	bls.n	800073c <_vfiprintf_r+0x1d0>
 8000734:	2b00      	cmp	r3, #0
 8000736:	d0c6      	beq.n	80006c6 <_vfiprintf_r+0x15a>
 8000738:	9105      	str	r1, [sp, #20]
 800073a:	e7c4      	b.n	80006c6 <_vfiprintf_r+0x15a>
 800073c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000740:	4604      	mov	r4, r0
 8000742:	2301      	movs	r3, #1
 8000744:	e7f0      	b.n	8000728 <_vfiprintf_r+0x1bc>
 8000746:	ab03      	add	r3, sp, #12
 8000748:	9300      	str	r3, [sp, #0]
 800074a:	462a      	mov	r2, r5
 800074c:	4b12      	ldr	r3, [pc, #72]	; (8000798 <_vfiprintf_r+0x22c>)
 800074e:	a904      	add	r1, sp, #16
 8000750:	4630      	mov	r0, r6
 8000752:	f3af 8000 	nop.w
 8000756:	4607      	mov	r7, r0
 8000758:	1c78      	adds	r0, r7, #1
 800075a:	d1d6      	bne.n	800070a <_vfiprintf_r+0x19e>
 800075c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800075e:	07d9      	lsls	r1, r3, #31
 8000760:	d405      	bmi.n	800076e <_vfiprintf_r+0x202>
 8000762:	89ab      	ldrh	r3, [r5, #12]
 8000764:	059a      	lsls	r2, r3, #22
 8000766:	d402      	bmi.n	800076e <_vfiprintf_r+0x202>
 8000768:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800076a:	f000 fbd7 	bl	8000f1c <__retarget_lock_release_recursive>
 800076e:	89ab      	ldrh	r3, [r5, #12]
 8000770:	065b      	lsls	r3, r3, #25
 8000772:	f53f af1d 	bmi.w	80005b0 <_vfiprintf_r+0x44>
 8000776:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000778:	e71c      	b.n	80005b4 <_vfiprintf_r+0x48>
 800077a:	ab03      	add	r3, sp, #12
 800077c:	9300      	str	r3, [sp, #0]
 800077e:	462a      	mov	r2, r5
 8000780:	4b05      	ldr	r3, [pc, #20]	; (8000798 <_vfiprintf_r+0x22c>)
 8000782:	a904      	add	r1, sp, #16
 8000784:	4630      	mov	r0, r6
 8000786:	f000 f883 	bl	8000890 <_printf_i>
 800078a:	e7e4      	b.n	8000756 <_vfiprintf_r+0x1ea>
 800078c:	080014da 	.word	0x080014da
 8000790:	080014e4 	.word	0x080014e4
 8000794:	00000000 	.word	0x00000000
 8000798:	08000549 	.word	0x08000549
 800079c:	080014e0 	.word	0x080014e0

080007a0 <vfiprintf>:
 80007a0:	4613      	mov	r3, r2
 80007a2:	460a      	mov	r2, r1
 80007a4:	4601      	mov	r1, r0
 80007a6:	4802      	ldr	r0, [pc, #8]	; (80007b0 <vfiprintf+0x10>)
 80007a8:	6800      	ldr	r0, [r0, #0]
 80007aa:	f7ff bedf 	b.w	800056c <_vfiprintf_r>
 80007ae:	bf00      	nop
 80007b0:	2000005c 	.word	0x2000005c

080007b4 <_printf_common>:
 80007b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007b8:	4616      	mov	r6, r2
 80007ba:	4699      	mov	r9, r3
 80007bc:	688a      	ldr	r2, [r1, #8]
 80007be:	690b      	ldr	r3, [r1, #16]
 80007c0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80007c4:	4293      	cmp	r3, r2
 80007c6:	bfb8      	it	lt
 80007c8:	4613      	movlt	r3, r2
 80007ca:	6033      	str	r3, [r6, #0]
 80007cc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80007d0:	4607      	mov	r7, r0
 80007d2:	460c      	mov	r4, r1
 80007d4:	b10a      	cbz	r2, 80007da <_printf_common+0x26>
 80007d6:	3301      	adds	r3, #1
 80007d8:	6033      	str	r3, [r6, #0]
 80007da:	6823      	ldr	r3, [r4, #0]
 80007dc:	0699      	lsls	r1, r3, #26
 80007de:	bf42      	ittt	mi
 80007e0:	6833      	ldrmi	r3, [r6, #0]
 80007e2:	3302      	addmi	r3, #2
 80007e4:	6033      	strmi	r3, [r6, #0]
 80007e6:	6825      	ldr	r5, [r4, #0]
 80007e8:	f015 0506 	ands.w	r5, r5, #6
 80007ec:	d106      	bne.n	80007fc <_printf_common+0x48>
 80007ee:	f104 0a19 	add.w	sl, r4, #25
 80007f2:	68e3      	ldr	r3, [r4, #12]
 80007f4:	6832      	ldr	r2, [r6, #0]
 80007f6:	1a9b      	subs	r3, r3, r2
 80007f8:	42ab      	cmp	r3, r5
 80007fa:	dc26      	bgt.n	800084a <_printf_common+0x96>
 80007fc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000800:	1e13      	subs	r3, r2, #0
 8000802:	6822      	ldr	r2, [r4, #0]
 8000804:	bf18      	it	ne
 8000806:	2301      	movne	r3, #1
 8000808:	0692      	lsls	r2, r2, #26
 800080a:	d42b      	bmi.n	8000864 <_printf_common+0xb0>
 800080c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000810:	4649      	mov	r1, r9
 8000812:	4638      	mov	r0, r7
 8000814:	47c0      	blx	r8
 8000816:	3001      	adds	r0, #1
 8000818:	d01e      	beq.n	8000858 <_printf_common+0xa4>
 800081a:	6823      	ldr	r3, [r4, #0]
 800081c:	6922      	ldr	r2, [r4, #16]
 800081e:	f003 0306 	and.w	r3, r3, #6
 8000822:	2b04      	cmp	r3, #4
 8000824:	bf02      	ittt	eq
 8000826:	68e5      	ldreq	r5, [r4, #12]
 8000828:	6833      	ldreq	r3, [r6, #0]
 800082a:	1aed      	subeq	r5, r5, r3
 800082c:	68a3      	ldr	r3, [r4, #8]
 800082e:	bf0c      	ite	eq
 8000830:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000834:	2500      	movne	r5, #0
 8000836:	4293      	cmp	r3, r2
 8000838:	bfc4      	itt	gt
 800083a:	1a9b      	subgt	r3, r3, r2
 800083c:	18ed      	addgt	r5, r5, r3
 800083e:	2600      	movs	r6, #0
 8000840:	341a      	adds	r4, #26
 8000842:	42b5      	cmp	r5, r6
 8000844:	d11a      	bne.n	800087c <_printf_common+0xc8>
 8000846:	2000      	movs	r0, #0
 8000848:	e008      	b.n	800085c <_printf_common+0xa8>
 800084a:	2301      	movs	r3, #1
 800084c:	4652      	mov	r2, sl
 800084e:	4649      	mov	r1, r9
 8000850:	4638      	mov	r0, r7
 8000852:	47c0      	blx	r8
 8000854:	3001      	adds	r0, #1
 8000856:	d103      	bne.n	8000860 <_printf_common+0xac>
 8000858:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800085c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000860:	3501      	adds	r5, #1
 8000862:	e7c6      	b.n	80007f2 <_printf_common+0x3e>
 8000864:	18e1      	adds	r1, r4, r3
 8000866:	1c5a      	adds	r2, r3, #1
 8000868:	2030      	movs	r0, #48	; 0x30
 800086a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800086e:	4422      	add	r2, r4
 8000870:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000874:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000878:	3302      	adds	r3, #2
 800087a:	e7c7      	b.n	800080c <_printf_common+0x58>
 800087c:	2301      	movs	r3, #1
 800087e:	4622      	mov	r2, r4
 8000880:	4649      	mov	r1, r9
 8000882:	4638      	mov	r0, r7
 8000884:	47c0      	blx	r8
 8000886:	3001      	adds	r0, #1
 8000888:	d0e6      	beq.n	8000858 <_printf_common+0xa4>
 800088a:	3601      	adds	r6, #1
 800088c:	e7d9      	b.n	8000842 <_printf_common+0x8e>
	...

08000890 <_printf_i>:
 8000890:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000894:	7e0f      	ldrb	r7, [r1, #24]
 8000896:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000898:	2f78      	cmp	r7, #120	; 0x78
 800089a:	4691      	mov	r9, r2
 800089c:	4680      	mov	r8, r0
 800089e:	460c      	mov	r4, r1
 80008a0:	469a      	mov	sl, r3
 80008a2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80008a6:	d807      	bhi.n	80008b8 <_printf_i+0x28>
 80008a8:	2f62      	cmp	r7, #98	; 0x62
 80008aa:	d80a      	bhi.n	80008c2 <_printf_i+0x32>
 80008ac:	2f00      	cmp	r7, #0
 80008ae:	f000 80d4 	beq.w	8000a5a <_printf_i+0x1ca>
 80008b2:	2f58      	cmp	r7, #88	; 0x58
 80008b4:	f000 80c0 	beq.w	8000a38 <_printf_i+0x1a8>
 80008b8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80008bc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80008c0:	e03a      	b.n	8000938 <_printf_i+0xa8>
 80008c2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80008c6:	2b15      	cmp	r3, #21
 80008c8:	d8f6      	bhi.n	80008b8 <_printf_i+0x28>
 80008ca:	a101      	add	r1, pc, #4	; (adr r1, 80008d0 <_printf_i+0x40>)
 80008cc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80008d0:	08000929 	.word	0x08000929
 80008d4:	0800093d 	.word	0x0800093d
 80008d8:	080008b9 	.word	0x080008b9
 80008dc:	080008b9 	.word	0x080008b9
 80008e0:	080008b9 	.word	0x080008b9
 80008e4:	080008b9 	.word	0x080008b9
 80008e8:	0800093d 	.word	0x0800093d
 80008ec:	080008b9 	.word	0x080008b9
 80008f0:	080008b9 	.word	0x080008b9
 80008f4:	080008b9 	.word	0x080008b9
 80008f8:	080008b9 	.word	0x080008b9
 80008fc:	08000a41 	.word	0x08000a41
 8000900:	08000969 	.word	0x08000969
 8000904:	080009fb 	.word	0x080009fb
 8000908:	080008b9 	.word	0x080008b9
 800090c:	080008b9 	.word	0x080008b9
 8000910:	08000a63 	.word	0x08000a63
 8000914:	080008b9 	.word	0x080008b9
 8000918:	08000969 	.word	0x08000969
 800091c:	080008b9 	.word	0x080008b9
 8000920:	080008b9 	.word	0x080008b9
 8000924:	08000a03 	.word	0x08000a03
 8000928:	682b      	ldr	r3, [r5, #0]
 800092a:	1d1a      	adds	r2, r3, #4
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	602a      	str	r2, [r5, #0]
 8000930:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000934:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000938:	2301      	movs	r3, #1
 800093a:	e09f      	b.n	8000a7c <_printf_i+0x1ec>
 800093c:	6820      	ldr	r0, [r4, #0]
 800093e:	682b      	ldr	r3, [r5, #0]
 8000940:	0607      	lsls	r7, r0, #24
 8000942:	f103 0104 	add.w	r1, r3, #4
 8000946:	6029      	str	r1, [r5, #0]
 8000948:	d501      	bpl.n	800094e <_printf_i+0xbe>
 800094a:	681e      	ldr	r6, [r3, #0]
 800094c:	e003      	b.n	8000956 <_printf_i+0xc6>
 800094e:	0646      	lsls	r6, r0, #25
 8000950:	d5fb      	bpl.n	800094a <_printf_i+0xba>
 8000952:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000956:	2e00      	cmp	r6, #0
 8000958:	da03      	bge.n	8000962 <_printf_i+0xd2>
 800095a:	232d      	movs	r3, #45	; 0x2d
 800095c:	4276      	negs	r6, r6
 800095e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000962:	485a      	ldr	r0, [pc, #360]	; (8000acc <_printf_i+0x23c>)
 8000964:	230a      	movs	r3, #10
 8000966:	e012      	b.n	800098e <_printf_i+0xfe>
 8000968:	682b      	ldr	r3, [r5, #0]
 800096a:	6820      	ldr	r0, [r4, #0]
 800096c:	1d19      	adds	r1, r3, #4
 800096e:	6029      	str	r1, [r5, #0]
 8000970:	0605      	lsls	r5, r0, #24
 8000972:	d501      	bpl.n	8000978 <_printf_i+0xe8>
 8000974:	681e      	ldr	r6, [r3, #0]
 8000976:	e002      	b.n	800097e <_printf_i+0xee>
 8000978:	0641      	lsls	r1, r0, #25
 800097a:	d5fb      	bpl.n	8000974 <_printf_i+0xe4>
 800097c:	881e      	ldrh	r6, [r3, #0]
 800097e:	4853      	ldr	r0, [pc, #332]	; (8000acc <_printf_i+0x23c>)
 8000980:	2f6f      	cmp	r7, #111	; 0x6f
 8000982:	bf0c      	ite	eq
 8000984:	2308      	moveq	r3, #8
 8000986:	230a      	movne	r3, #10
 8000988:	2100      	movs	r1, #0
 800098a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800098e:	6865      	ldr	r5, [r4, #4]
 8000990:	60a5      	str	r5, [r4, #8]
 8000992:	2d00      	cmp	r5, #0
 8000994:	bfa2      	ittt	ge
 8000996:	6821      	ldrge	r1, [r4, #0]
 8000998:	f021 0104 	bicge.w	r1, r1, #4
 800099c:	6021      	strge	r1, [r4, #0]
 800099e:	b90e      	cbnz	r6, 80009a4 <_printf_i+0x114>
 80009a0:	2d00      	cmp	r5, #0
 80009a2:	d04b      	beq.n	8000a3c <_printf_i+0x1ac>
 80009a4:	4615      	mov	r5, r2
 80009a6:	fbb6 f1f3 	udiv	r1, r6, r3
 80009aa:	fb03 6711 	mls	r7, r3, r1, r6
 80009ae:	5dc7      	ldrb	r7, [r0, r7]
 80009b0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80009b4:	4637      	mov	r7, r6
 80009b6:	42bb      	cmp	r3, r7
 80009b8:	460e      	mov	r6, r1
 80009ba:	d9f4      	bls.n	80009a6 <_printf_i+0x116>
 80009bc:	2b08      	cmp	r3, #8
 80009be:	d10b      	bne.n	80009d8 <_printf_i+0x148>
 80009c0:	6823      	ldr	r3, [r4, #0]
 80009c2:	07de      	lsls	r6, r3, #31
 80009c4:	d508      	bpl.n	80009d8 <_printf_i+0x148>
 80009c6:	6923      	ldr	r3, [r4, #16]
 80009c8:	6861      	ldr	r1, [r4, #4]
 80009ca:	4299      	cmp	r1, r3
 80009cc:	bfde      	ittt	le
 80009ce:	2330      	movle	r3, #48	; 0x30
 80009d0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80009d4:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80009d8:	1b52      	subs	r2, r2, r5
 80009da:	6122      	str	r2, [r4, #16]
 80009dc:	f8cd a000 	str.w	sl, [sp]
 80009e0:	464b      	mov	r3, r9
 80009e2:	aa03      	add	r2, sp, #12
 80009e4:	4621      	mov	r1, r4
 80009e6:	4640      	mov	r0, r8
 80009e8:	f7ff fee4 	bl	80007b4 <_printf_common>
 80009ec:	3001      	adds	r0, #1
 80009ee:	d14a      	bne.n	8000a86 <_printf_i+0x1f6>
 80009f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009f4:	b004      	add	sp, #16
 80009f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009fa:	6823      	ldr	r3, [r4, #0]
 80009fc:	f043 0320 	orr.w	r3, r3, #32
 8000a00:	6023      	str	r3, [r4, #0]
 8000a02:	4833      	ldr	r0, [pc, #204]	; (8000ad0 <_printf_i+0x240>)
 8000a04:	2778      	movs	r7, #120	; 0x78
 8000a06:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000a0a:	6823      	ldr	r3, [r4, #0]
 8000a0c:	6829      	ldr	r1, [r5, #0]
 8000a0e:	061f      	lsls	r7, r3, #24
 8000a10:	f851 6b04 	ldr.w	r6, [r1], #4
 8000a14:	d402      	bmi.n	8000a1c <_printf_i+0x18c>
 8000a16:	065f      	lsls	r7, r3, #25
 8000a18:	bf48      	it	mi
 8000a1a:	b2b6      	uxthmi	r6, r6
 8000a1c:	07df      	lsls	r7, r3, #31
 8000a1e:	bf48      	it	mi
 8000a20:	f043 0320 	orrmi.w	r3, r3, #32
 8000a24:	6029      	str	r1, [r5, #0]
 8000a26:	bf48      	it	mi
 8000a28:	6023      	strmi	r3, [r4, #0]
 8000a2a:	b91e      	cbnz	r6, 8000a34 <_printf_i+0x1a4>
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	f023 0320 	bic.w	r3, r3, #32
 8000a32:	6023      	str	r3, [r4, #0]
 8000a34:	2310      	movs	r3, #16
 8000a36:	e7a7      	b.n	8000988 <_printf_i+0xf8>
 8000a38:	4824      	ldr	r0, [pc, #144]	; (8000acc <_printf_i+0x23c>)
 8000a3a:	e7e4      	b.n	8000a06 <_printf_i+0x176>
 8000a3c:	4615      	mov	r5, r2
 8000a3e:	e7bd      	b.n	80009bc <_printf_i+0x12c>
 8000a40:	682b      	ldr	r3, [r5, #0]
 8000a42:	6826      	ldr	r6, [r4, #0]
 8000a44:	6961      	ldr	r1, [r4, #20]
 8000a46:	1d18      	adds	r0, r3, #4
 8000a48:	6028      	str	r0, [r5, #0]
 8000a4a:	0635      	lsls	r5, r6, #24
 8000a4c:	681b      	ldr	r3, [r3, #0]
 8000a4e:	d501      	bpl.n	8000a54 <_printf_i+0x1c4>
 8000a50:	6019      	str	r1, [r3, #0]
 8000a52:	e002      	b.n	8000a5a <_printf_i+0x1ca>
 8000a54:	0670      	lsls	r0, r6, #25
 8000a56:	d5fb      	bpl.n	8000a50 <_printf_i+0x1c0>
 8000a58:	8019      	strh	r1, [r3, #0]
 8000a5a:	2300      	movs	r3, #0
 8000a5c:	6123      	str	r3, [r4, #16]
 8000a5e:	4615      	mov	r5, r2
 8000a60:	e7bc      	b.n	80009dc <_printf_i+0x14c>
 8000a62:	682b      	ldr	r3, [r5, #0]
 8000a64:	1d1a      	adds	r2, r3, #4
 8000a66:	602a      	str	r2, [r5, #0]
 8000a68:	681d      	ldr	r5, [r3, #0]
 8000a6a:	6862      	ldr	r2, [r4, #4]
 8000a6c:	2100      	movs	r1, #0
 8000a6e:	4628      	mov	r0, r5
 8000a70:	f7ff fbce 	bl	8000210 <memchr>
 8000a74:	b108      	cbz	r0, 8000a7a <_printf_i+0x1ea>
 8000a76:	1b40      	subs	r0, r0, r5
 8000a78:	6060      	str	r0, [r4, #4]
 8000a7a:	6863      	ldr	r3, [r4, #4]
 8000a7c:	6123      	str	r3, [r4, #16]
 8000a7e:	2300      	movs	r3, #0
 8000a80:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000a84:	e7aa      	b.n	80009dc <_printf_i+0x14c>
 8000a86:	6923      	ldr	r3, [r4, #16]
 8000a88:	462a      	mov	r2, r5
 8000a8a:	4649      	mov	r1, r9
 8000a8c:	4640      	mov	r0, r8
 8000a8e:	47d0      	blx	sl
 8000a90:	3001      	adds	r0, #1
 8000a92:	d0ad      	beq.n	80009f0 <_printf_i+0x160>
 8000a94:	6823      	ldr	r3, [r4, #0]
 8000a96:	079b      	lsls	r3, r3, #30
 8000a98:	d413      	bmi.n	8000ac2 <_printf_i+0x232>
 8000a9a:	68e0      	ldr	r0, [r4, #12]
 8000a9c:	9b03      	ldr	r3, [sp, #12]
 8000a9e:	4298      	cmp	r0, r3
 8000aa0:	bfb8      	it	lt
 8000aa2:	4618      	movlt	r0, r3
 8000aa4:	e7a6      	b.n	80009f4 <_printf_i+0x164>
 8000aa6:	2301      	movs	r3, #1
 8000aa8:	4632      	mov	r2, r6
 8000aaa:	4649      	mov	r1, r9
 8000aac:	4640      	mov	r0, r8
 8000aae:	47d0      	blx	sl
 8000ab0:	3001      	adds	r0, #1
 8000ab2:	d09d      	beq.n	80009f0 <_printf_i+0x160>
 8000ab4:	3501      	adds	r5, #1
 8000ab6:	68e3      	ldr	r3, [r4, #12]
 8000ab8:	9903      	ldr	r1, [sp, #12]
 8000aba:	1a5b      	subs	r3, r3, r1
 8000abc:	42ab      	cmp	r3, r5
 8000abe:	dcf2      	bgt.n	8000aa6 <_printf_i+0x216>
 8000ac0:	e7eb      	b.n	8000a9a <_printf_i+0x20a>
 8000ac2:	2500      	movs	r5, #0
 8000ac4:	f104 0619 	add.w	r6, r4, #25
 8000ac8:	e7f5      	b.n	8000ab6 <_printf_i+0x226>
 8000aca:	bf00      	nop
 8000acc:	080014eb 	.word	0x080014eb
 8000ad0:	080014fc 	.word	0x080014fc

08000ad4 <std>:
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	b510      	push	{r4, lr}
 8000ad8:	4604      	mov	r4, r0
 8000ada:	e9c0 3300 	strd	r3, r3, [r0]
 8000ade:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ae2:	6083      	str	r3, [r0, #8]
 8000ae4:	8181      	strh	r1, [r0, #12]
 8000ae6:	6643      	str	r3, [r0, #100]	; 0x64
 8000ae8:	81c2      	strh	r2, [r0, #14]
 8000aea:	6183      	str	r3, [r0, #24]
 8000aec:	4619      	mov	r1, r3
 8000aee:	2208      	movs	r2, #8
 8000af0:	305c      	adds	r0, #92	; 0x5c
 8000af2:	f000 f9c3 	bl	8000e7c <memset>
 8000af6:	4b0d      	ldr	r3, [pc, #52]	; (8000b2c <std+0x58>)
 8000af8:	6263      	str	r3, [r4, #36]	; 0x24
 8000afa:	4b0d      	ldr	r3, [pc, #52]	; (8000b30 <std+0x5c>)
 8000afc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000afe:	4b0d      	ldr	r3, [pc, #52]	; (8000b34 <std+0x60>)
 8000b00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b02:	4b0d      	ldr	r3, [pc, #52]	; (8000b38 <std+0x64>)
 8000b04:	6323      	str	r3, [r4, #48]	; 0x30
 8000b06:	4b0d      	ldr	r3, [pc, #52]	; (8000b3c <std+0x68>)
 8000b08:	6224      	str	r4, [r4, #32]
 8000b0a:	429c      	cmp	r4, r3
 8000b0c:	d006      	beq.n	8000b1c <std+0x48>
 8000b0e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000b12:	4294      	cmp	r4, r2
 8000b14:	d002      	beq.n	8000b1c <std+0x48>
 8000b16:	33d0      	adds	r3, #208	; 0xd0
 8000b18:	429c      	cmp	r4, r3
 8000b1a:	d105      	bne.n	8000b28 <std+0x54>
 8000b1c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b24:	f000 b9f8 	b.w	8000f18 <__retarget_lock_init_recursive>
 8000b28:	bd10      	pop	{r4, pc}
 8000b2a:	bf00      	nop
 8000b2c:	0800126d 	.word	0x0800126d
 8000b30:	0800128f 	.word	0x0800128f
 8000b34:	080012c7 	.word	0x080012c7
 8000b38:	080012eb 	.word	0x080012eb
 8000b3c:	2000007c 	.word	0x2000007c

08000b40 <stdio_exit_handler>:
 8000b40:	4a02      	ldr	r2, [pc, #8]	; (8000b4c <stdio_exit_handler+0xc>)
 8000b42:	4903      	ldr	r1, [pc, #12]	; (8000b50 <stdio_exit_handler+0x10>)
 8000b44:	4803      	ldr	r0, [pc, #12]	; (8000b54 <stdio_exit_handler+0x14>)
 8000b46:	f000 b869 	b.w	8000c1c <_fwalk_sglue>
 8000b4a:	bf00      	nop
 8000b4c:	20000004 	.word	0x20000004
 8000b50:	08001205 	.word	0x08001205
 8000b54:	20000010 	.word	0x20000010

08000b58 <cleanup_stdio>:
 8000b58:	6841      	ldr	r1, [r0, #4]
 8000b5a:	4b0c      	ldr	r3, [pc, #48]	; (8000b8c <cleanup_stdio+0x34>)
 8000b5c:	4299      	cmp	r1, r3
 8000b5e:	b510      	push	{r4, lr}
 8000b60:	4604      	mov	r4, r0
 8000b62:	d001      	beq.n	8000b68 <cleanup_stdio+0x10>
 8000b64:	f000 fb4e 	bl	8001204 <_fflush_r>
 8000b68:	68a1      	ldr	r1, [r4, #8]
 8000b6a:	4b09      	ldr	r3, [pc, #36]	; (8000b90 <cleanup_stdio+0x38>)
 8000b6c:	4299      	cmp	r1, r3
 8000b6e:	d002      	beq.n	8000b76 <cleanup_stdio+0x1e>
 8000b70:	4620      	mov	r0, r4
 8000b72:	f000 fb47 	bl	8001204 <_fflush_r>
 8000b76:	68e1      	ldr	r1, [r4, #12]
 8000b78:	4b06      	ldr	r3, [pc, #24]	; (8000b94 <cleanup_stdio+0x3c>)
 8000b7a:	4299      	cmp	r1, r3
 8000b7c:	d004      	beq.n	8000b88 <cleanup_stdio+0x30>
 8000b7e:	4620      	mov	r0, r4
 8000b80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b84:	f000 bb3e 	b.w	8001204 <_fflush_r>
 8000b88:	bd10      	pop	{r4, pc}
 8000b8a:	bf00      	nop
 8000b8c:	2000007c 	.word	0x2000007c
 8000b90:	200000e4 	.word	0x200000e4
 8000b94:	2000014c 	.word	0x2000014c

08000b98 <global_stdio_init.part.0>:
 8000b98:	b510      	push	{r4, lr}
 8000b9a:	4b0b      	ldr	r3, [pc, #44]	; (8000bc8 <global_stdio_init.part.0+0x30>)
 8000b9c:	4c0b      	ldr	r4, [pc, #44]	; (8000bcc <global_stdio_init.part.0+0x34>)
 8000b9e:	4a0c      	ldr	r2, [pc, #48]	; (8000bd0 <global_stdio_init.part.0+0x38>)
 8000ba0:	601a      	str	r2, [r3, #0]
 8000ba2:	4620      	mov	r0, r4
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	2104      	movs	r1, #4
 8000ba8:	f7ff ff94 	bl	8000ad4 <std>
 8000bac:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000bb0:	2201      	movs	r2, #1
 8000bb2:	2109      	movs	r1, #9
 8000bb4:	f7ff ff8e 	bl	8000ad4 <std>
 8000bb8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000bbc:	2202      	movs	r2, #2
 8000bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bc2:	2112      	movs	r1, #18
 8000bc4:	f7ff bf86 	b.w	8000ad4 <std>
 8000bc8:	200001b4 	.word	0x200001b4
 8000bcc:	2000007c 	.word	0x2000007c
 8000bd0:	08000b41 	.word	0x08000b41

08000bd4 <__sfp_lock_acquire>:
 8000bd4:	4801      	ldr	r0, [pc, #4]	; (8000bdc <__sfp_lock_acquire+0x8>)
 8000bd6:	f000 b9a0 	b.w	8000f1a <__retarget_lock_acquire_recursive>
 8000bda:	bf00      	nop
 8000bdc:	200001b9 	.word	0x200001b9

08000be0 <__sfp_lock_release>:
 8000be0:	4801      	ldr	r0, [pc, #4]	; (8000be8 <__sfp_lock_release+0x8>)
 8000be2:	f000 b99b 	b.w	8000f1c <__retarget_lock_release_recursive>
 8000be6:	bf00      	nop
 8000be8:	200001b9 	.word	0x200001b9

08000bec <__sinit>:
 8000bec:	b510      	push	{r4, lr}
 8000bee:	4604      	mov	r4, r0
 8000bf0:	f7ff fff0 	bl	8000bd4 <__sfp_lock_acquire>
 8000bf4:	6a23      	ldr	r3, [r4, #32]
 8000bf6:	b11b      	cbz	r3, 8000c00 <__sinit+0x14>
 8000bf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bfc:	f7ff bff0 	b.w	8000be0 <__sfp_lock_release>
 8000c00:	4b04      	ldr	r3, [pc, #16]	; (8000c14 <__sinit+0x28>)
 8000c02:	6223      	str	r3, [r4, #32]
 8000c04:	4b04      	ldr	r3, [pc, #16]	; (8000c18 <__sinit+0x2c>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d1f5      	bne.n	8000bf8 <__sinit+0xc>
 8000c0c:	f7ff ffc4 	bl	8000b98 <global_stdio_init.part.0>
 8000c10:	e7f2      	b.n	8000bf8 <__sinit+0xc>
 8000c12:	bf00      	nop
 8000c14:	08000b59 	.word	0x08000b59
 8000c18:	200001b4 	.word	0x200001b4

08000c1c <_fwalk_sglue>:
 8000c1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c20:	4607      	mov	r7, r0
 8000c22:	4688      	mov	r8, r1
 8000c24:	4614      	mov	r4, r2
 8000c26:	2600      	movs	r6, #0
 8000c28:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c2c:	f1b9 0901 	subs.w	r9, r9, #1
 8000c30:	d505      	bpl.n	8000c3e <_fwalk_sglue+0x22>
 8000c32:	6824      	ldr	r4, [r4, #0]
 8000c34:	2c00      	cmp	r4, #0
 8000c36:	d1f7      	bne.n	8000c28 <_fwalk_sglue+0xc>
 8000c38:	4630      	mov	r0, r6
 8000c3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c3e:	89ab      	ldrh	r3, [r5, #12]
 8000c40:	2b01      	cmp	r3, #1
 8000c42:	d907      	bls.n	8000c54 <_fwalk_sglue+0x38>
 8000c44:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c48:	3301      	adds	r3, #1
 8000c4a:	d003      	beq.n	8000c54 <_fwalk_sglue+0x38>
 8000c4c:	4629      	mov	r1, r5
 8000c4e:	4638      	mov	r0, r7
 8000c50:	47c0      	blx	r8
 8000c52:	4306      	orrs	r6, r0
 8000c54:	3568      	adds	r5, #104	; 0x68
 8000c56:	e7e9      	b.n	8000c2c <_fwalk_sglue+0x10>

08000c58 <__swbuf_r>:
 8000c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c5a:	460e      	mov	r6, r1
 8000c5c:	4614      	mov	r4, r2
 8000c5e:	4605      	mov	r5, r0
 8000c60:	b118      	cbz	r0, 8000c6a <__swbuf_r+0x12>
 8000c62:	6a03      	ldr	r3, [r0, #32]
 8000c64:	b90b      	cbnz	r3, 8000c6a <__swbuf_r+0x12>
 8000c66:	f7ff ffc1 	bl	8000bec <__sinit>
 8000c6a:	69a3      	ldr	r3, [r4, #24]
 8000c6c:	60a3      	str	r3, [r4, #8]
 8000c6e:	89a3      	ldrh	r3, [r4, #12]
 8000c70:	071a      	lsls	r2, r3, #28
 8000c72:	d525      	bpl.n	8000cc0 <__swbuf_r+0x68>
 8000c74:	6923      	ldr	r3, [r4, #16]
 8000c76:	b31b      	cbz	r3, 8000cc0 <__swbuf_r+0x68>
 8000c78:	6823      	ldr	r3, [r4, #0]
 8000c7a:	6922      	ldr	r2, [r4, #16]
 8000c7c:	1a98      	subs	r0, r3, r2
 8000c7e:	6963      	ldr	r3, [r4, #20]
 8000c80:	b2f6      	uxtb	r6, r6
 8000c82:	4283      	cmp	r3, r0
 8000c84:	4637      	mov	r7, r6
 8000c86:	dc04      	bgt.n	8000c92 <__swbuf_r+0x3a>
 8000c88:	4621      	mov	r1, r4
 8000c8a:	4628      	mov	r0, r5
 8000c8c:	f000 faba 	bl	8001204 <_fflush_r>
 8000c90:	b9e0      	cbnz	r0, 8000ccc <__swbuf_r+0x74>
 8000c92:	68a3      	ldr	r3, [r4, #8]
 8000c94:	3b01      	subs	r3, #1
 8000c96:	60a3      	str	r3, [r4, #8]
 8000c98:	6823      	ldr	r3, [r4, #0]
 8000c9a:	1c5a      	adds	r2, r3, #1
 8000c9c:	6022      	str	r2, [r4, #0]
 8000c9e:	701e      	strb	r6, [r3, #0]
 8000ca0:	6962      	ldr	r2, [r4, #20]
 8000ca2:	1c43      	adds	r3, r0, #1
 8000ca4:	429a      	cmp	r2, r3
 8000ca6:	d004      	beq.n	8000cb2 <__swbuf_r+0x5a>
 8000ca8:	89a3      	ldrh	r3, [r4, #12]
 8000caa:	07db      	lsls	r3, r3, #31
 8000cac:	d506      	bpl.n	8000cbc <__swbuf_r+0x64>
 8000cae:	2e0a      	cmp	r6, #10
 8000cb0:	d104      	bne.n	8000cbc <__swbuf_r+0x64>
 8000cb2:	4621      	mov	r1, r4
 8000cb4:	4628      	mov	r0, r5
 8000cb6:	f000 faa5 	bl	8001204 <_fflush_r>
 8000cba:	b938      	cbnz	r0, 8000ccc <__swbuf_r+0x74>
 8000cbc:	4638      	mov	r0, r7
 8000cbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cc0:	4621      	mov	r1, r4
 8000cc2:	4628      	mov	r0, r5
 8000cc4:	f000 f806 	bl	8000cd4 <__swsetup_r>
 8000cc8:	2800      	cmp	r0, #0
 8000cca:	d0d5      	beq.n	8000c78 <__swbuf_r+0x20>
 8000ccc:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000cd0:	e7f4      	b.n	8000cbc <__swbuf_r+0x64>
	...

08000cd4 <__swsetup_r>:
 8000cd4:	b538      	push	{r3, r4, r5, lr}
 8000cd6:	4b2a      	ldr	r3, [pc, #168]	; (8000d80 <__swsetup_r+0xac>)
 8000cd8:	4605      	mov	r5, r0
 8000cda:	6818      	ldr	r0, [r3, #0]
 8000cdc:	460c      	mov	r4, r1
 8000cde:	b118      	cbz	r0, 8000ce8 <__swsetup_r+0x14>
 8000ce0:	6a03      	ldr	r3, [r0, #32]
 8000ce2:	b90b      	cbnz	r3, 8000ce8 <__swsetup_r+0x14>
 8000ce4:	f7ff ff82 	bl	8000bec <__sinit>
 8000ce8:	89a3      	ldrh	r3, [r4, #12]
 8000cea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000cee:	0718      	lsls	r0, r3, #28
 8000cf0:	d422      	bmi.n	8000d38 <__swsetup_r+0x64>
 8000cf2:	06d9      	lsls	r1, r3, #27
 8000cf4:	d407      	bmi.n	8000d06 <__swsetup_r+0x32>
 8000cf6:	2309      	movs	r3, #9
 8000cf8:	602b      	str	r3, [r5, #0]
 8000cfa:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000cfe:	81a3      	strh	r3, [r4, #12]
 8000d00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d04:	e034      	b.n	8000d70 <__swsetup_r+0x9c>
 8000d06:	0758      	lsls	r0, r3, #29
 8000d08:	d512      	bpl.n	8000d30 <__swsetup_r+0x5c>
 8000d0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000d0c:	b141      	cbz	r1, 8000d20 <__swsetup_r+0x4c>
 8000d0e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000d12:	4299      	cmp	r1, r3
 8000d14:	d002      	beq.n	8000d1c <__swsetup_r+0x48>
 8000d16:	4628      	mov	r0, r5
 8000d18:	f000 f902 	bl	8000f20 <_free_r>
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	6363      	str	r3, [r4, #52]	; 0x34
 8000d20:	89a3      	ldrh	r3, [r4, #12]
 8000d22:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000d26:	81a3      	strh	r3, [r4, #12]
 8000d28:	2300      	movs	r3, #0
 8000d2a:	6063      	str	r3, [r4, #4]
 8000d2c:	6923      	ldr	r3, [r4, #16]
 8000d2e:	6023      	str	r3, [r4, #0]
 8000d30:	89a3      	ldrh	r3, [r4, #12]
 8000d32:	f043 0308 	orr.w	r3, r3, #8
 8000d36:	81a3      	strh	r3, [r4, #12]
 8000d38:	6923      	ldr	r3, [r4, #16]
 8000d3a:	b94b      	cbnz	r3, 8000d50 <__swsetup_r+0x7c>
 8000d3c:	89a3      	ldrh	r3, [r4, #12]
 8000d3e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000d42:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000d46:	d003      	beq.n	8000d50 <__swsetup_r+0x7c>
 8000d48:	4621      	mov	r1, r4
 8000d4a:	4628      	mov	r0, r5
 8000d4c:	f000 f840 	bl	8000dd0 <__smakebuf_r>
 8000d50:	89a0      	ldrh	r0, [r4, #12]
 8000d52:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000d56:	f010 0301 	ands.w	r3, r0, #1
 8000d5a:	d00a      	beq.n	8000d72 <__swsetup_r+0x9e>
 8000d5c:	2300      	movs	r3, #0
 8000d5e:	60a3      	str	r3, [r4, #8]
 8000d60:	6963      	ldr	r3, [r4, #20]
 8000d62:	425b      	negs	r3, r3
 8000d64:	61a3      	str	r3, [r4, #24]
 8000d66:	6923      	ldr	r3, [r4, #16]
 8000d68:	b943      	cbnz	r3, 8000d7c <__swsetup_r+0xa8>
 8000d6a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000d6e:	d1c4      	bne.n	8000cfa <__swsetup_r+0x26>
 8000d70:	bd38      	pop	{r3, r4, r5, pc}
 8000d72:	0781      	lsls	r1, r0, #30
 8000d74:	bf58      	it	pl
 8000d76:	6963      	ldrpl	r3, [r4, #20]
 8000d78:	60a3      	str	r3, [r4, #8]
 8000d7a:	e7f4      	b.n	8000d66 <__swsetup_r+0x92>
 8000d7c:	2000      	movs	r0, #0
 8000d7e:	e7f7      	b.n	8000d70 <__swsetup_r+0x9c>
 8000d80:	2000005c 	.word	0x2000005c

08000d84 <__swhatbuf_r>:
 8000d84:	b570      	push	{r4, r5, r6, lr}
 8000d86:	460c      	mov	r4, r1
 8000d88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d8c:	2900      	cmp	r1, #0
 8000d8e:	b096      	sub	sp, #88	; 0x58
 8000d90:	4615      	mov	r5, r2
 8000d92:	461e      	mov	r6, r3
 8000d94:	da0d      	bge.n	8000db2 <__swhatbuf_r+0x2e>
 8000d96:	89a3      	ldrh	r3, [r4, #12]
 8000d98:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000d9c:	f04f 0100 	mov.w	r1, #0
 8000da0:	bf0c      	ite	eq
 8000da2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8000da6:	2340      	movne	r3, #64	; 0x40
 8000da8:	2000      	movs	r0, #0
 8000daa:	6031      	str	r1, [r6, #0]
 8000dac:	602b      	str	r3, [r5, #0]
 8000dae:	b016      	add	sp, #88	; 0x58
 8000db0:	bd70      	pop	{r4, r5, r6, pc}
 8000db2:	466a      	mov	r2, sp
 8000db4:	f000 f86a 	bl	8000e8c <_fstat_r>
 8000db8:	2800      	cmp	r0, #0
 8000dba:	dbec      	blt.n	8000d96 <__swhatbuf_r+0x12>
 8000dbc:	9901      	ldr	r1, [sp, #4]
 8000dbe:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8000dc2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8000dc6:	4259      	negs	r1, r3
 8000dc8:	4159      	adcs	r1, r3
 8000dca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000dce:	e7eb      	b.n	8000da8 <__swhatbuf_r+0x24>

08000dd0 <__smakebuf_r>:
 8000dd0:	898b      	ldrh	r3, [r1, #12]
 8000dd2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000dd4:	079d      	lsls	r5, r3, #30
 8000dd6:	4606      	mov	r6, r0
 8000dd8:	460c      	mov	r4, r1
 8000dda:	d507      	bpl.n	8000dec <__smakebuf_r+0x1c>
 8000ddc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000de0:	6023      	str	r3, [r4, #0]
 8000de2:	6123      	str	r3, [r4, #16]
 8000de4:	2301      	movs	r3, #1
 8000de6:	6163      	str	r3, [r4, #20]
 8000de8:	b002      	add	sp, #8
 8000dea:	bd70      	pop	{r4, r5, r6, pc}
 8000dec:	ab01      	add	r3, sp, #4
 8000dee:	466a      	mov	r2, sp
 8000df0:	f7ff ffc8 	bl	8000d84 <__swhatbuf_r>
 8000df4:	9900      	ldr	r1, [sp, #0]
 8000df6:	4605      	mov	r5, r0
 8000df8:	4630      	mov	r0, r6
 8000dfa:	f000 f8fd 	bl	8000ff8 <_malloc_r>
 8000dfe:	b948      	cbnz	r0, 8000e14 <__smakebuf_r+0x44>
 8000e00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e04:	059a      	lsls	r2, r3, #22
 8000e06:	d4ef      	bmi.n	8000de8 <__smakebuf_r+0x18>
 8000e08:	f023 0303 	bic.w	r3, r3, #3
 8000e0c:	f043 0302 	orr.w	r3, r3, #2
 8000e10:	81a3      	strh	r3, [r4, #12]
 8000e12:	e7e3      	b.n	8000ddc <__smakebuf_r+0xc>
 8000e14:	89a3      	ldrh	r3, [r4, #12]
 8000e16:	6020      	str	r0, [r4, #0]
 8000e18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e1c:	81a3      	strh	r3, [r4, #12]
 8000e1e:	9b00      	ldr	r3, [sp, #0]
 8000e20:	6163      	str	r3, [r4, #20]
 8000e22:	9b01      	ldr	r3, [sp, #4]
 8000e24:	6120      	str	r0, [r4, #16]
 8000e26:	b15b      	cbz	r3, 8000e40 <__smakebuf_r+0x70>
 8000e28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e2c:	4630      	mov	r0, r6
 8000e2e:	f000 f83f 	bl	8000eb0 <_isatty_r>
 8000e32:	b128      	cbz	r0, 8000e40 <__smakebuf_r+0x70>
 8000e34:	89a3      	ldrh	r3, [r4, #12]
 8000e36:	f023 0303 	bic.w	r3, r3, #3
 8000e3a:	f043 0301 	orr.w	r3, r3, #1
 8000e3e:	81a3      	strh	r3, [r4, #12]
 8000e40:	89a3      	ldrh	r3, [r4, #12]
 8000e42:	431d      	orrs	r5, r3
 8000e44:	81a5      	strh	r5, [r4, #12]
 8000e46:	e7cf      	b.n	8000de8 <__smakebuf_r+0x18>

08000e48 <iprintf>:
 8000e48:	b40f      	push	{r0, r1, r2, r3}
 8000e4a:	b507      	push	{r0, r1, r2, lr}
 8000e4c:	4906      	ldr	r1, [pc, #24]	; (8000e68 <iprintf+0x20>)
 8000e4e:	ab04      	add	r3, sp, #16
 8000e50:	6808      	ldr	r0, [r1, #0]
 8000e52:	f853 2b04 	ldr.w	r2, [r3], #4
 8000e56:	6881      	ldr	r1, [r0, #8]
 8000e58:	9301      	str	r3, [sp, #4]
 8000e5a:	f7ff fb87 	bl	800056c <_vfiprintf_r>
 8000e5e:	b003      	add	sp, #12
 8000e60:	f85d eb04 	ldr.w	lr, [sp], #4
 8000e64:	b004      	add	sp, #16
 8000e66:	4770      	bx	lr
 8000e68:	2000005c 	.word	0x2000005c

08000e6c <putchar>:
 8000e6c:	4b02      	ldr	r3, [pc, #8]	; (8000e78 <putchar+0xc>)
 8000e6e:	4601      	mov	r1, r0
 8000e70:	6818      	ldr	r0, [r3, #0]
 8000e72:	6882      	ldr	r2, [r0, #8]
 8000e74:	f000 ba3d 	b.w	80012f2 <_putc_r>
 8000e78:	2000005c 	.word	0x2000005c

08000e7c <memset>:
 8000e7c:	4402      	add	r2, r0
 8000e7e:	4603      	mov	r3, r0
 8000e80:	4293      	cmp	r3, r2
 8000e82:	d100      	bne.n	8000e86 <memset+0xa>
 8000e84:	4770      	bx	lr
 8000e86:	f803 1b01 	strb.w	r1, [r3], #1
 8000e8a:	e7f9      	b.n	8000e80 <memset+0x4>

08000e8c <_fstat_r>:
 8000e8c:	b538      	push	{r3, r4, r5, lr}
 8000e8e:	4d07      	ldr	r5, [pc, #28]	; (8000eac <_fstat_r+0x20>)
 8000e90:	2300      	movs	r3, #0
 8000e92:	4604      	mov	r4, r0
 8000e94:	4608      	mov	r0, r1
 8000e96:	4611      	mov	r1, r2
 8000e98:	602b      	str	r3, [r5, #0]
 8000e9a:	f000 fabd 	bl	8001418 <_fstat>
 8000e9e:	1c43      	adds	r3, r0, #1
 8000ea0:	d102      	bne.n	8000ea8 <_fstat_r+0x1c>
 8000ea2:	682b      	ldr	r3, [r5, #0]
 8000ea4:	b103      	cbz	r3, 8000ea8 <_fstat_r+0x1c>
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	bd38      	pop	{r3, r4, r5, pc}
 8000eaa:	bf00      	nop
 8000eac:	200001c4 	.word	0x200001c4

08000eb0 <_isatty_r>:
 8000eb0:	b538      	push	{r3, r4, r5, lr}
 8000eb2:	4d06      	ldr	r5, [pc, #24]	; (8000ecc <_isatty_r+0x1c>)
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	4604      	mov	r4, r0
 8000eb8:	4608      	mov	r0, r1
 8000eba:	602b      	str	r3, [r5, #0]
 8000ebc:	f000 fab4 	bl	8001428 <_isatty>
 8000ec0:	1c43      	adds	r3, r0, #1
 8000ec2:	d102      	bne.n	8000eca <_isatty_r+0x1a>
 8000ec4:	682b      	ldr	r3, [r5, #0]
 8000ec6:	b103      	cbz	r3, 8000eca <_isatty_r+0x1a>
 8000ec8:	6023      	str	r3, [r4, #0]
 8000eca:	bd38      	pop	{r3, r4, r5, pc}
 8000ecc:	200001c4 	.word	0x200001c4

08000ed0 <__libc_init_array>:
 8000ed0:	b570      	push	{r4, r5, r6, lr}
 8000ed2:	4d0d      	ldr	r5, [pc, #52]	; (8000f08 <__libc_init_array+0x38>)
 8000ed4:	4c0d      	ldr	r4, [pc, #52]	; (8000f0c <__libc_init_array+0x3c>)
 8000ed6:	1b64      	subs	r4, r4, r5
 8000ed8:	10a4      	asrs	r4, r4, #2
 8000eda:	2600      	movs	r6, #0
 8000edc:	42a6      	cmp	r6, r4
 8000ede:	d109      	bne.n	8000ef4 <__libc_init_array+0x24>
 8000ee0:	4d0b      	ldr	r5, [pc, #44]	; (8000f10 <__libc_init_array+0x40>)
 8000ee2:	4c0c      	ldr	r4, [pc, #48]	; (8000f14 <__libc_init_array+0x44>)
 8000ee4:	f000 fac6 	bl	8001474 <_init>
 8000ee8:	1b64      	subs	r4, r4, r5
 8000eea:	10a4      	asrs	r4, r4, #2
 8000eec:	2600      	movs	r6, #0
 8000eee:	42a6      	cmp	r6, r4
 8000ef0:	d105      	bne.n	8000efe <__libc_init_array+0x2e>
 8000ef2:	bd70      	pop	{r4, r5, r6, pc}
 8000ef4:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ef8:	4798      	blx	r3
 8000efa:	3601      	adds	r6, #1
 8000efc:	e7ee      	b.n	8000edc <__libc_init_array+0xc>
 8000efe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f02:	4798      	blx	r3
 8000f04:	3601      	adds	r6, #1
 8000f06:	e7f2      	b.n	8000eee <__libc_init_array+0x1e>
 8000f08:	08001510 	.word	0x08001510
 8000f0c:	08001510 	.word	0x08001510
 8000f10:	08001510 	.word	0x08001510
 8000f14:	08001514 	.word	0x08001514

08000f18 <__retarget_lock_init_recursive>:
 8000f18:	4770      	bx	lr

08000f1a <__retarget_lock_acquire_recursive>:
 8000f1a:	4770      	bx	lr

08000f1c <__retarget_lock_release_recursive>:
 8000f1c:	4770      	bx	lr
	...

08000f20 <_free_r>:
 8000f20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000f22:	2900      	cmp	r1, #0
 8000f24:	d044      	beq.n	8000fb0 <_free_r+0x90>
 8000f26:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f2a:	9001      	str	r0, [sp, #4]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	f1a1 0404 	sub.w	r4, r1, #4
 8000f32:	bfb8      	it	lt
 8000f34:	18e4      	addlt	r4, r4, r3
 8000f36:	f000 f98d 	bl	8001254 <__malloc_lock>
 8000f3a:	4a1e      	ldr	r2, [pc, #120]	; (8000fb4 <_free_r+0x94>)
 8000f3c:	9801      	ldr	r0, [sp, #4]
 8000f3e:	6813      	ldr	r3, [r2, #0]
 8000f40:	b933      	cbnz	r3, 8000f50 <_free_r+0x30>
 8000f42:	6063      	str	r3, [r4, #4]
 8000f44:	6014      	str	r4, [r2, #0]
 8000f46:	b003      	add	sp, #12
 8000f48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000f4c:	f000 b988 	b.w	8001260 <__malloc_unlock>
 8000f50:	42a3      	cmp	r3, r4
 8000f52:	d908      	bls.n	8000f66 <_free_r+0x46>
 8000f54:	6825      	ldr	r5, [r4, #0]
 8000f56:	1961      	adds	r1, r4, r5
 8000f58:	428b      	cmp	r3, r1
 8000f5a:	bf01      	itttt	eq
 8000f5c:	6819      	ldreq	r1, [r3, #0]
 8000f5e:	685b      	ldreq	r3, [r3, #4]
 8000f60:	1949      	addeq	r1, r1, r5
 8000f62:	6021      	streq	r1, [r4, #0]
 8000f64:	e7ed      	b.n	8000f42 <_free_r+0x22>
 8000f66:	461a      	mov	r2, r3
 8000f68:	685b      	ldr	r3, [r3, #4]
 8000f6a:	b10b      	cbz	r3, 8000f70 <_free_r+0x50>
 8000f6c:	42a3      	cmp	r3, r4
 8000f6e:	d9fa      	bls.n	8000f66 <_free_r+0x46>
 8000f70:	6811      	ldr	r1, [r2, #0]
 8000f72:	1855      	adds	r5, r2, r1
 8000f74:	42a5      	cmp	r5, r4
 8000f76:	d10b      	bne.n	8000f90 <_free_r+0x70>
 8000f78:	6824      	ldr	r4, [r4, #0]
 8000f7a:	4421      	add	r1, r4
 8000f7c:	1854      	adds	r4, r2, r1
 8000f7e:	42a3      	cmp	r3, r4
 8000f80:	6011      	str	r1, [r2, #0]
 8000f82:	d1e0      	bne.n	8000f46 <_free_r+0x26>
 8000f84:	681c      	ldr	r4, [r3, #0]
 8000f86:	685b      	ldr	r3, [r3, #4]
 8000f88:	6053      	str	r3, [r2, #4]
 8000f8a:	440c      	add	r4, r1
 8000f8c:	6014      	str	r4, [r2, #0]
 8000f8e:	e7da      	b.n	8000f46 <_free_r+0x26>
 8000f90:	d902      	bls.n	8000f98 <_free_r+0x78>
 8000f92:	230c      	movs	r3, #12
 8000f94:	6003      	str	r3, [r0, #0]
 8000f96:	e7d6      	b.n	8000f46 <_free_r+0x26>
 8000f98:	6825      	ldr	r5, [r4, #0]
 8000f9a:	1961      	adds	r1, r4, r5
 8000f9c:	428b      	cmp	r3, r1
 8000f9e:	bf04      	itt	eq
 8000fa0:	6819      	ldreq	r1, [r3, #0]
 8000fa2:	685b      	ldreq	r3, [r3, #4]
 8000fa4:	6063      	str	r3, [r4, #4]
 8000fa6:	bf04      	itt	eq
 8000fa8:	1949      	addeq	r1, r1, r5
 8000faa:	6021      	streq	r1, [r4, #0]
 8000fac:	6054      	str	r4, [r2, #4]
 8000fae:	e7ca      	b.n	8000f46 <_free_r+0x26>
 8000fb0:	b003      	add	sp, #12
 8000fb2:	bd30      	pop	{r4, r5, pc}
 8000fb4:	200001bc 	.word	0x200001bc

08000fb8 <sbrk_aligned>:
 8000fb8:	b570      	push	{r4, r5, r6, lr}
 8000fba:	4e0e      	ldr	r6, [pc, #56]	; (8000ff4 <sbrk_aligned+0x3c>)
 8000fbc:	460c      	mov	r4, r1
 8000fbe:	6831      	ldr	r1, [r6, #0]
 8000fc0:	4605      	mov	r5, r0
 8000fc2:	b911      	cbnz	r1, 8000fca <sbrk_aligned+0x12>
 8000fc4:	f000 f9fe 	bl	80013c4 <_sbrk_r>
 8000fc8:	6030      	str	r0, [r6, #0]
 8000fca:	4621      	mov	r1, r4
 8000fcc:	4628      	mov	r0, r5
 8000fce:	f000 f9f9 	bl	80013c4 <_sbrk_r>
 8000fd2:	1c43      	adds	r3, r0, #1
 8000fd4:	d00a      	beq.n	8000fec <sbrk_aligned+0x34>
 8000fd6:	1cc4      	adds	r4, r0, #3
 8000fd8:	f024 0403 	bic.w	r4, r4, #3
 8000fdc:	42a0      	cmp	r0, r4
 8000fde:	d007      	beq.n	8000ff0 <sbrk_aligned+0x38>
 8000fe0:	1a21      	subs	r1, r4, r0
 8000fe2:	4628      	mov	r0, r5
 8000fe4:	f000 f9ee 	bl	80013c4 <_sbrk_r>
 8000fe8:	3001      	adds	r0, #1
 8000fea:	d101      	bne.n	8000ff0 <sbrk_aligned+0x38>
 8000fec:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000ff0:	4620      	mov	r0, r4
 8000ff2:	bd70      	pop	{r4, r5, r6, pc}
 8000ff4:	200001c0 	.word	0x200001c0

08000ff8 <_malloc_r>:
 8000ff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ffc:	1ccd      	adds	r5, r1, #3
 8000ffe:	f025 0503 	bic.w	r5, r5, #3
 8001002:	3508      	adds	r5, #8
 8001004:	2d0c      	cmp	r5, #12
 8001006:	bf38      	it	cc
 8001008:	250c      	movcc	r5, #12
 800100a:	2d00      	cmp	r5, #0
 800100c:	4607      	mov	r7, r0
 800100e:	db01      	blt.n	8001014 <_malloc_r+0x1c>
 8001010:	42a9      	cmp	r1, r5
 8001012:	d905      	bls.n	8001020 <_malloc_r+0x28>
 8001014:	230c      	movs	r3, #12
 8001016:	603b      	str	r3, [r7, #0]
 8001018:	2600      	movs	r6, #0
 800101a:	4630      	mov	r0, r6
 800101c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001020:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80010f4 <_malloc_r+0xfc>
 8001024:	f000 f916 	bl	8001254 <__malloc_lock>
 8001028:	f8d8 3000 	ldr.w	r3, [r8]
 800102c:	461c      	mov	r4, r3
 800102e:	bb5c      	cbnz	r4, 8001088 <_malloc_r+0x90>
 8001030:	4629      	mov	r1, r5
 8001032:	4638      	mov	r0, r7
 8001034:	f7ff ffc0 	bl	8000fb8 <sbrk_aligned>
 8001038:	1c43      	adds	r3, r0, #1
 800103a:	4604      	mov	r4, r0
 800103c:	d155      	bne.n	80010ea <_malloc_r+0xf2>
 800103e:	f8d8 4000 	ldr.w	r4, [r8]
 8001042:	4626      	mov	r6, r4
 8001044:	2e00      	cmp	r6, #0
 8001046:	d145      	bne.n	80010d4 <_malloc_r+0xdc>
 8001048:	2c00      	cmp	r4, #0
 800104a:	d048      	beq.n	80010de <_malloc_r+0xe6>
 800104c:	6823      	ldr	r3, [r4, #0]
 800104e:	4631      	mov	r1, r6
 8001050:	4638      	mov	r0, r7
 8001052:	eb04 0903 	add.w	r9, r4, r3
 8001056:	f000 f9b5 	bl	80013c4 <_sbrk_r>
 800105a:	4581      	cmp	r9, r0
 800105c:	d13f      	bne.n	80010de <_malloc_r+0xe6>
 800105e:	6821      	ldr	r1, [r4, #0]
 8001060:	1a6d      	subs	r5, r5, r1
 8001062:	4629      	mov	r1, r5
 8001064:	4638      	mov	r0, r7
 8001066:	f7ff ffa7 	bl	8000fb8 <sbrk_aligned>
 800106a:	3001      	adds	r0, #1
 800106c:	d037      	beq.n	80010de <_malloc_r+0xe6>
 800106e:	6823      	ldr	r3, [r4, #0]
 8001070:	442b      	add	r3, r5
 8001072:	6023      	str	r3, [r4, #0]
 8001074:	f8d8 3000 	ldr.w	r3, [r8]
 8001078:	2b00      	cmp	r3, #0
 800107a:	d038      	beq.n	80010ee <_malloc_r+0xf6>
 800107c:	685a      	ldr	r2, [r3, #4]
 800107e:	42a2      	cmp	r2, r4
 8001080:	d12b      	bne.n	80010da <_malloc_r+0xe2>
 8001082:	2200      	movs	r2, #0
 8001084:	605a      	str	r2, [r3, #4]
 8001086:	e00f      	b.n	80010a8 <_malloc_r+0xb0>
 8001088:	6822      	ldr	r2, [r4, #0]
 800108a:	1b52      	subs	r2, r2, r5
 800108c:	d41f      	bmi.n	80010ce <_malloc_r+0xd6>
 800108e:	2a0b      	cmp	r2, #11
 8001090:	d917      	bls.n	80010c2 <_malloc_r+0xca>
 8001092:	1961      	adds	r1, r4, r5
 8001094:	42a3      	cmp	r3, r4
 8001096:	6025      	str	r5, [r4, #0]
 8001098:	bf18      	it	ne
 800109a:	6059      	strne	r1, [r3, #4]
 800109c:	6863      	ldr	r3, [r4, #4]
 800109e:	bf08      	it	eq
 80010a0:	f8c8 1000 	streq.w	r1, [r8]
 80010a4:	5162      	str	r2, [r4, r5]
 80010a6:	604b      	str	r3, [r1, #4]
 80010a8:	4638      	mov	r0, r7
 80010aa:	f104 060b 	add.w	r6, r4, #11
 80010ae:	f000 f8d7 	bl	8001260 <__malloc_unlock>
 80010b2:	f026 0607 	bic.w	r6, r6, #7
 80010b6:	1d23      	adds	r3, r4, #4
 80010b8:	1af2      	subs	r2, r6, r3
 80010ba:	d0ae      	beq.n	800101a <_malloc_r+0x22>
 80010bc:	1b9b      	subs	r3, r3, r6
 80010be:	50a3      	str	r3, [r4, r2]
 80010c0:	e7ab      	b.n	800101a <_malloc_r+0x22>
 80010c2:	42a3      	cmp	r3, r4
 80010c4:	6862      	ldr	r2, [r4, #4]
 80010c6:	d1dd      	bne.n	8001084 <_malloc_r+0x8c>
 80010c8:	f8c8 2000 	str.w	r2, [r8]
 80010cc:	e7ec      	b.n	80010a8 <_malloc_r+0xb0>
 80010ce:	4623      	mov	r3, r4
 80010d0:	6864      	ldr	r4, [r4, #4]
 80010d2:	e7ac      	b.n	800102e <_malloc_r+0x36>
 80010d4:	4634      	mov	r4, r6
 80010d6:	6876      	ldr	r6, [r6, #4]
 80010d8:	e7b4      	b.n	8001044 <_malloc_r+0x4c>
 80010da:	4613      	mov	r3, r2
 80010dc:	e7cc      	b.n	8001078 <_malloc_r+0x80>
 80010de:	230c      	movs	r3, #12
 80010e0:	603b      	str	r3, [r7, #0]
 80010e2:	4638      	mov	r0, r7
 80010e4:	f000 f8bc 	bl	8001260 <__malloc_unlock>
 80010e8:	e797      	b.n	800101a <_malloc_r+0x22>
 80010ea:	6025      	str	r5, [r4, #0]
 80010ec:	e7dc      	b.n	80010a8 <_malloc_r+0xb0>
 80010ee:	605b      	str	r3, [r3, #4]
 80010f0:	deff      	udf	#255	; 0xff
 80010f2:	bf00      	nop
 80010f4:	200001bc 	.word	0x200001bc

080010f8 <__sflush_r>:
 80010f8:	898a      	ldrh	r2, [r1, #12]
 80010fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010fe:	4605      	mov	r5, r0
 8001100:	0710      	lsls	r0, r2, #28
 8001102:	460c      	mov	r4, r1
 8001104:	d458      	bmi.n	80011b8 <__sflush_r+0xc0>
 8001106:	684b      	ldr	r3, [r1, #4]
 8001108:	2b00      	cmp	r3, #0
 800110a:	dc05      	bgt.n	8001118 <__sflush_r+0x20>
 800110c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800110e:	2b00      	cmp	r3, #0
 8001110:	dc02      	bgt.n	8001118 <__sflush_r+0x20>
 8001112:	2000      	movs	r0, #0
 8001114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001118:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800111a:	2e00      	cmp	r6, #0
 800111c:	d0f9      	beq.n	8001112 <__sflush_r+0x1a>
 800111e:	2300      	movs	r3, #0
 8001120:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001124:	682f      	ldr	r7, [r5, #0]
 8001126:	6a21      	ldr	r1, [r4, #32]
 8001128:	602b      	str	r3, [r5, #0]
 800112a:	d032      	beq.n	8001192 <__sflush_r+0x9a>
 800112c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800112e:	89a3      	ldrh	r3, [r4, #12]
 8001130:	075a      	lsls	r2, r3, #29
 8001132:	d505      	bpl.n	8001140 <__sflush_r+0x48>
 8001134:	6863      	ldr	r3, [r4, #4]
 8001136:	1ac0      	subs	r0, r0, r3
 8001138:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800113a:	b10b      	cbz	r3, 8001140 <__sflush_r+0x48>
 800113c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800113e:	1ac0      	subs	r0, r0, r3
 8001140:	2300      	movs	r3, #0
 8001142:	4602      	mov	r2, r0
 8001144:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001146:	6a21      	ldr	r1, [r4, #32]
 8001148:	4628      	mov	r0, r5
 800114a:	47b0      	blx	r6
 800114c:	1c43      	adds	r3, r0, #1
 800114e:	89a3      	ldrh	r3, [r4, #12]
 8001150:	d106      	bne.n	8001160 <__sflush_r+0x68>
 8001152:	6829      	ldr	r1, [r5, #0]
 8001154:	291d      	cmp	r1, #29
 8001156:	d82b      	bhi.n	80011b0 <__sflush_r+0xb8>
 8001158:	4a29      	ldr	r2, [pc, #164]	; (8001200 <__sflush_r+0x108>)
 800115a:	410a      	asrs	r2, r1
 800115c:	07d6      	lsls	r6, r2, #31
 800115e:	d427      	bmi.n	80011b0 <__sflush_r+0xb8>
 8001160:	2200      	movs	r2, #0
 8001162:	6062      	str	r2, [r4, #4]
 8001164:	04d9      	lsls	r1, r3, #19
 8001166:	6922      	ldr	r2, [r4, #16]
 8001168:	6022      	str	r2, [r4, #0]
 800116a:	d504      	bpl.n	8001176 <__sflush_r+0x7e>
 800116c:	1c42      	adds	r2, r0, #1
 800116e:	d101      	bne.n	8001174 <__sflush_r+0x7c>
 8001170:	682b      	ldr	r3, [r5, #0]
 8001172:	b903      	cbnz	r3, 8001176 <__sflush_r+0x7e>
 8001174:	6560      	str	r0, [r4, #84]	; 0x54
 8001176:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001178:	602f      	str	r7, [r5, #0]
 800117a:	2900      	cmp	r1, #0
 800117c:	d0c9      	beq.n	8001112 <__sflush_r+0x1a>
 800117e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001182:	4299      	cmp	r1, r3
 8001184:	d002      	beq.n	800118c <__sflush_r+0x94>
 8001186:	4628      	mov	r0, r5
 8001188:	f7ff feca 	bl	8000f20 <_free_r>
 800118c:	2000      	movs	r0, #0
 800118e:	6360      	str	r0, [r4, #52]	; 0x34
 8001190:	e7c0      	b.n	8001114 <__sflush_r+0x1c>
 8001192:	2301      	movs	r3, #1
 8001194:	4628      	mov	r0, r5
 8001196:	47b0      	blx	r6
 8001198:	1c41      	adds	r1, r0, #1
 800119a:	d1c8      	bne.n	800112e <__sflush_r+0x36>
 800119c:	682b      	ldr	r3, [r5, #0]
 800119e:	2b00      	cmp	r3, #0
 80011a0:	d0c5      	beq.n	800112e <__sflush_r+0x36>
 80011a2:	2b1d      	cmp	r3, #29
 80011a4:	d001      	beq.n	80011aa <__sflush_r+0xb2>
 80011a6:	2b16      	cmp	r3, #22
 80011a8:	d101      	bne.n	80011ae <__sflush_r+0xb6>
 80011aa:	602f      	str	r7, [r5, #0]
 80011ac:	e7b1      	b.n	8001112 <__sflush_r+0x1a>
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	e7ad      	b.n	8001114 <__sflush_r+0x1c>
 80011b8:	690f      	ldr	r7, [r1, #16]
 80011ba:	2f00      	cmp	r7, #0
 80011bc:	d0a9      	beq.n	8001112 <__sflush_r+0x1a>
 80011be:	0793      	lsls	r3, r2, #30
 80011c0:	680e      	ldr	r6, [r1, #0]
 80011c2:	bf08      	it	eq
 80011c4:	694b      	ldreq	r3, [r1, #20]
 80011c6:	600f      	str	r7, [r1, #0]
 80011c8:	bf18      	it	ne
 80011ca:	2300      	movne	r3, #0
 80011cc:	eba6 0807 	sub.w	r8, r6, r7
 80011d0:	608b      	str	r3, [r1, #8]
 80011d2:	f1b8 0f00 	cmp.w	r8, #0
 80011d6:	dd9c      	ble.n	8001112 <__sflush_r+0x1a>
 80011d8:	6a21      	ldr	r1, [r4, #32]
 80011da:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011dc:	4643      	mov	r3, r8
 80011de:	463a      	mov	r2, r7
 80011e0:	4628      	mov	r0, r5
 80011e2:	47b0      	blx	r6
 80011e4:	2800      	cmp	r0, #0
 80011e6:	dc06      	bgt.n	80011f6 <__sflush_r+0xfe>
 80011e8:	89a3      	ldrh	r3, [r4, #12]
 80011ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011ee:	81a3      	strh	r3, [r4, #12]
 80011f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011f4:	e78e      	b.n	8001114 <__sflush_r+0x1c>
 80011f6:	4407      	add	r7, r0
 80011f8:	eba8 0800 	sub.w	r8, r8, r0
 80011fc:	e7e9      	b.n	80011d2 <__sflush_r+0xda>
 80011fe:	bf00      	nop
 8001200:	dfbffffe 	.word	0xdfbffffe

08001204 <_fflush_r>:
 8001204:	b538      	push	{r3, r4, r5, lr}
 8001206:	690b      	ldr	r3, [r1, #16]
 8001208:	4605      	mov	r5, r0
 800120a:	460c      	mov	r4, r1
 800120c:	b913      	cbnz	r3, 8001214 <_fflush_r+0x10>
 800120e:	2500      	movs	r5, #0
 8001210:	4628      	mov	r0, r5
 8001212:	bd38      	pop	{r3, r4, r5, pc}
 8001214:	b118      	cbz	r0, 800121e <_fflush_r+0x1a>
 8001216:	6a03      	ldr	r3, [r0, #32]
 8001218:	b90b      	cbnz	r3, 800121e <_fflush_r+0x1a>
 800121a:	f7ff fce7 	bl	8000bec <__sinit>
 800121e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001222:	2b00      	cmp	r3, #0
 8001224:	d0f3      	beq.n	800120e <_fflush_r+0xa>
 8001226:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001228:	07d0      	lsls	r0, r2, #31
 800122a:	d404      	bmi.n	8001236 <_fflush_r+0x32>
 800122c:	0599      	lsls	r1, r3, #22
 800122e:	d402      	bmi.n	8001236 <_fflush_r+0x32>
 8001230:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001232:	f7ff fe72 	bl	8000f1a <__retarget_lock_acquire_recursive>
 8001236:	4628      	mov	r0, r5
 8001238:	4621      	mov	r1, r4
 800123a:	f7ff ff5d 	bl	80010f8 <__sflush_r>
 800123e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001240:	07da      	lsls	r2, r3, #31
 8001242:	4605      	mov	r5, r0
 8001244:	d4e4      	bmi.n	8001210 <_fflush_r+0xc>
 8001246:	89a3      	ldrh	r3, [r4, #12]
 8001248:	059b      	lsls	r3, r3, #22
 800124a:	d4e1      	bmi.n	8001210 <_fflush_r+0xc>
 800124c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800124e:	f7ff fe65 	bl	8000f1c <__retarget_lock_release_recursive>
 8001252:	e7dd      	b.n	8001210 <_fflush_r+0xc>

08001254 <__malloc_lock>:
 8001254:	4801      	ldr	r0, [pc, #4]	; (800125c <__malloc_lock+0x8>)
 8001256:	f7ff be60 	b.w	8000f1a <__retarget_lock_acquire_recursive>
 800125a:	bf00      	nop
 800125c:	200001b8 	.word	0x200001b8

08001260 <__malloc_unlock>:
 8001260:	4801      	ldr	r0, [pc, #4]	; (8001268 <__malloc_unlock+0x8>)
 8001262:	f7ff be5b 	b.w	8000f1c <__retarget_lock_release_recursive>
 8001266:	bf00      	nop
 8001268:	200001b8 	.word	0x200001b8

0800126c <__sread>:
 800126c:	b510      	push	{r4, lr}
 800126e:	460c      	mov	r4, r1
 8001270:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001274:	f000 f894 	bl	80013a0 <_read_r>
 8001278:	2800      	cmp	r0, #0
 800127a:	bfab      	itete	ge
 800127c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800127e:	89a3      	ldrhlt	r3, [r4, #12]
 8001280:	181b      	addge	r3, r3, r0
 8001282:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001286:	bfac      	ite	ge
 8001288:	6563      	strge	r3, [r4, #84]	; 0x54
 800128a:	81a3      	strhlt	r3, [r4, #12]
 800128c:	bd10      	pop	{r4, pc}

0800128e <__swrite>:
 800128e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001292:	461f      	mov	r7, r3
 8001294:	898b      	ldrh	r3, [r1, #12]
 8001296:	05db      	lsls	r3, r3, #23
 8001298:	4605      	mov	r5, r0
 800129a:	460c      	mov	r4, r1
 800129c:	4616      	mov	r6, r2
 800129e:	d505      	bpl.n	80012ac <__swrite+0x1e>
 80012a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012a4:	2302      	movs	r3, #2
 80012a6:	2200      	movs	r2, #0
 80012a8:	f000 f868 	bl	800137c <_lseek_r>
 80012ac:	89a3      	ldrh	r3, [r4, #12]
 80012ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012b6:	81a3      	strh	r3, [r4, #12]
 80012b8:	4632      	mov	r2, r6
 80012ba:	463b      	mov	r3, r7
 80012bc:	4628      	mov	r0, r5
 80012be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012c2:	f000 b88f 	b.w	80013e4 <_write_r>

080012c6 <__sseek>:
 80012c6:	b510      	push	{r4, lr}
 80012c8:	460c      	mov	r4, r1
 80012ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012ce:	f000 f855 	bl	800137c <_lseek_r>
 80012d2:	1c43      	adds	r3, r0, #1
 80012d4:	89a3      	ldrh	r3, [r4, #12]
 80012d6:	bf15      	itete	ne
 80012d8:	6560      	strne	r0, [r4, #84]	; 0x54
 80012da:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80012de:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80012e2:	81a3      	strheq	r3, [r4, #12]
 80012e4:	bf18      	it	ne
 80012e6:	81a3      	strhne	r3, [r4, #12]
 80012e8:	bd10      	pop	{r4, pc}

080012ea <__sclose>:
 80012ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012ee:	f000 b835 	b.w	800135c <_close_r>

080012f2 <_putc_r>:
 80012f2:	b570      	push	{r4, r5, r6, lr}
 80012f4:	460d      	mov	r5, r1
 80012f6:	4614      	mov	r4, r2
 80012f8:	4606      	mov	r6, r0
 80012fa:	b118      	cbz	r0, 8001304 <_putc_r+0x12>
 80012fc:	6a03      	ldr	r3, [r0, #32]
 80012fe:	b90b      	cbnz	r3, 8001304 <_putc_r+0x12>
 8001300:	f7ff fc74 	bl	8000bec <__sinit>
 8001304:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001306:	07d8      	lsls	r0, r3, #31
 8001308:	d405      	bmi.n	8001316 <_putc_r+0x24>
 800130a:	89a3      	ldrh	r3, [r4, #12]
 800130c:	0599      	lsls	r1, r3, #22
 800130e:	d402      	bmi.n	8001316 <_putc_r+0x24>
 8001310:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001312:	f7ff fe02 	bl	8000f1a <__retarget_lock_acquire_recursive>
 8001316:	68a3      	ldr	r3, [r4, #8]
 8001318:	3b01      	subs	r3, #1
 800131a:	2b00      	cmp	r3, #0
 800131c:	60a3      	str	r3, [r4, #8]
 800131e:	da05      	bge.n	800132c <_putc_r+0x3a>
 8001320:	69a2      	ldr	r2, [r4, #24]
 8001322:	4293      	cmp	r3, r2
 8001324:	db12      	blt.n	800134c <_putc_r+0x5a>
 8001326:	b2eb      	uxtb	r3, r5
 8001328:	2b0a      	cmp	r3, #10
 800132a:	d00f      	beq.n	800134c <_putc_r+0x5a>
 800132c:	6823      	ldr	r3, [r4, #0]
 800132e:	1c5a      	adds	r2, r3, #1
 8001330:	6022      	str	r2, [r4, #0]
 8001332:	701d      	strb	r5, [r3, #0]
 8001334:	b2ed      	uxtb	r5, r5
 8001336:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001338:	07da      	lsls	r2, r3, #31
 800133a:	d405      	bmi.n	8001348 <_putc_r+0x56>
 800133c:	89a3      	ldrh	r3, [r4, #12]
 800133e:	059b      	lsls	r3, r3, #22
 8001340:	d402      	bmi.n	8001348 <_putc_r+0x56>
 8001342:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001344:	f7ff fdea 	bl	8000f1c <__retarget_lock_release_recursive>
 8001348:	4628      	mov	r0, r5
 800134a:	bd70      	pop	{r4, r5, r6, pc}
 800134c:	4629      	mov	r1, r5
 800134e:	4622      	mov	r2, r4
 8001350:	4630      	mov	r0, r6
 8001352:	f7ff fc81 	bl	8000c58 <__swbuf_r>
 8001356:	4605      	mov	r5, r0
 8001358:	e7ed      	b.n	8001336 <_putc_r+0x44>
	...

0800135c <_close_r>:
 800135c:	b538      	push	{r3, r4, r5, lr}
 800135e:	4d06      	ldr	r5, [pc, #24]	; (8001378 <_close_r+0x1c>)
 8001360:	2300      	movs	r3, #0
 8001362:	4604      	mov	r4, r0
 8001364:	4608      	mov	r0, r1
 8001366:	602b      	str	r3, [r5, #0]
 8001368:	f000 f84e 	bl	8001408 <_close>
 800136c:	1c43      	adds	r3, r0, #1
 800136e:	d102      	bne.n	8001376 <_close_r+0x1a>
 8001370:	682b      	ldr	r3, [r5, #0]
 8001372:	b103      	cbz	r3, 8001376 <_close_r+0x1a>
 8001374:	6023      	str	r3, [r4, #0]
 8001376:	bd38      	pop	{r3, r4, r5, pc}
 8001378:	200001c4 	.word	0x200001c4

0800137c <_lseek_r>:
 800137c:	b538      	push	{r3, r4, r5, lr}
 800137e:	4d07      	ldr	r5, [pc, #28]	; (800139c <_lseek_r+0x20>)
 8001380:	4604      	mov	r4, r0
 8001382:	4608      	mov	r0, r1
 8001384:	4611      	mov	r1, r2
 8001386:	2200      	movs	r2, #0
 8001388:	602a      	str	r2, [r5, #0]
 800138a:	461a      	mov	r2, r3
 800138c:	f000 f854 	bl	8001438 <_lseek>
 8001390:	1c43      	adds	r3, r0, #1
 8001392:	d102      	bne.n	800139a <_lseek_r+0x1e>
 8001394:	682b      	ldr	r3, [r5, #0]
 8001396:	b103      	cbz	r3, 800139a <_lseek_r+0x1e>
 8001398:	6023      	str	r3, [r4, #0]
 800139a:	bd38      	pop	{r3, r4, r5, pc}
 800139c:	200001c4 	.word	0x200001c4

080013a0 <_read_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4d07      	ldr	r5, [pc, #28]	; (80013c0 <_read_r+0x20>)
 80013a4:	4604      	mov	r4, r0
 80013a6:	4608      	mov	r0, r1
 80013a8:	4611      	mov	r1, r2
 80013aa:	2200      	movs	r2, #0
 80013ac:	602a      	str	r2, [r5, #0]
 80013ae:	461a      	mov	r2, r3
 80013b0:	f000 f84a 	bl	8001448 <_read>
 80013b4:	1c43      	adds	r3, r0, #1
 80013b6:	d102      	bne.n	80013be <_read_r+0x1e>
 80013b8:	682b      	ldr	r3, [r5, #0]
 80013ba:	b103      	cbz	r3, 80013be <_read_r+0x1e>
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	bd38      	pop	{r3, r4, r5, pc}
 80013c0:	200001c4 	.word	0x200001c4

080013c4 <_sbrk_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4d06      	ldr	r5, [pc, #24]	; (80013e0 <_sbrk_r+0x1c>)
 80013c8:	2300      	movs	r3, #0
 80013ca:	4604      	mov	r4, r0
 80013cc:	4608      	mov	r0, r1
 80013ce:	602b      	str	r3, [r5, #0]
 80013d0:	f000 f842 	bl	8001458 <_sbrk>
 80013d4:	1c43      	adds	r3, r0, #1
 80013d6:	d102      	bne.n	80013de <_sbrk_r+0x1a>
 80013d8:	682b      	ldr	r3, [r5, #0]
 80013da:	b103      	cbz	r3, 80013de <_sbrk_r+0x1a>
 80013dc:	6023      	str	r3, [r4, #0]
 80013de:	bd38      	pop	{r3, r4, r5, pc}
 80013e0:	200001c4 	.word	0x200001c4

080013e4 <_write_r>:
 80013e4:	b538      	push	{r3, r4, r5, lr}
 80013e6:	4d07      	ldr	r5, [pc, #28]	; (8001404 <_write_r+0x20>)
 80013e8:	4604      	mov	r4, r0
 80013ea:	4608      	mov	r0, r1
 80013ec:	4611      	mov	r1, r2
 80013ee:	2200      	movs	r2, #0
 80013f0:	602a      	str	r2, [r5, #0]
 80013f2:	461a      	mov	r2, r3
 80013f4:	f7fe ff83 	bl	80002fe <_write>
 80013f8:	1c43      	adds	r3, r0, #1
 80013fa:	d102      	bne.n	8001402 <_write_r+0x1e>
 80013fc:	682b      	ldr	r3, [r5, #0]
 80013fe:	b103      	cbz	r3, 8001402 <_write_r+0x1e>
 8001400:	6023      	str	r3, [r4, #0]
 8001402:	bd38      	pop	{r3, r4, r5, pc}
 8001404:	200001c4 	.word	0x200001c4

08001408 <_close>:
 8001408:	4b02      	ldr	r3, [pc, #8]	; (8001414 <_close+0xc>)
 800140a:	2258      	movs	r2, #88	; 0x58
 800140c:	601a      	str	r2, [r3, #0]
 800140e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001412:	4770      	bx	lr
 8001414:	200001c4 	.word	0x200001c4

08001418 <_fstat>:
 8001418:	4b02      	ldr	r3, [pc, #8]	; (8001424 <_fstat+0xc>)
 800141a:	2258      	movs	r2, #88	; 0x58
 800141c:	601a      	str	r2, [r3, #0]
 800141e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001422:	4770      	bx	lr
 8001424:	200001c4 	.word	0x200001c4

08001428 <_isatty>:
 8001428:	4b02      	ldr	r3, [pc, #8]	; (8001434 <_isatty+0xc>)
 800142a:	2258      	movs	r2, #88	; 0x58
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	2000      	movs	r0, #0
 8001430:	4770      	bx	lr
 8001432:	bf00      	nop
 8001434:	200001c4 	.word	0x200001c4

08001438 <_lseek>:
 8001438:	4b02      	ldr	r3, [pc, #8]	; (8001444 <_lseek+0xc>)
 800143a:	2258      	movs	r2, #88	; 0x58
 800143c:	601a      	str	r2, [r3, #0]
 800143e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001442:	4770      	bx	lr
 8001444:	200001c4 	.word	0x200001c4

08001448 <_read>:
 8001448:	4b02      	ldr	r3, [pc, #8]	; (8001454 <_read+0xc>)
 800144a:	2258      	movs	r2, #88	; 0x58
 800144c:	601a      	str	r2, [r3, #0]
 800144e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001452:	4770      	bx	lr
 8001454:	200001c4 	.word	0x200001c4

08001458 <_sbrk>:
 8001458:	4a04      	ldr	r2, [pc, #16]	; (800146c <_sbrk+0x14>)
 800145a:	6811      	ldr	r1, [r2, #0]
 800145c:	4603      	mov	r3, r0
 800145e:	b909      	cbnz	r1, 8001464 <_sbrk+0xc>
 8001460:	4903      	ldr	r1, [pc, #12]	; (8001470 <_sbrk+0x18>)
 8001462:	6011      	str	r1, [r2, #0]
 8001464:	6810      	ldr	r0, [r2, #0]
 8001466:	4403      	add	r3, r0
 8001468:	6013      	str	r3, [r2, #0]
 800146a:	4770      	bx	lr
 800146c:	200001c8 	.word	0x200001c8
 8001470:	200001d0 	.word	0x200001d0

08001474 <_init>:
 8001474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001476:	bf00      	nop
 8001478:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800147a:	bc08      	pop	{r3}
 800147c:	469e      	mov	lr, r3
 800147e:	4770      	bx	lr

08001480 <_fini>:
 8001480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001482:	bf00      	nop
 8001484:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001486:	bc08      	pop	{r3}
 8001488:	469e      	mov	lr, r3
 800148a:	4770      	bx	lr


usb_dev.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012b0  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000084  08001480  08001480  00002480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001504  08001504  00003060  2**0
                  CONTENTS
  4 .ARM          00000008  08001504  08001504  00002504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800150c  0800150c  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800150c  0800150c  0000250c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001510  08001510  00002510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08001514  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  08001574  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001574  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000fc6  00000000  00000000  00003090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004b3  00000000  00000000  00004056  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00004510  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000084  00000000  00000000  000045d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000cdc3  00000000  00000000  0000465c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ff4  00000000  00000000  0001141f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00045cca  00000000  00000000  00012413  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000580dd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ad8  00000000  00000000  00058120  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004b  00000000  00000000  00058bf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000060 	.word	0x20000060
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001468 	.word	0x08001468

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000064 	.word	0x20000064
 800020c:	08001468 	.word	0x08001468

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002bc:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 80002c0:	f003 0301 	and.w	r3, r3, #1
 80002c4:	2b00      	cmp	r3, #0
 80002c6:	d013      	beq.n	80002f0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002c8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002cc:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 80002d0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002d4:	2b00      	cmp	r3, #0
 80002d6:	d00b      	beq.n	80002f0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002d8:	e000      	b.n	80002dc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002da:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002dc:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	2b00      	cmp	r3, #0
 80002e4:	d0f9      	beq.n	80002da <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002e6:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002ea:	687a      	ldr	r2, [r7, #4]
 80002ec:	b2d2      	uxtb	r2, r2
 80002ee:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	370c      	adds	r7, #12
 80002f6:	46bd      	mov	sp, r7
 80002f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fc:	4770      	bx	lr

080002fe <_write>:
#include "stm32f4xx.h"

//redirects printf() output to theserial wire out (SWO)
//this function overrides a weak function symbol and is not to be used directly

int _write(int file, char *ptr, int len){
 80002fe:	b580      	push	{r7, lr}
 8000300:	b086      	sub	sp, #24
 8000302:	af00      	add	r7, sp, #0
 8000304:	60f8      	str	r0, [r7, #12]
 8000306:	60b9      	str	r1, [r7, #8]
 8000308:	607a      	str	r2, [r7, #4]
	int i=0;
 800030a:	2300      	movs	r3, #0
 800030c:	617b      	str	r3, [r7, #20]
	for(i=0; i<len;i++)
 800030e:	2300      	movs	r3, #0
 8000310:	617b      	str	r3, [r7, #20]
 8000312:	e009      	b.n	8000328 <_write+0x2a>
		ITM_SendChar((*ptr++));
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	1c5a      	adds	r2, r3, #1
 8000318:	60ba      	str	r2, [r7, #8]
 800031a:	781b      	ldrb	r3, [r3, #0]
 800031c:	4618      	mov	r0, r3
 800031e:	f7ff ffc7 	bl	80002b0 <ITM_SendChar>
	for(i=0; i<len;i++)
 8000322:	697b      	ldr	r3, [r7, #20]
 8000324:	3301      	adds	r3, #1
 8000326:	617b      	str	r3, [r7, #20]
 8000328:	697a      	ldr	r2, [r7, #20]
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	429a      	cmp	r2, r3
 800032e:	dbf1      	blt.n	8000314 <_write+0x16>
	return len;
 8000330:	687b      	ldr	r3, [r7, #4]
}
 8000332:	4618      	mov	r0, r3
 8000334:	3718      	adds	r7, #24
 8000336:	46bd      	mov	sp, r7
 8000338:	bd80      	pop	{r7, pc}
	...

0800033c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800033c:	b480      	push	{r7}
 800033e:	b083      	sub	sp, #12
 8000340:	af00      	add	r7, sp, #0
 8000342:	4603      	mov	r3, r0
 8000344:	71fb      	strb	r3, [r7, #7]
	switch(log_level){
 8000346:	79fb      	ldrb	r3, [r7, #7]
 8000348:	2b02      	cmp	r3, #2
 800034a:	d00a      	beq.n	8000362 <_get_log_level_string+0x26>
 800034c:	2b02      	cmp	r3, #2
 800034e:	dc0a      	bgt.n	8000366 <_get_log_level_string+0x2a>
 8000350:	2b00      	cmp	r3, #0
 8000352:	d002      	beq.n	800035a <_get_log_level_string+0x1e>
 8000354:	2b01      	cmp	r3, #1
 8000356:	d002      	beq.n	800035e <_get_log_level_string+0x22>
 8000358:	e005      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_ERROR:
			return "ERROR";
 800035a:	4b06      	ldr	r3, [pc, #24]	@ (8000374 <_get_log_level_string+0x38>)
 800035c:	e003      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_INFORMATION:
			return "INFO";
 800035e:	4b06      	ldr	r3, [pc, #24]	@ (8000378 <_get_log_level_string+0x3c>)
 8000360:	e001      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_DEBUG:
			return "DEBUG";
 8000362:	4b06      	ldr	r3, [pc, #24]	@ (800037c <_get_log_level_string+0x40>)
 8000364:	e7ff      	b.n	8000366 <_get_log_level_string+0x2a>
	}
}
 8000366:	4618      	mov	r0, r3
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	08001480 	.word	0x08001480
 8000378:	08001488 	.word	0x08001488
 800037c:	08001490 	.word	0x08001490

08000380 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args){
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	4603      	mov	r3, r0
 8000388:	60b9      	str	r1, [r7, #8]
 800038a:	607a      	str	r2, [r7, #4]
 800038c:	73fb      	strb	r3, [r7, #15]
	{
		if(log_level > system_log_level)
 800038e:	4b0f      	ldr	r3, [pc, #60]	@ (80003cc <_log+0x4c>)
 8000390:	781b      	ldrb	r3, [r3, #0]
 8000392:	7bfa      	ldrb	r2, [r7, #15]
 8000394:	429a      	cmp	r2, r3
 8000396:	d814      	bhi.n	80003c2 <_log+0x42>
			return;
		printf("[%s]", _get_log_level_string(log_level));
 8000398:	7bfb      	ldrb	r3, [r7, #15]
 800039a:	4618      	mov	r0, r3
 800039c:	f7ff ffce 	bl	800033c <_get_log_level_string>
 80003a0:	4603      	mov	r3, r0
 80003a2:	4619      	mov	r1, r3
 80003a4:	480a      	ldr	r0, [pc, #40]	@ (80003d0 <_log+0x50>)
 80003a6:	f000 fc55 	bl	8000c54 <iprintf>
		vfprintf(stdout, format, args);
 80003aa:	4b0a      	ldr	r3, [pc, #40]	@ (80003d4 <_log+0x54>)
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	689b      	ldr	r3, [r3, #8]
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	68b9      	ldr	r1, [r7, #8]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f000 f9f3 	bl	80007a0 <vfiprintf>
		printf("\n");
 80003ba:	200a      	movs	r0, #10
 80003bc:	f000 fc5c 	bl	8000c78 <putchar>
 80003c0:	e000      	b.n	80003c4 <_log+0x44>
			return;
 80003c2:	bf00      	nop
	}
}
 80003c4:	3710      	adds	r7, #16
 80003c6:	46bd      	mov	sp, r7
 80003c8:	bd80      	pop	{r7, pc}
 80003ca:	bf00      	nop
 80003cc:	20000000 	.word	0x20000000
 80003d0:	08001498 	.word	0x08001498
 80003d4:	20000010 	.word	0x20000010

080003d8 <log_info>:
	}


	void log_info(char const * const format, ...)

	{
 80003d8:	b40f      	push	{r0, r1, r2, r3}
 80003da:	b580      	push	{r7, lr}
 80003dc:	b082      	sub	sp, #8
 80003de:	af00      	add	r7, sp, #0

	    va_list args;

		va_start(args, format);
 80003e0:	f107 0314 	add.w	r3, r7, #20
 80003e4:	607b      	str	r3, [r7, #4]

	    _log(LOG_LEVEL_INFORMATION, format, args);
 80003e6:	687a      	ldr	r2, [r7, #4]
 80003e8:	6939      	ldr	r1, [r7, #16]
 80003ea:	2001      	movs	r0, #1
 80003ec:	f7ff ffc8 	bl	8000380 <_log>

	    va_end(args);

	}
 80003f0:	bf00      	nop
 80003f2:	3708      	adds	r7, #8
 80003f4:	46bd      	mov	sp, r7
 80003f6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003fa:	b004      	add	sp, #16
 80003fc:	4770      	bx	lr
	...

08000400 <main>:
#include "Helpers/logger.h"

int main(void){
 8000400:	b580      	push	{r7, lr}
 8000402:	af00      	add	r7, sp, #0

	log_info("Program_start");
 8000404:	4802      	ldr	r0, [pc, #8]	@ (8000410 <main+0x10>)
 8000406:	f7ff ffe7 	bl	80003d8 <log_info>

	for(;;);
 800040a:	bf00      	nop
 800040c:	e7fd      	b.n	800040a <main+0xa>
 800040e:	bf00      	nop
 8000410:	080014c0 	.word	0x080014c0

08000414 <configure_clock>:
//APB prescaller1 = 2, APB prescaller2 ? 1
//MC01 prescaller = 2


void configure_clock()
{
 8000414:	b480      	push	{r7}
 8000416:	af00      	add	r7, sp, #0
	MODIFY_REG(FLASH->ACR,
 8000418:	4b25      	ldr	r3, [pc, #148]	@ (80004b0 <configure_clock+0x9c>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	f023 0307 	bic.w	r3, r3, #7
 8000420:	4a23      	ldr	r2, [pc, #140]	@ (80004b0 <configure_clock+0x9c>)
 8000422:	f043 0302 	orr.w	r3, r3, #2
 8000426:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY,
			_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS)//FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
			);
	//Enable HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 8000428:	4b22      	ldr	r3, [pc, #136]	@ (80004b4 <configure_clock+0xa0>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	4a21      	ldr	r2, [pc, #132]	@ (80004b4 <configure_clock+0xa0>)
 800042e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000432:	6013      	str	r3, [r2, #0]

	//wait until HSE is stable
	while(!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 8000434:	bf00      	nop
 8000436:	4b1f      	ldr	r3, [pc, #124]	@ (80004b4 <configure_clock+0xa0>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800043e:	2b00      	cmp	r3, #0
 8000440:	d0f9      	beq.n	8000436 <configure_clock+0x22>


	//configure PLL: source hse; SYSCLK=72 MHZ -> config only before enable PLL

	MODIFY_REG(RCC->PLLCFGR,
 8000442:	4b1c      	ldr	r3, [pc, #112]	@ (80004b4 <configure_clock+0xa0>)
 8000444:	685b      	ldr	r3, [r3, #4]
 8000446:	4a1c      	ldr	r2, [pc, #112]	@ (80004b8 <configure_clock+0xa4>)
 8000448:	401a      	ands	r2, r3
 800044a:	491a      	ldr	r1, [pc, #104]	@ (80004b4 <configure_clock+0xa0>)
 800044c:	4b1b      	ldr	r3, [pc, #108]	@ (80004bc <configure_clock+0xa8>)
 800044e:	4313      	orrs	r3, r2
 8000450:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM|RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ |RCC_PLLCFGR_PLLP | RCC_PLLCFGR_PLLSRC,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4)|_VAL2FLD(RCC_PLLCFGR_PLLN, 72)|_VAL2FLD(RCC_PLLCFGR_PLLQ,3)| _VAL2FLD(RCC_PLLCFGR_PLLSRC, 1));

	//enable PLL
		SET_BIT(RCC->CR, RCC_CR_PLLON);
 8000452:	4b18      	ldr	r3, [pc, #96]	@ (80004b4 <configure_clock+0xa0>)
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	4a17      	ldr	r2, [pc, #92]	@ (80004b4 <configure_clock+0xa0>)
 8000458:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800045c:	6013      	str	r3, [r2, #0]

	//wait until PLL is stable
	while(!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 800045e:	bf00      	nop
 8000460:	4b14      	ldr	r3, [pc, #80]	@ (80004b4 <configure_clock+0xa0>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000468:	2b00      	cmp	r3, #0
 800046a:	d0f9      	beq.n	8000460 <configure_clock+0x4c>

	//Switch system clock to PLL
	MODIFY_REG(RCC->CFGR,
 800046c:	4b11      	ldr	r3, [pc, #68]	@ (80004b4 <configure_clock+0xa0>)
 800046e:	689b      	ldr	r3, [r3, #8]
 8000470:	f023 0303 	bic.w	r3, r3, #3
 8000474:	4a0f      	ldr	r2, [pc, #60]	@ (80004b4 <configure_clock+0xa0>)
 8000476:	f043 0302 	orr.w	r3, r3, #2
 800047a:	6093      	str	r3, [r2, #8]
			RCC_CFGR_SW,
			_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL));

	//Configure PPRE1
	MODIFY_REG(RCC->CFGR,
 800047c:	4b0d      	ldr	r3, [pc, #52]	@ (80004b4 <configure_clock+0xa0>)
 800047e:	689b      	ldr	r3, [r3, #8]
 8000480:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8000484:	4a0b      	ldr	r2, [pc, #44]	@ (80004b4 <configure_clock+0xa0>)
 8000486:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800048a:	6093      	str	r3, [r2, #8]
				RCC_CFGR_PPRE1,
				_VAL2FLD(RCC_CFGR_PPRE1, 4));

	//wait until PLL is used
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS)  != RCC_CFGR_SWS_PLL);
 800048c:	bf00      	nop
 800048e:	4b09      	ldr	r3, [pc, #36]	@ (80004b4 <configure_clock+0xa0>)
 8000490:	689b      	ldr	r3, [r3, #8]
 8000492:	f003 030c 	and.w	r3, r3, #12
 8000496:	2b08      	cmp	r3, #8
 8000498:	d1f9      	bne.n	800048e <configure_clock+0x7a>

	//Disable HSI
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800049a:	4b06      	ldr	r3, [pc, #24]	@ (80004b4 <configure_clock+0xa0>)
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	4a05      	ldr	r2, [pc, #20]	@ (80004b4 <configure_clock+0xa0>)
 80004a0:	f023 0301 	bic.w	r3, r3, #1
 80004a4:	6013      	str	r3, [r2, #0]
}
 80004a6:	bf00      	nop
 80004a8:	46bd      	mov	sp, r7
 80004aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ae:	4770      	bx	lr
 80004b0:	40023c00 	.word	0x40023c00
 80004b4:	40023800 	.word	0x40023800
 80004b8:	f0bc8000 	.word	0xf0bc8000
 80004bc:	03401204 	.word	0x03401204

080004c0 <SystemInit>:
void SystemInit(void)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	af00      	add	r7, sp, #0
	configure_clock();
 80004c4:	f7ff ffa6 	bl	8000414 <configure_clock>
}
 80004c8:	bf00      	nop
 80004ca:	bd80      	pop	{r7, pc}

080004cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004cc:	480d      	ldr	r0, [pc, #52]	@ (8000504 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d0:	f7ff fff6 	bl	80004c0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d4:	480c      	ldr	r0, [pc, #48]	@ (8000508 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d6:	490d      	ldr	r1, [pc, #52]	@ (800050c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000510 <LoopForever+0xe>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004dc:	e002      	b.n	80004e4 <LoopCopyDataInit>

080004de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e2:	3304      	adds	r3, #4

080004e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e8:	d3f9      	bcc.n	80004de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ea:	4a0a      	ldr	r2, [pc, #40]	@ (8000514 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000518 <LoopForever+0x16>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f0:	e001      	b.n	80004f6 <LoopFillZerobss>

080004f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f4:	3204      	adds	r2, #4

080004f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f8:	d3fb      	bcc.n	80004f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004fa:	f000 fceb 	bl	8000ed4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fe:	f7ff ff7f 	bl	8000400 <main>

08000502 <LoopForever>:

LoopForever:
  b LoopForever
 8000502:	e7fe      	b.n	8000502 <LoopForever>
  ldr   r0, =_estack
 8000504:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000508:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800050c:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000510:	08001514 	.word	0x08001514
  ldr r2, =_sbss
 8000514:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000518:	200001cc 	.word	0x200001cc

0800051c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800051c:	e7fe      	b.n	800051c <ADC_IRQHandler>

0800051e <__sfputc_r>:
 800051e:	6893      	ldr	r3, [r2, #8]
 8000520:	3b01      	subs	r3, #1
 8000522:	2b00      	cmp	r3, #0
 8000524:	b410      	push	{r4}
 8000526:	6093      	str	r3, [r2, #8]
 8000528:	da08      	bge.n	800053c <__sfputc_r+0x1e>
 800052a:	6994      	ldr	r4, [r2, #24]
 800052c:	42a3      	cmp	r3, r4
 800052e:	db01      	blt.n	8000534 <__sfputc_r+0x16>
 8000530:	290a      	cmp	r1, #10
 8000532:	d103      	bne.n	800053c <__sfputc_r+0x1e>
 8000534:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000538:	f000 bbe9 	b.w	8000d0e <__swbuf_r>
 800053c:	6813      	ldr	r3, [r2, #0]
 800053e:	1c58      	adds	r0, r3, #1
 8000540:	6010      	str	r0, [r2, #0]
 8000542:	7019      	strb	r1, [r3, #0]
 8000544:	4608      	mov	r0, r1
 8000546:	f85d 4b04 	ldr.w	r4, [sp], #4
 800054a:	4770      	bx	lr

0800054c <__sfputs_r>:
 800054c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800054e:	4606      	mov	r6, r0
 8000550:	460f      	mov	r7, r1
 8000552:	4614      	mov	r4, r2
 8000554:	18d5      	adds	r5, r2, r3
 8000556:	42ac      	cmp	r4, r5
 8000558:	d101      	bne.n	800055e <__sfputs_r+0x12>
 800055a:	2000      	movs	r0, #0
 800055c:	e007      	b.n	800056e <__sfputs_r+0x22>
 800055e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000562:	463a      	mov	r2, r7
 8000564:	4630      	mov	r0, r6
 8000566:	f7ff ffda 	bl	800051e <__sfputc_r>
 800056a:	1c43      	adds	r3, r0, #1
 800056c:	d1f3      	bne.n	8000556 <__sfputs_r+0xa>
 800056e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000570 <_vfiprintf_r>:
 8000570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000574:	460d      	mov	r5, r1
 8000576:	b09d      	sub	sp, #116	@ 0x74
 8000578:	4614      	mov	r4, r2
 800057a:	4698      	mov	r8, r3
 800057c:	4606      	mov	r6, r0
 800057e:	b118      	cbz	r0, 8000588 <_vfiprintf_r+0x18>
 8000580:	6a03      	ldr	r3, [r0, #32]
 8000582:	b90b      	cbnz	r3, 8000588 <_vfiprintf_r+0x18>
 8000584:	f000 fb30 	bl	8000be8 <__sinit>
 8000588:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800058a:	07d9      	lsls	r1, r3, #31
 800058c:	d405      	bmi.n	800059a <_vfiprintf_r+0x2a>
 800058e:	89ab      	ldrh	r3, [r5, #12]
 8000590:	059a      	lsls	r2, r3, #22
 8000592:	d402      	bmi.n	800059a <_vfiprintf_r+0x2a>
 8000594:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000596:	f000 fcc2 	bl	8000f1e <__retarget_lock_acquire_recursive>
 800059a:	89ab      	ldrh	r3, [r5, #12]
 800059c:	071b      	lsls	r3, r3, #28
 800059e:	d501      	bpl.n	80005a4 <_vfiprintf_r+0x34>
 80005a0:	692b      	ldr	r3, [r5, #16]
 80005a2:	b99b      	cbnz	r3, 80005cc <_vfiprintf_r+0x5c>
 80005a4:	4629      	mov	r1, r5
 80005a6:	4630      	mov	r0, r6
 80005a8:	f000 fbf0 	bl	8000d8c <__swsetup_r>
 80005ac:	b170      	cbz	r0, 80005cc <_vfiprintf_r+0x5c>
 80005ae:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80005b0:	07dc      	lsls	r4, r3, #31
 80005b2:	d504      	bpl.n	80005be <_vfiprintf_r+0x4e>
 80005b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80005b8:	b01d      	add	sp, #116	@ 0x74
 80005ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80005be:	89ab      	ldrh	r3, [r5, #12]
 80005c0:	0598      	lsls	r0, r3, #22
 80005c2:	d4f7      	bmi.n	80005b4 <_vfiprintf_r+0x44>
 80005c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80005c6:	f000 fcab 	bl	8000f20 <__retarget_lock_release_recursive>
 80005ca:	e7f3      	b.n	80005b4 <_vfiprintf_r+0x44>
 80005cc:	2300      	movs	r3, #0
 80005ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80005d0:	2320      	movs	r3, #32
 80005d2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80005d6:	f8cd 800c 	str.w	r8, [sp, #12]
 80005da:	2330      	movs	r3, #48	@ 0x30
 80005dc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800078c <_vfiprintf_r+0x21c>
 80005e0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80005e4:	f04f 0901 	mov.w	r9, #1
 80005e8:	4623      	mov	r3, r4
 80005ea:	469a      	mov	sl, r3
 80005ec:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005f0:	b10a      	cbz	r2, 80005f6 <_vfiprintf_r+0x86>
 80005f2:	2a25      	cmp	r2, #37	@ 0x25
 80005f4:	d1f9      	bne.n	80005ea <_vfiprintf_r+0x7a>
 80005f6:	ebba 0b04 	subs.w	fp, sl, r4
 80005fa:	d00b      	beq.n	8000614 <_vfiprintf_r+0xa4>
 80005fc:	465b      	mov	r3, fp
 80005fe:	4622      	mov	r2, r4
 8000600:	4629      	mov	r1, r5
 8000602:	4630      	mov	r0, r6
 8000604:	f7ff ffa2 	bl	800054c <__sfputs_r>
 8000608:	3001      	adds	r0, #1
 800060a:	f000 80a7 	beq.w	800075c <_vfiprintf_r+0x1ec>
 800060e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000610:	445a      	add	r2, fp
 8000612:	9209      	str	r2, [sp, #36]	@ 0x24
 8000614:	f89a 3000 	ldrb.w	r3, [sl]
 8000618:	2b00      	cmp	r3, #0
 800061a:	f000 809f 	beq.w	800075c <_vfiprintf_r+0x1ec>
 800061e:	2300      	movs	r3, #0
 8000620:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000624:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000628:	f10a 0a01 	add.w	sl, sl, #1
 800062c:	9304      	str	r3, [sp, #16]
 800062e:	9307      	str	r3, [sp, #28]
 8000630:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000634:	931a      	str	r3, [sp, #104]	@ 0x68
 8000636:	4654      	mov	r4, sl
 8000638:	2205      	movs	r2, #5
 800063a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800063e:	4853      	ldr	r0, [pc, #332]	@ (800078c <_vfiprintf_r+0x21c>)
 8000640:	f7ff fde6 	bl	8000210 <memchr>
 8000644:	9a04      	ldr	r2, [sp, #16]
 8000646:	b9d8      	cbnz	r0, 8000680 <_vfiprintf_r+0x110>
 8000648:	06d1      	lsls	r1, r2, #27
 800064a:	bf44      	itt	mi
 800064c:	2320      	movmi	r3, #32
 800064e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000652:	0713      	lsls	r3, r2, #28
 8000654:	bf44      	itt	mi
 8000656:	232b      	movmi	r3, #43	@ 0x2b
 8000658:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800065c:	f89a 3000 	ldrb.w	r3, [sl]
 8000660:	2b2a      	cmp	r3, #42	@ 0x2a
 8000662:	d015      	beq.n	8000690 <_vfiprintf_r+0x120>
 8000664:	9a07      	ldr	r2, [sp, #28]
 8000666:	4654      	mov	r4, sl
 8000668:	2000      	movs	r0, #0
 800066a:	f04f 0c0a 	mov.w	ip, #10
 800066e:	4621      	mov	r1, r4
 8000670:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000674:	3b30      	subs	r3, #48	@ 0x30
 8000676:	2b09      	cmp	r3, #9
 8000678:	d94b      	bls.n	8000712 <_vfiprintf_r+0x1a2>
 800067a:	b1b0      	cbz	r0, 80006aa <_vfiprintf_r+0x13a>
 800067c:	9207      	str	r2, [sp, #28]
 800067e:	e014      	b.n	80006aa <_vfiprintf_r+0x13a>
 8000680:	eba0 0308 	sub.w	r3, r0, r8
 8000684:	fa09 f303 	lsl.w	r3, r9, r3
 8000688:	4313      	orrs	r3, r2
 800068a:	9304      	str	r3, [sp, #16]
 800068c:	46a2      	mov	sl, r4
 800068e:	e7d2      	b.n	8000636 <_vfiprintf_r+0xc6>
 8000690:	9b03      	ldr	r3, [sp, #12]
 8000692:	1d19      	adds	r1, r3, #4
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	9103      	str	r1, [sp, #12]
 8000698:	2b00      	cmp	r3, #0
 800069a:	bfbb      	ittet	lt
 800069c:	425b      	neglt	r3, r3
 800069e:	f042 0202 	orrlt.w	r2, r2, #2
 80006a2:	9307      	strge	r3, [sp, #28]
 80006a4:	9307      	strlt	r3, [sp, #28]
 80006a6:	bfb8      	it	lt
 80006a8:	9204      	strlt	r2, [sp, #16]
 80006aa:	7823      	ldrb	r3, [r4, #0]
 80006ac:	2b2e      	cmp	r3, #46	@ 0x2e
 80006ae:	d10a      	bne.n	80006c6 <_vfiprintf_r+0x156>
 80006b0:	7863      	ldrb	r3, [r4, #1]
 80006b2:	2b2a      	cmp	r3, #42	@ 0x2a
 80006b4:	d132      	bne.n	800071c <_vfiprintf_r+0x1ac>
 80006b6:	9b03      	ldr	r3, [sp, #12]
 80006b8:	1d1a      	adds	r2, r3, #4
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	9203      	str	r2, [sp, #12]
 80006be:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80006c2:	3402      	adds	r4, #2
 80006c4:	9305      	str	r3, [sp, #20]
 80006c6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800079c <_vfiprintf_r+0x22c>
 80006ca:	7821      	ldrb	r1, [r4, #0]
 80006cc:	2203      	movs	r2, #3
 80006ce:	4650      	mov	r0, sl
 80006d0:	f7ff fd9e 	bl	8000210 <memchr>
 80006d4:	b138      	cbz	r0, 80006e6 <_vfiprintf_r+0x176>
 80006d6:	9b04      	ldr	r3, [sp, #16]
 80006d8:	eba0 000a 	sub.w	r0, r0, sl
 80006dc:	2240      	movs	r2, #64	@ 0x40
 80006de:	4082      	lsls	r2, r0
 80006e0:	4313      	orrs	r3, r2
 80006e2:	3401      	adds	r4, #1
 80006e4:	9304      	str	r3, [sp, #16]
 80006e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006ea:	4829      	ldr	r0, [pc, #164]	@ (8000790 <_vfiprintf_r+0x220>)
 80006ec:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80006f0:	2206      	movs	r2, #6
 80006f2:	f7ff fd8d 	bl	8000210 <memchr>
 80006f6:	2800      	cmp	r0, #0
 80006f8:	d03f      	beq.n	800077a <_vfiprintf_r+0x20a>
 80006fa:	4b26      	ldr	r3, [pc, #152]	@ (8000794 <_vfiprintf_r+0x224>)
 80006fc:	bb1b      	cbnz	r3, 8000746 <_vfiprintf_r+0x1d6>
 80006fe:	9b03      	ldr	r3, [sp, #12]
 8000700:	3307      	adds	r3, #7
 8000702:	f023 0307 	bic.w	r3, r3, #7
 8000706:	3308      	adds	r3, #8
 8000708:	9303      	str	r3, [sp, #12]
 800070a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800070c:	443b      	add	r3, r7
 800070e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000710:	e76a      	b.n	80005e8 <_vfiprintf_r+0x78>
 8000712:	fb0c 3202 	mla	r2, ip, r2, r3
 8000716:	460c      	mov	r4, r1
 8000718:	2001      	movs	r0, #1
 800071a:	e7a8      	b.n	800066e <_vfiprintf_r+0xfe>
 800071c:	2300      	movs	r3, #0
 800071e:	3401      	adds	r4, #1
 8000720:	9305      	str	r3, [sp, #20]
 8000722:	4619      	mov	r1, r3
 8000724:	f04f 0c0a 	mov.w	ip, #10
 8000728:	4620      	mov	r0, r4
 800072a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800072e:	3a30      	subs	r2, #48	@ 0x30
 8000730:	2a09      	cmp	r2, #9
 8000732:	d903      	bls.n	800073c <_vfiprintf_r+0x1cc>
 8000734:	2b00      	cmp	r3, #0
 8000736:	d0c6      	beq.n	80006c6 <_vfiprintf_r+0x156>
 8000738:	9105      	str	r1, [sp, #20]
 800073a:	e7c4      	b.n	80006c6 <_vfiprintf_r+0x156>
 800073c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000740:	4604      	mov	r4, r0
 8000742:	2301      	movs	r3, #1
 8000744:	e7f0      	b.n	8000728 <_vfiprintf_r+0x1b8>
 8000746:	ab03      	add	r3, sp, #12
 8000748:	9300      	str	r3, [sp, #0]
 800074a:	462a      	mov	r2, r5
 800074c:	4b12      	ldr	r3, [pc, #72]	@ (8000798 <_vfiprintf_r+0x228>)
 800074e:	a904      	add	r1, sp, #16
 8000750:	4630      	mov	r0, r6
 8000752:	f3af 8000 	nop.w
 8000756:	4607      	mov	r7, r0
 8000758:	1c78      	adds	r0, r7, #1
 800075a:	d1d6      	bne.n	800070a <_vfiprintf_r+0x19a>
 800075c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800075e:	07d9      	lsls	r1, r3, #31
 8000760:	d405      	bmi.n	800076e <_vfiprintf_r+0x1fe>
 8000762:	89ab      	ldrh	r3, [r5, #12]
 8000764:	059a      	lsls	r2, r3, #22
 8000766:	d402      	bmi.n	800076e <_vfiprintf_r+0x1fe>
 8000768:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800076a:	f000 fbd9 	bl	8000f20 <__retarget_lock_release_recursive>
 800076e:	89ab      	ldrh	r3, [r5, #12]
 8000770:	065b      	lsls	r3, r3, #25
 8000772:	f53f af1f 	bmi.w	80005b4 <_vfiprintf_r+0x44>
 8000776:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000778:	e71e      	b.n	80005b8 <_vfiprintf_r+0x48>
 800077a:	ab03      	add	r3, sp, #12
 800077c:	9300      	str	r3, [sp, #0]
 800077e:	462a      	mov	r2, r5
 8000780:	4b05      	ldr	r3, [pc, #20]	@ (8000798 <_vfiprintf_r+0x228>)
 8000782:	a904      	add	r1, sp, #16
 8000784:	4630      	mov	r0, r6
 8000786:	f000 f883 	bl	8000890 <_printf_i>
 800078a:	e7e4      	b.n	8000756 <_vfiprintf_r+0x1e6>
 800078c:	080014ce 	.word	0x080014ce
 8000790:	080014d8 	.word	0x080014d8
 8000794:	00000000 	.word	0x00000000
 8000798:	0800054d 	.word	0x0800054d
 800079c:	080014d4 	.word	0x080014d4

080007a0 <vfiprintf>:
 80007a0:	4613      	mov	r3, r2
 80007a2:	460a      	mov	r2, r1
 80007a4:	4601      	mov	r1, r0
 80007a6:	4802      	ldr	r0, [pc, #8]	@ (80007b0 <vfiprintf+0x10>)
 80007a8:	6800      	ldr	r0, [r0, #0]
 80007aa:	f7ff bee1 	b.w	8000570 <_vfiprintf_r>
 80007ae:	bf00      	nop
 80007b0:	20000010 	.word	0x20000010

080007b4 <_printf_common>:
 80007b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007b8:	4616      	mov	r6, r2
 80007ba:	4698      	mov	r8, r3
 80007bc:	688a      	ldr	r2, [r1, #8]
 80007be:	690b      	ldr	r3, [r1, #16]
 80007c0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80007c4:	4293      	cmp	r3, r2
 80007c6:	bfb8      	it	lt
 80007c8:	4613      	movlt	r3, r2
 80007ca:	6033      	str	r3, [r6, #0]
 80007cc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80007d0:	4607      	mov	r7, r0
 80007d2:	460c      	mov	r4, r1
 80007d4:	b10a      	cbz	r2, 80007da <_printf_common+0x26>
 80007d6:	3301      	adds	r3, #1
 80007d8:	6033      	str	r3, [r6, #0]
 80007da:	6823      	ldr	r3, [r4, #0]
 80007dc:	0699      	lsls	r1, r3, #26
 80007de:	bf42      	ittt	mi
 80007e0:	6833      	ldrmi	r3, [r6, #0]
 80007e2:	3302      	addmi	r3, #2
 80007e4:	6033      	strmi	r3, [r6, #0]
 80007e6:	6825      	ldr	r5, [r4, #0]
 80007e8:	f015 0506 	ands.w	r5, r5, #6
 80007ec:	d106      	bne.n	80007fc <_printf_common+0x48>
 80007ee:	f104 0a19 	add.w	sl, r4, #25
 80007f2:	68e3      	ldr	r3, [r4, #12]
 80007f4:	6832      	ldr	r2, [r6, #0]
 80007f6:	1a9b      	subs	r3, r3, r2
 80007f8:	42ab      	cmp	r3, r5
 80007fa:	dc26      	bgt.n	800084a <_printf_common+0x96>
 80007fc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000800:	6822      	ldr	r2, [r4, #0]
 8000802:	3b00      	subs	r3, #0
 8000804:	bf18      	it	ne
 8000806:	2301      	movne	r3, #1
 8000808:	0692      	lsls	r2, r2, #26
 800080a:	d42b      	bmi.n	8000864 <_printf_common+0xb0>
 800080c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000810:	4641      	mov	r1, r8
 8000812:	4638      	mov	r0, r7
 8000814:	47c8      	blx	r9
 8000816:	3001      	adds	r0, #1
 8000818:	d01e      	beq.n	8000858 <_printf_common+0xa4>
 800081a:	6823      	ldr	r3, [r4, #0]
 800081c:	6922      	ldr	r2, [r4, #16]
 800081e:	f003 0306 	and.w	r3, r3, #6
 8000822:	2b04      	cmp	r3, #4
 8000824:	bf02      	ittt	eq
 8000826:	68e5      	ldreq	r5, [r4, #12]
 8000828:	6833      	ldreq	r3, [r6, #0]
 800082a:	1aed      	subeq	r5, r5, r3
 800082c:	68a3      	ldr	r3, [r4, #8]
 800082e:	bf0c      	ite	eq
 8000830:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000834:	2500      	movne	r5, #0
 8000836:	4293      	cmp	r3, r2
 8000838:	bfc4      	itt	gt
 800083a:	1a9b      	subgt	r3, r3, r2
 800083c:	18ed      	addgt	r5, r5, r3
 800083e:	2600      	movs	r6, #0
 8000840:	341a      	adds	r4, #26
 8000842:	42b5      	cmp	r5, r6
 8000844:	d11a      	bne.n	800087c <_printf_common+0xc8>
 8000846:	2000      	movs	r0, #0
 8000848:	e008      	b.n	800085c <_printf_common+0xa8>
 800084a:	2301      	movs	r3, #1
 800084c:	4652      	mov	r2, sl
 800084e:	4641      	mov	r1, r8
 8000850:	4638      	mov	r0, r7
 8000852:	47c8      	blx	r9
 8000854:	3001      	adds	r0, #1
 8000856:	d103      	bne.n	8000860 <_printf_common+0xac>
 8000858:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800085c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000860:	3501      	adds	r5, #1
 8000862:	e7c6      	b.n	80007f2 <_printf_common+0x3e>
 8000864:	18e1      	adds	r1, r4, r3
 8000866:	1c5a      	adds	r2, r3, #1
 8000868:	2030      	movs	r0, #48	@ 0x30
 800086a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800086e:	4422      	add	r2, r4
 8000870:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000874:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000878:	3302      	adds	r3, #2
 800087a:	e7c7      	b.n	800080c <_printf_common+0x58>
 800087c:	2301      	movs	r3, #1
 800087e:	4622      	mov	r2, r4
 8000880:	4641      	mov	r1, r8
 8000882:	4638      	mov	r0, r7
 8000884:	47c8      	blx	r9
 8000886:	3001      	adds	r0, #1
 8000888:	d0e6      	beq.n	8000858 <_printf_common+0xa4>
 800088a:	3601      	adds	r6, #1
 800088c:	e7d9      	b.n	8000842 <_printf_common+0x8e>
	...

08000890 <_printf_i>:
 8000890:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000894:	7e0f      	ldrb	r7, [r1, #24]
 8000896:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000898:	2f78      	cmp	r7, #120	@ 0x78
 800089a:	4691      	mov	r9, r2
 800089c:	4680      	mov	r8, r0
 800089e:	460c      	mov	r4, r1
 80008a0:	469a      	mov	sl, r3
 80008a2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80008a6:	d807      	bhi.n	80008b8 <_printf_i+0x28>
 80008a8:	2f62      	cmp	r7, #98	@ 0x62
 80008aa:	d80a      	bhi.n	80008c2 <_printf_i+0x32>
 80008ac:	2f00      	cmp	r7, #0
 80008ae:	f000 80d2 	beq.w	8000a56 <_printf_i+0x1c6>
 80008b2:	2f58      	cmp	r7, #88	@ 0x58
 80008b4:	f000 80b9 	beq.w	8000a2a <_printf_i+0x19a>
 80008b8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80008bc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80008c0:	e03a      	b.n	8000938 <_printf_i+0xa8>
 80008c2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80008c6:	2b15      	cmp	r3, #21
 80008c8:	d8f6      	bhi.n	80008b8 <_printf_i+0x28>
 80008ca:	a101      	add	r1, pc, #4	@ (adr r1, 80008d0 <_printf_i+0x40>)
 80008cc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80008d0:	08000929 	.word	0x08000929
 80008d4:	0800093d 	.word	0x0800093d
 80008d8:	080008b9 	.word	0x080008b9
 80008dc:	080008b9 	.word	0x080008b9
 80008e0:	080008b9 	.word	0x080008b9
 80008e4:	080008b9 	.word	0x080008b9
 80008e8:	0800093d 	.word	0x0800093d
 80008ec:	080008b9 	.word	0x080008b9
 80008f0:	080008b9 	.word	0x080008b9
 80008f4:	080008b9 	.word	0x080008b9
 80008f8:	080008b9 	.word	0x080008b9
 80008fc:	08000a3d 	.word	0x08000a3d
 8000900:	08000967 	.word	0x08000967
 8000904:	080009f7 	.word	0x080009f7
 8000908:	080008b9 	.word	0x080008b9
 800090c:	080008b9 	.word	0x080008b9
 8000910:	08000a5f 	.word	0x08000a5f
 8000914:	080008b9 	.word	0x080008b9
 8000918:	08000967 	.word	0x08000967
 800091c:	080008b9 	.word	0x080008b9
 8000920:	080008b9 	.word	0x080008b9
 8000924:	080009ff 	.word	0x080009ff
 8000928:	6833      	ldr	r3, [r6, #0]
 800092a:	1d1a      	adds	r2, r3, #4
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	6032      	str	r2, [r6, #0]
 8000930:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000934:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000938:	2301      	movs	r3, #1
 800093a:	e09d      	b.n	8000a78 <_printf_i+0x1e8>
 800093c:	6833      	ldr	r3, [r6, #0]
 800093e:	6820      	ldr	r0, [r4, #0]
 8000940:	1d19      	adds	r1, r3, #4
 8000942:	6031      	str	r1, [r6, #0]
 8000944:	0606      	lsls	r6, r0, #24
 8000946:	d501      	bpl.n	800094c <_printf_i+0xbc>
 8000948:	681d      	ldr	r5, [r3, #0]
 800094a:	e003      	b.n	8000954 <_printf_i+0xc4>
 800094c:	0645      	lsls	r5, r0, #25
 800094e:	d5fb      	bpl.n	8000948 <_printf_i+0xb8>
 8000950:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000954:	2d00      	cmp	r5, #0
 8000956:	da03      	bge.n	8000960 <_printf_i+0xd0>
 8000958:	232d      	movs	r3, #45	@ 0x2d
 800095a:	426d      	negs	r5, r5
 800095c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000960:	4859      	ldr	r0, [pc, #356]	@ (8000ac8 <_printf_i+0x238>)
 8000962:	230a      	movs	r3, #10
 8000964:	e011      	b.n	800098a <_printf_i+0xfa>
 8000966:	6821      	ldr	r1, [r4, #0]
 8000968:	6833      	ldr	r3, [r6, #0]
 800096a:	0608      	lsls	r0, r1, #24
 800096c:	f853 5b04 	ldr.w	r5, [r3], #4
 8000970:	d402      	bmi.n	8000978 <_printf_i+0xe8>
 8000972:	0649      	lsls	r1, r1, #25
 8000974:	bf48      	it	mi
 8000976:	b2ad      	uxthmi	r5, r5
 8000978:	2f6f      	cmp	r7, #111	@ 0x6f
 800097a:	4853      	ldr	r0, [pc, #332]	@ (8000ac8 <_printf_i+0x238>)
 800097c:	6033      	str	r3, [r6, #0]
 800097e:	bf14      	ite	ne
 8000980:	230a      	movne	r3, #10
 8000982:	2308      	moveq	r3, #8
 8000984:	2100      	movs	r1, #0
 8000986:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800098a:	6866      	ldr	r6, [r4, #4]
 800098c:	60a6      	str	r6, [r4, #8]
 800098e:	2e00      	cmp	r6, #0
 8000990:	bfa2      	ittt	ge
 8000992:	6821      	ldrge	r1, [r4, #0]
 8000994:	f021 0104 	bicge.w	r1, r1, #4
 8000998:	6021      	strge	r1, [r4, #0]
 800099a:	b90d      	cbnz	r5, 80009a0 <_printf_i+0x110>
 800099c:	2e00      	cmp	r6, #0
 800099e:	d04b      	beq.n	8000a38 <_printf_i+0x1a8>
 80009a0:	4616      	mov	r6, r2
 80009a2:	fbb5 f1f3 	udiv	r1, r5, r3
 80009a6:	fb03 5711 	mls	r7, r3, r1, r5
 80009aa:	5dc7      	ldrb	r7, [r0, r7]
 80009ac:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80009b0:	462f      	mov	r7, r5
 80009b2:	42bb      	cmp	r3, r7
 80009b4:	460d      	mov	r5, r1
 80009b6:	d9f4      	bls.n	80009a2 <_printf_i+0x112>
 80009b8:	2b08      	cmp	r3, #8
 80009ba:	d10b      	bne.n	80009d4 <_printf_i+0x144>
 80009bc:	6823      	ldr	r3, [r4, #0]
 80009be:	07df      	lsls	r7, r3, #31
 80009c0:	d508      	bpl.n	80009d4 <_printf_i+0x144>
 80009c2:	6923      	ldr	r3, [r4, #16]
 80009c4:	6861      	ldr	r1, [r4, #4]
 80009c6:	4299      	cmp	r1, r3
 80009c8:	bfde      	ittt	le
 80009ca:	2330      	movle	r3, #48	@ 0x30
 80009cc:	f806 3c01 	strble.w	r3, [r6, #-1]
 80009d0:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80009d4:	1b92      	subs	r2, r2, r6
 80009d6:	6122      	str	r2, [r4, #16]
 80009d8:	f8cd a000 	str.w	sl, [sp]
 80009dc:	464b      	mov	r3, r9
 80009de:	aa03      	add	r2, sp, #12
 80009e0:	4621      	mov	r1, r4
 80009e2:	4640      	mov	r0, r8
 80009e4:	f7ff fee6 	bl	80007b4 <_printf_common>
 80009e8:	3001      	adds	r0, #1
 80009ea:	d14a      	bne.n	8000a82 <_printf_i+0x1f2>
 80009ec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80009f0:	b004      	add	sp, #16
 80009f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009f6:	6823      	ldr	r3, [r4, #0]
 80009f8:	f043 0320 	orr.w	r3, r3, #32
 80009fc:	6023      	str	r3, [r4, #0]
 80009fe:	4833      	ldr	r0, [pc, #204]	@ (8000acc <_printf_i+0x23c>)
 8000a00:	2778      	movs	r7, #120	@ 0x78
 8000a02:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000a06:	6823      	ldr	r3, [r4, #0]
 8000a08:	6831      	ldr	r1, [r6, #0]
 8000a0a:	061f      	lsls	r7, r3, #24
 8000a0c:	f851 5b04 	ldr.w	r5, [r1], #4
 8000a10:	d402      	bmi.n	8000a18 <_printf_i+0x188>
 8000a12:	065f      	lsls	r7, r3, #25
 8000a14:	bf48      	it	mi
 8000a16:	b2ad      	uxthmi	r5, r5
 8000a18:	6031      	str	r1, [r6, #0]
 8000a1a:	07d9      	lsls	r1, r3, #31
 8000a1c:	bf44      	itt	mi
 8000a1e:	f043 0320 	orrmi.w	r3, r3, #32
 8000a22:	6023      	strmi	r3, [r4, #0]
 8000a24:	b11d      	cbz	r5, 8000a2e <_printf_i+0x19e>
 8000a26:	2310      	movs	r3, #16
 8000a28:	e7ac      	b.n	8000984 <_printf_i+0xf4>
 8000a2a:	4827      	ldr	r0, [pc, #156]	@ (8000ac8 <_printf_i+0x238>)
 8000a2c:	e7e9      	b.n	8000a02 <_printf_i+0x172>
 8000a2e:	6823      	ldr	r3, [r4, #0]
 8000a30:	f023 0320 	bic.w	r3, r3, #32
 8000a34:	6023      	str	r3, [r4, #0]
 8000a36:	e7f6      	b.n	8000a26 <_printf_i+0x196>
 8000a38:	4616      	mov	r6, r2
 8000a3a:	e7bd      	b.n	80009b8 <_printf_i+0x128>
 8000a3c:	6833      	ldr	r3, [r6, #0]
 8000a3e:	6825      	ldr	r5, [r4, #0]
 8000a40:	6961      	ldr	r1, [r4, #20]
 8000a42:	1d18      	adds	r0, r3, #4
 8000a44:	6030      	str	r0, [r6, #0]
 8000a46:	062e      	lsls	r6, r5, #24
 8000a48:	681b      	ldr	r3, [r3, #0]
 8000a4a:	d501      	bpl.n	8000a50 <_printf_i+0x1c0>
 8000a4c:	6019      	str	r1, [r3, #0]
 8000a4e:	e002      	b.n	8000a56 <_printf_i+0x1c6>
 8000a50:	0668      	lsls	r0, r5, #25
 8000a52:	d5fb      	bpl.n	8000a4c <_printf_i+0x1bc>
 8000a54:	8019      	strh	r1, [r3, #0]
 8000a56:	2300      	movs	r3, #0
 8000a58:	6123      	str	r3, [r4, #16]
 8000a5a:	4616      	mov	r6, r2
 8000a5c:	e7bc      	b.n	80009d8 <_printf_i+0x148>
 8000a5e:	6833      	ldr	r3, [r6, #0]
 8000a60:	1d1a      	adds	r2, r3, #4
 8000a62:	6032      	str	r2, [r6, #0]
 8000a64:	681e      	ldr	r6, [r3, #0]
 8000a66:	6862      	ldr	r2, [r4, #4]
 8000a68:	2100      	movs	r1, #0
 8000a6a:	4630      	mov	r0, r6
 8000a6c:	f7ff fbd0 	bl	8000210 <memchr>
 8000a70:	b108      	cbz	r0, 8000a76 <_printf_i+0x1e6>
 8000a72:	1b80      	subs	r0, r0, r6
 8000a74:	6060      	str	r0, [r4, #4]
 8000a76:	6863      	ldr	r3, [r4, #4]
 8000a78:	6123      	str	r3, [r4, #16]
 8000a7a:	2300      	movs	r3, #0
 8000a7c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000a80:	e7aa      	b.n	80009d8 <_printf_i+0x148>
 8000a82:	6923      	ldr	r3, [r4, #16]
 8000a84:	4632      	mov	r2, r6
 8000a86:	4649      	mov	r1, r9
 8000a88:	4640      	mov	r0, r8
 8000a8a:	47d0      	blx	sl
 8000a8c:	3001      	adds	r0, #1
 8000a8e:	d0ad      	beq.n	80009ec <_printf_i+0x15c>
 8000a90:	6823      	ldr	r3, [r4, #0]
 8000a92:	079b      	lsls	r3, r3, #30
 8000a94:	d413      	bmi.n	8000abe <_printf_i+0x22e>
 8000a96:	68e0      	ldr	r0, [r4, #12]
 8000a98:	9b03      	ldr	r3, [sp, #12]
 8000a9a:	4298      	cmp	r0, r3
 8000a9c:	bfb8      	it	lt
 8000a9e:	4618      	movlt	r0, r3
 8000aa0:	e7a6      	b.n	80009f0 <_printf_i+0x160>
 8000aa2:	2301      	movs	r3, #1
 8000aa4:	4632      	mov	r2, r6
 8000aa6:	4649      	mov	r1, r9
 8000aa8:	4640      	mov	r0, r8
 8000aaa:	47d0      	blx	sl
 8000aac:	3001      	adds	r0, #1
 8000aae:	d09d      	beq.n	80009ec <_printf_i+0x15c>
 8000ab0:	3501      	adds	r5, #1
 8000ab2:	68e3      	ldr	r3, [r4, #12]
 8000ab4:	9903      	ldr	r1, [sp, #12]
 8000ab6:	1a5b      	subs	r3, r3, r1
 8000ab8:	42ab      	cmp	r3, r5
 8000aba:	dcf2      	bgt.n	8000aa2 <_printf_i+0x212>
 8000abc:	e7eb      	b.n	8000a96 <_printf_i+0x206>
 8000abe:	2500      	movs	r5, #0
 8000ac0:	f104 0619 	add.w	r6, r4, #25
 8000ac4:	e7f5      	b.n	8000ab2 <_printf_i+0x222>
 8000ac6:	bf00      	nop
 8000ac8:	080014df 	.word	0x080014df
 8000acc:	080014f0 	.word	0x080014f0

08000ad0 <std>:
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	b510      	push	{r4, lr}
 8000ad4:	4604      	mov	r4, r0
 8000ad6:	e9c0 3300 	strd	r3, r3, [r0]
 8000ada:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ade:	6083      	str	r3, [r0, #8]
 8000ae0:	8181      	strh	r1, [r0, #12]
 8000ae2:	6643      	str	r3, [r0, #100]	@ 0x64
 8000ae4:	81c2      	strh	r2, [r0, #14]
 8000ae6:	6183      	str	r3, [r0, #24]
 8000ae8:	4619      	mov	r1, r3
 8000aea:	2208      	movs	r2, #8
 8000aec:	305c      	adds	r0, #92	@ 0x5c
 8000aee:	f000 f9a3 	bl	8000e38 <memset>
 8000af2:	4b0d      	ldr	r3, [pc, #52]	@ (8000b28 <std+0x58>)
 8000af4:	6263      	str	r3, [r4, #36]	@ 0x24
 8000af6:	4b0d      	ldr	r3, [pc, #52]	@ (8000b2c <std+0x5c>)
 8000af8:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000afa:	4b0d      	ldr	r3, [pc, #52]	@ (8000b30 <std+0x60>)
 8000afc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000afe:	4b0d      	ldr	r3, [pc, #52]	@ (8000b34 <std+0x64>)
 8000b00:	6323      	str	r3, [r4, #48]	@ 0x30
 8000b02:	4b0d      	ldr	r3, [pc, #52]	@ (8000b38 <std+0x68>)
 8000b04:	6224      	str	r4, [r4, #32]
 8000b06:	429c      	cmp	r4, r3
 8000b08:	d006      	beq.n	8000b18 <std+0x48>
 8000b0a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000b0e:	4294      	cmp	r4, r2
 8000b10:	d002      	beq.n	8000b18 <std+0x48>
 8000b12:	33d0      	adds	r3, #208	@ 0xd0
 8000b14:	429c      	cmp	r4, r3
 8000b16:	d105      	bne.n	8000b24 <std+0x54>
 8000b18:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000b1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b20:	f000 b9fc 	b.w	8000f1c <__retarget_lock_init_recursive>
 8000b24:	bd10      	pop	{r4, pc}
 8000b26:	bf00      	nop
 8000b28:	08000c89 	.word	0x08000c89
 8000b2c:	08000cab 	.word	0x08000cab
 8000b30:	08000ce3 	.word	0x08000ce3
 8000b34:	08000d07 	.word	0x08000d07
 8000b38:	2000007c 	.word	0x2000007c

08000b3c <stdio_exit_handler>:
 8000b3c:	4a02      	ldr	r2, [pc, #8]	@ (8000b48 <stdio_exit_handler+0xc>)
 8000b3e:	4903      	ldr	r1, [pc, #12]	@ (8000b4c <stdio_exit_handler+0x10>)
 8000b40:	4803      	ldr	r0, [pc, #12]	@ (8000b50 <stdio_exit_handler+0x14>)
 8000b42:	f000 b869 	b.w	8000c18 <_fwalk_sglue>
 8000b46:	bf00      	nop
 8000b48:	20000004 	.word	0x20000004
 8000b4c:	0800121d 	.word	0x0800121d
 8000b50:	20000014 	.word	0x20000014

08000b54 <cleanup_stdio>:
 8000b54:	6841      	ldr	r1, [r0, #4]
 8000b56:	4b0c      	ldr	r3, [pc, #48]	@ (8000b88 <cleanup_stdio+0x34>)
 8000b58:	4299      	cmp	r1, r3
 8000b5a:	b510      	push	{r4, lr}
 8000b5c:	4604      	mov	r4, r0
 8000b5e:	d001      	beq.n	8000b64 <cleanup_stdio+0x10>
 8000b60:	f000 fb5c 	bl	800121c <_fflush_r>
 8000b64:	68a1      	ldr	r1, [r4, #8]
 8000b66:	4b09      	ldr	r3, [pc, #36]	@ (8000b8c <cleanup_stdio+0x38>)
 8000b68:	4299      	cmp	r1, r3
 8000b6a:	d002      	beq.n	8000b72 <cleanup_stdio+0x1e>
 8000b6c:	4620      	mov	r0, r4
 8000b6e:	f000 fb55 	bl	800121c <_fflush_r>
 8000b72:	68e1      	ldr	r1, [r4, #12]
 8000b74:	4b06      	ldr	r3, [pc, #24]	@ (8000b90 <cleanup_stdio+0x3c>)
 8000b76:	4299      	cmp	r1, r3
 8000b78:	d004      	beq.n	8000b84 <cleanup_stdio+0x30>
 8000b7a:	4620      	mov	r0, r4
 8000b7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b80:	f000 bb4c 	b.w	800121c <_fflush_r>
 8000b84:	bd10      	pop	{r4, pc}
 8000b86:	bf00      	nop
 8000b88:	2000007c 	.word	0x2000007c
 8000b8c:	200000e4 	.word	0x200000e4
 8000b90:	2000014c 	.word	0x2000014c

08000b94 <global_stdio_init.part.0>:
 8000b94:	b510      	push	{r4, lr}
 8000b96:	4b0b      	ldr	r3, [pc, #44]	@ (8000bc4 <global_stdio_init.part.0+0x30>)
 8000b98:	4c0b      	ldr	r4, [pc, #44]	@ (8000bc8 <global_stdio_init.part.0+0x34>)
 8000b9a:	4a0c      	ldr	r2, [pc, #48]	@ (8000bcc <global_stdio_init.part.0+0x38>)
 8000b9c:	601a      	str	r2, [r3, #0]
 8000b9e:	4620      	mov	r0, r4
 8000ba0:	2200      	movs	r2, #0
 8000ba2:	2104      	movs	r1, #4
 8000ba4:	f7ff ff94 	bl	8000ad0 <std>
 8000ba8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000bac:	2201      	movs	r2, #1
 8000bae:	2109      	movs	r1, #9
 8000bb0:	f7ff ff8e 	bl	8000ad0 <std>
 8000bb4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000bb8:	2202      	movs	r2, #2
 8000bba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bbe:	2112      	movs	r1, #18
 8000bc0:	f7ff bf86 	b.w	8000ad0 <std>
 8000bc4:	200001b4 	.word	0x200001b4
 8000bc8:	2000007c 	.word	0x2000007c
 8000bcc:	08000b3d 	.word	0x08000b3d

08000bd0 <__sfp_lock_acquire>:
 8000bd0:	4801      	ldr	r0, [pc, #4]	@ (8000bd8 <__sfp_lock_acquire+0x8>)
 8000bd2:	f000 b9a4 	b.w	8000f1e <__retarget_lock_acquire_recursive>
 8000bd6:	bf00      	nop
 8000bd8:	200001bd 	.word	0x200001bd

08000bdc <__sfp_lock_release>:
 8000bdc:	4801      	ldr	r0, [pc, #4]	@ (8000be4 <__sfp_lock_release+0x8>)
 8000bde:	f000 b99f 	b.w	8000f20 <__retarget_lock_release_recursive>
 8000be2:	bf00      	nop
 8000be4:	200001bd 	.word	0x200001bd

08000be8 <__sinit>:
 8000be8:	b510      	push	{r4, lr}
 8000bea:	4604      	mov	r4, r0
 8000bec:	f7ff fff0 	bl	8000bd0 <__sfp_lock_acquire>
 8000bf0:	6a23      	ldr	r3, [r4, #32]
 8000bf2:	b11b      	cbz	r3, 8000bfc <__sinit+0x14>
 8000bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bf8:	f7ff bff0 	b.w	8000bdc <__sfp_lock_release>
 8000bfc:	4b04      	ldr	r3, [pc, #16]	@ (8000c10 <__sinit+0x28>)
 8000bfe:	6223      	str	r3, [r4, #32]
 8000c00:	4b04      	ldr	r3, [pc, #16]	@ (8000c14 <__sinit+0x2c>)
 8000c02:	681b      	ldr	r3, [r3, #0]
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d1f5      	bne.n	8000bf4 <__sinit+0xc>
 8000c08:	f7ff ffc4 	bl	8000b94 <global_stdio_init.part.0>
 8000c0c:	e7f2      	b.n	8000bf4 <__sinit+0xc>
 8000c0e:	bf00      	nop
 8000c10:	08000b55 	.word	0x08000b55
 8000c14:	200001b4 	.word	0x200001b4

08000c18 <_fwalk_sglue>:
 8000c18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c1c:	4607      	mov	r7, r0
 8000c1e:	4688      	mov	r8, r1
 8000c20:	4614      	mov	r4, r2
 8000c22:	2600      	movs	r6, #0
 8000c24:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c28:	f1b9 0901 	subs.w	r9, r9, #1
 8000c2c:	d505      	bpl.n	8000c3a <_fwalk_sglue+0x22>
 8000c2e:	6824      	ldr	r4, [r4, #0]
 8000c30:	2c00      	cmp	r4, #0
 8000c32:	d1f7      	bne.n	8000c24 <_fwalk_sglue+0xc>
 8000c34:	4630      	mov	r0, r6
 8000c36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c3a:	89ab      	ldrh	r3, [r5, #12]
 8000c3c:	2b01      	cmp	r3, #1
 8000c3e:	d907      	bls.n	8000c50 <_fwalk_sglue+0x38>
 8000c40:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c44:	3301      	adds	r3, #1
 8000c46:	d003      	beq.n	8000c50 <_fwalk_sglue+0x38>
 8000c48:	4629      	mov	r1, r5
 8000c4a:	4638      	mov	r0, r7
 8000c4c:	47c0      	blx	r8
 8000c4e:	4306      	orrs	r6, r0
 8000c50:	3568      	adds	r5, #104	@ 0x68
 8000c52:	e7e9      	b.n	8000c28 <_fwalk_sglue+0x10>

08000c54 <iprintf>:
 8000c54:	b40f      	push	{r0, r1, r2, r3}
 8000c56:	b507      	push	{r0, r1, r2, lr}
 8000c58:	4906      	ldr	r1, [pc, #24]	@ (8000c74 <iprintf+0x20>)
 8000c5a:	ab04      	add	r3, sp, #16
 8000c5c:	6808      	ldr	r0, [r1, #0]
 8000c5e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000c62:	6881      	ldr	r1, [r0, #8]
 8000c64:	9301      	str	r3, [sp, #4]
 8000c66:	f7ff fc83 	bl	8000570 <_vfiprintf_r>
 8000c6a:	b003      	add	sp, #12
 8000c6c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000c70:	b004      	add	sp, #16
 8000c72:	4770      	bx	lr
 8000c74:	20000010 	.word	0x20000010

08000c78 <putchar>:
 8000c78:	4b02      	ldr	r3, [pc, #8]	@ (8000c84 <putchar+0xc>)
 8000c7a:	4601      	mov	r1, r0
 8000c7c:	6818      	ldr	r0, [r3, #0]
 8000c7e:	6882      	ldr	r2, [r0, #8]
 8000c80:	f000 bb56 	b.w	8001330 <_putc_r>
 8000c84:	20000010 	.word	0x20000010

08000c88 <__sread>:
 8000c88:	b510      	push	{r4, lr}
 8000c8a:	460c      	mov	r4, r1
 8000c8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c90:	f000 f8fc 	bl	8000e8c <_read_r>
 8000c94:	2800      	cmp	r0, #0
 8000c96:	bfab      	itete	ge
 8000c98:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000c9a:	89a3      	ldrhlt	r3, [r4, #12]
 8000c9c:	181b      	addge	r3, r3, r0
 8000c9e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000ca2:	bfac      	ite	ge
 8000ca4:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000ca6:	81a3      	strhlt	r3, [r4, #12]
 8000ca8:	bd10      	pop	{r4, pc}

08000caa <__swrite>:
 8000caa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cae:	461f      	mov	r7, r3
 8000cb0:	898b      	ldrh	r3, [r1, #12]
 8000cb2:	05db      	lsls	r3, r3, #23
 8000cb4:	4605      	mov	r5, r0
 8000cb6:	460c      	mov	r4, r1
 8000cb8:	4616      	mov	r6, r2
 8000cba:	d505      	bpl.n	8000cc8 <__swrite+0x1e>
 8000cbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cc0:	2302      	movs	r3, #2
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	f000 f8d0 	bl	8000e68 <_lseek_r>
 8000cc8:	89a3      	ldrh	r3, [r4, #12]
 8000cca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cce:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000cd2:	81a3      	strh	r3, [r4, #12]
 8000cd4:	4632      	mov	r2, r6
 8000cd6:	463b      	mov	r3, r7
 8000cd8:	4628      	mov	r0, r5
 8000cda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cde:	f000 b8e7 	b.w	8000eb0 <_write_r>

08000ce2 <__sseek>:
 8000ce2:	b510      	push	{r4, lr}
 8000ce4:	460c      	mov	r4, r1
 8000ce6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cea:	f000 f8bd 	bl	8000e68 <_lseek_r>
 8000cee:	1c43      	adds	r3, r0, #1
 8000cf0:	89a3      	ldrh	r3, [r4, #12]
 8000cf2:	bf15      	itete	ne
 8000cf4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000cf6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000cfa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000cfe:	81a3      	strheq	r3, [r4, #12]
 8000d00:	bf18      	it	ne
 8000d02:	81a3      	strhne	r3, [r4, #12]
 8000d04:	bd10      	pop	{r4, pc}

08000d06 <__sclose>:
 8000d06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d0a:	f000 b89d 	b.w	8000e48 <_close_r>

08000d0e <__swbuf_r>:
 8000d0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d10:	460e      	mov	r6, r1
 8000d12:	4614      	mov	r4, r2
 8000d14:	4605      	mov	r5, r0
 8000d16:	b118      	cbz	r0, 8000d20 <__swbuf_r+0x12>
 8000d18:	6a03      	ldr	r3, [r0, #32]
 8000d1a:	b90b      	cbnz	r3, 8000d20 <__swbuf_r+0x12>
 8000d1c:	f7ff ff64 	bl	8000be8 <__sinit>
 8000d20:	69a3      	ldr	r3, [r4, #24]
 8000d22:	60a3      	str	r3, [r4, #8]
 8000d24:	89a3      	ldrh	r3, [r4, #12]
 8000d26:	071a      	lsls	r2, r3, #28
 8000d28:	d501      	bpl.n	8000d2e <__swbuf_r+0x20>
 8000d2a:	6923      	ldr	r3, [r4, #16]
 8000d2c:	b943      	cbnz	r3, 8000d40 <__swbuf_r+0x32>
 8000d2e:	4621      	mov	r1, r4
 8000d30:	4628      	mov	r0, r5
 8000d32:	f000 f82b 	bl	8000d8c <__swsetup_r>
 8000d36:	b118      	cbz	r0, 8000d40 <__swbuf_r+0x32>
 8000d38:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000d3c:	4638      	mov	r0, r7
 8000d3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d40:	6823      	ldr	r3, [r4, #0]
 8000d42:	6922      	ldr	r2, [r4, #16]
 8000d44:	1a98      	subs	r0, r3, r2
 8000d46:	6963      	ldr	r3, [r4, #20]
 8000d48:	b2f6      	uxtb	r6, r6
 8000d4a:	4283      	cmp	r3, r0
 8000d4c:	4637      	mov	r7, r6
 8000d4e:	dc05      	bgt.n	8000d5c <__swbuf_r+0x4e>
 8000d50:	4621      	mov	r1, r4
 8000d52:	4628      	mov	r0, r5
 8000d54:	f000 fa62 	bl	800121c <_fflush_r>
 8000d58:	2800      	cmp	r0, #0
 8000d5a:	d1ed      	bne.n	8000d38 <__swbuf_r+0x2a>
 8000d5c:	68a3      	ldr	r3, [r4, #8]
 8000d5e:	3b01      	subs	r3, #1
 8000d60:	60a3      	str	r3, [r4, #8]
 8000d62:	6823      	ldr	r3, [r4, #0]
 8000d64:	1c5a      	adds	r2, r3, #1
 8000d66:	6022      	str	r2, [r4, #0]
 8000d68:	701e      	strb	r6, [r3, #0]
 8000d6a:	6962      	ldr	r2, [r4, #20]
 8000d6c:	1c43      	adds	r3, r0, #1
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	d004      	beq.n	8000d7c <__swbuf_r+0x6e>
 8000d72:	89a3      	ldrh	r3, [r4, #12]
 8000d74:	07db      	lsls	r3, r3, #31
 8000d76:	d5e1      	bpl.n	8000d3c <__swbuf_r+0x2e>
 8000d78:	2e0a      	cmp	r6, #10
 8000d7a:	d1df      	bne.n	8000d3c <__swbuf_r+0x2e>
 8000d7c:	4621      	mov	r1, r4
 8000d7e:	4628      	mov	r0, r5
 8000d80:	f000 fa4c 	bl	800121c <_fflush_r>
 8000d84:	2800      	cmp	r0, #0
 8000d86:	d0d9      	beq.n	8000d3c <__swbuf_r+0x2e>
 8000d88:	e7d6      	b.n	8000d38 <__swbuf_r+0x2a>
	...

08000d8c <__swsetup_r>:
 8000d8c:	b538      	push	{r3, r4, r5, lr}
 8000d8e:	4b29      	ldr	r3, [pc, #164]	@ (8000e34 <__swsetup_r+0xa8>)
 8000d90:	4605      	mov	r5, r0
 8000d92:	6818      	ldr	r0, [r3, #0]
 8000d94:	460c      	mov	r4, r1
 8000d96:	b118      	cbz	r0, 8000da0 <__swsetup_r+0x14>
 8000d98:	6a03      	ldr	r3, [r0, #32]
 8000d9a:	b90b      	cbnz	r3, 8000da0 <__swsetup_r+0x14>
 8000d9c:	f7ff ff24 	bl	8000be8 <__sinit>
 8000da0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000da4:	0719      	lsls	r1, r3, #28
 8000da6:	d422      	bmi.n	8000dee <__swsetup_r+0x62>
 8000da8:	06da      	lsls	r2, r3, #27
 8000daa:	d407      	bmi.n	8000dbc <__swsetup_r+0x30>
 8000dac:	2209      	movs	r2, #9
 8000dae:	602a      	str	r2, [r5, #0]
 8000db0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000db4:	81a3      	strh	r3, [r4, #12]
 8000db6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000dba:	e033      	b.n	8000e24 <__swsetup_r+0x98>
 8000dbc:	0758      	lsls	r0, r3, #29
 8000dbe:	d512      	bpl.n	8000de6 <__swsetup_r+0x5a>
 8000dc0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000dc2:	b141      	cbz	r1, 8000dd6 <__swsetup_r+0x4a>
 8000dc4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000dc8:	4299      	cmp	r1, r3
 8000dca:	d002      	beq.n	8000dd2 <__swsetup_r+0x46>
 8000dcc:	4628      	mov	r0, r5
 8000dce:	f000 f8a9 	bl	8000f24 <_free_r>
 8000dd2:	2300      	movs	r3, #0
 8000dd4:	6363      	str	r3, [r4, #52]	@ 0x34
 8000dd6:	89a3      	ldrh	r3, [r4, #12]
 8000dd8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000ddc:	81a3      	strh	r3, [r4, #12]
 8000dde:	2300      	movs	r3, #0
 8000de0:	6063      	str	r3, [r4, #4]
 8000de2:	6923      	ldr	r3, [r4, #16]
 8000de4:	6023      	str	r3, [r4, #0]
 8000de6:	89a3      	ldrh	r3, [r4, #12]
 8000de8:	f043 0308 	orr.w	r3, r3, #8
 8000dec:	81a3      	strh	r3, [r4, #12]
 8000dee:	6923      	ldr	r3, [r4, #16]
 8000df0:	b94b      	cbnz	r3, 8000e06 <__swsetup_r+0x7a>
 8000df2:	89a3      	ldrh	r3, [r4, #12]
 8000df4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000df8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000dfc:	d003      	beq.n	8000e06 <__swsetup_r+0x7a>
 8000dfe:	4621      	mov	r1, r4
 8000e00:	4628      	mov	r0, r5
 8000e02:	f000 fa59 	bl	80012b8 <__smakebuf_r>
 8000e06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e0a:	f013 0201 	ands.w	r2, r3, #1
 8000e0e:	d00a      	beq.n	8000e26 <__swsetup_r+0x9a>
 8000e10:	2200      	movs	r2, #0
 8000e12:	60a2      	str	r2, [r4, #8]
 8000e14:	6962      	ldr	r2, [r4, #20]
 8000e16:	4252      	negs	r2, r2
 8000e18:	61a2      	str	r2, [r4, #24]
 8000e1a:	6922      	ldr	r2, [r4, #16]
 8000e1c:	b942      	cbnz	r2, 8000e30 <__swsetup_r+0xa4>
 8000e1e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000e22:	d1c5      	bne.n	8000db0 <__swsetup_r+0x24>
 8000e24:	bd38      	pop	{r3, r4, r5, pc}
 8000e26:	0799      	lsls	r1, r3, #30
 8000e28:	bf58      	it	pl
 8000e2a:	6962      	ldrpl	r2, [r4, #20]
 8000e2c:	60a2      	str	r2, [r4, #8]
 8000e2e:	e7f4      	b.n	8000e1a <__swsetup_r+0x8e>
 8000e30:	2000      	movs	r0, #0
 8000e32:	e7f7      	b.n	8000e24 <__swsetup_r+0x98>
 8000e34:	20000010 	.word	0x20000010

08000e38 <memset>:
 8000e38:	4402      	add	r2, r0
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	4293      	cmp	r3, r2
 8000e3e:	d100      	bne.n	8000e42 <memset+0xa>
 8000e40:	4770      	bx	lr
 8000e42:	f803 1b01 	strb.w	r1, [r3], #1
 8000e46:	e7f9      	b.n	8000e3c <memset+0x4>

08000e48 <_close_r>:
 8000e48:	b538      	push	{r3, r4, r5, lr}
 8000e4a:	4d06      	ldr	r5, [pc, #24]	@ (8000e64 <_close_r+0x1c>)
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	4604      	mov	r4, r0
 8000e50:	4608      	mov	r0, r1
 8000e52:	602b      	str	r3, [r5, #0]
 8000e54:	f000 fad2 	bl	80013fc <_close>
 8000e58:	1c43      	adds	r3, r0, #1
 8000e5a:	d102      	bne.n	8000e62 <_close_r+0x1a>
 8000e5c:	682b      	ldr	r3, [r5, #0]
 8000e5e:	b103      	cbz	r3, 8000e62 <_close_r+0x1a>
 8000e60:	6023      	str	r3, [r4, #0]
 8000e62:	bd38      	pop	{r3, r4, r5, pc}
 8000e64:	200001b8 	.word	0x200001b8

08000e68 <_lseek_r>:
 8000e68:	b538      	push	{r3, r4, r5, lr}
 8000e6a:	4d07      	ldr	r5, [pc, #28]	@ (8000e88 <_lseek_r+0x20>)
 8000e6c:	4604      	mov	r4, r0
 8000e6e:	4608      	mov	r0, r1
 8000e70:	4611      	mov	r1, r2
 8000e72:	2200      	movs	r2, #0
 8000e74:	602a      	str	r2, [r5, #0]
 8000e76:	461a      	mov	r2, r3
 8000e78:	f000 fad8 	bl	800142c <_lseek>
 8000e7c:	1c43      	adds	r3, r0, #1
 8000e7e:	d102      	bne.n	8000e86 <_lseek_r+0x1e>
 8000e80:	682b      	ldr	r3, [r5, #0]
 8000e82:	b103      	cbz	r3, 8000e86 <_lseek_r+0x1e>
 8000e84:	6023      	str	r3, [r4, #0]
 8000e86:	bd38      	pop	{r3, r4, r5, pc}
 8000e88:	200001b8 	.word	0x200001b8

08000e8c <_read_r>:
 8000e8c:	b538      	push	{r3, r4, r5, lr}
 8000e8e:	4d07      	ldr	r5, [pc, #28]	@ (8000eac <_read_r+0x20>)
 8000e90:	4604      	mov	r4, r0
 8000e92:	4608      	mov	r0, r1
 8000e94:	4611      	mov	r1, r2
 8000e96:	2200      	movs	r2, #0
 8000e98:	602a      	str	r2, [r5, #0]
 8000e9a:	461a      	mov	r2, r3
 8000e9c:	f000 face 	bl	800143c <_read>
 8000ea0:	1c43      	adds	r3, r0, #1
 8000ea2:	d102      	bne.n	8000eaa <_read_r+0x1e>
 8000ea4:	682b      	ldr	r3, [r5, #0]
 8000ea6:	b103      	cbz	r3, 8000eaa <_read_r+0x1e>
 8000ea8:	6023      	str	r3, [r4, #0]
 8000eaa:	bd38      	pop	{r3, r4, r5, pc}
 8000eac:	200001b8 	.word	0x200001b8

08000eb0 <_write_r>:
 8000eb0:	b538      	push	{r3, r4, r5, lr}
 8000eb2:	4d07      	ldr	r5, [pc, #28]	@ (8000ed0 <_write_r+0x20>)
 8000eb4:	4604      	mov	r4, r0
 8000eb6:	4608      	mov	r0, r1
 8000eb8:	4611      	mov	r1, r2
 8000eba:	2200      	movs	r2, #0
 8000ebc:	602a      	str	r2, [r5, #0]
 8000ebe:	461a      	mov	r2, r3
 8000ec0:	f7ff fa1d 	bl	80002fe <_write>
 8000ec4:	1c43      	adds	r3, r0, #1
 8000ec6:	d102      	bne.n	8000ece <_write_r+0x1e>
 8000ec8:	682b      	ldr	r3, [r5, #0]
 8000eca:	b103      	cbz	r3, 8000ece <_write_r+0x1e>
 8000ecc:	6023      	str	r3, [r4, #0]
 8000ece:	bd38      	pop	{r3, r4, r5, pc}
 8000ed0:	200001b8 	.word	0x200001b8

08000ed4 <__libc_init_array>:
 8000ed4:	b570      	push	{r4, r5, r6, lr}
 8000ed6:	4d0d      	ldr	r5, [pc, #52]	@ (8000f0c <__libc_init_array+0x38>)
 8000ed8:	4c0d      	ldr	r4, [pc, #52]	@ (8000f10 <__libc_init_array+0x3c>)
 8000eda:	1b64      	subs	r4, r4, r5
 8000edc:	10a4      	asrs	r4, r4, #2
 8000ede:	2600      	movs	r6, #0
 8000ee0:	42a6      	cmp	r6, r4
 8000ee2:	d109      	bne.n	8000ef8 <__libc_init_array+0x24>
 8000ee4:	4d0b      	ldr	r5, [pc, #44]	@ (8000f14 <__libc_init_array+0x40>)
 8000ee6:	4c0c      	ldr	r4, [pc, #48]	@ (8000f18 <__libc_init_array+0x44>)
 8000ee8:	f000 fabe 	bl	8001468 <_init>
 8000eec:	1b64      	subs	r4, r4, r5
 8000eee:	10a4      	asrs	r4, r4, #2
 8000ef0:	2600      	movs	r6, #0
 8000ef2:	42a6      	cmp	r6, r4
 8000ef4:	d105      	bne.n	8000f02 <__libc_init_array+0x2e>
 8000ef6:	bd70      	pop	{r4, r5, r6, pc}
 8000ef8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000efc:	4798      	blx	r3
 8000efe:	3601      	adds	r6, #1
 8000f00:	e7ee      	b.n	8000ee0 <__libc_init_array+0xc>
 8000f02:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f06:	4798      	blx	r3
 8000f08:	3601      	adds	r6, #1
 8000f0a:	e7f2      	b.n	8000ef2 <__libc_init_array+0x1e>
 8000f0c:	0800150c 	.word	0x0800150c
 8000f10:	0800150c 	.word	0x0800150c
 8000f14:	0800150c 	.word	0x0800150c
 8000f18:	08001510 	.word	0x08001510

08000f1c <__retarget_lock_init_recursive>:
 8000f1c:	4770      	bx	lr

08000f1e <__retarget_lock_acquire_recursive>:
 8000f1e:	4770      	bx	lr

08000f20 <__retarget_lock_release_recursive>:
 8000f20:	4770      	bx	lr
	...

08000f24 <_free_r>:
 8000f24:	b538      	push	{r3, r4, r5, lr}
 8000f26:	4605      	mov	r5, r0
 8000f28:	2900      	cmp	r1, #0
 8000f2a:	d041      	beq.n	8000fb0 <_free_r+0x8c>
 8000f2c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f30:	1f0c      	subs	r4, r1, #4
 8000f32:	2b00      	cmp	r3, #0
 8000f34:	bfb8      	it	lt
 8000f36:	18e4      	addlt	r4, r4, r3
 8000f38:	f000 f8e0 	bl	80010fc <__malloc_lock>
 8000f3c:	4a1d      	ldr	r2, [pc, #116]	@ (8000fb4 <_free_r+0x90>)
 8000f3e:	6813      	ldr	r3, [r2, #0]
 8000f40:	b933      	cbnz	r3, 8000f50 <_free_r+0x2c>
 8000f42:	6063      	str	r3, [r4, #4]
 8000f44:	6014      	str	r4, [r2, #0]
 8000f46:	4628      	mov	r0, r5
 8000f48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f4c:	f000 b8dc 	b.w	8001108 <__malloc_unlock>
 8000f50:	42a3      	cmp	r3, r4
 8000f52:	d908      	bls.n	8000f66 <_free_r+0x42>
 8000f54:	6820      	ldr	r0, [r4, #0]
 8000f56:	1821      	adds	r1, r4, r0
 8000f58:	428b      	cmp	r3, r1
 8000f5a:	bf01      	itttt	eq
 8000f5c:	6819      	ldreq	r1, [r3, #0]
 8000f5e:	685b      	ldreq	r3, [r3, #4]
 8000f60:	1809      	addeq	r1, r1, r0
 8000f62:	6021      	streq	r1, [r4, #0]
 8000f64:	e7ed      	b.n	8000f42 <_free_r+0x1e>
 8000f66:	461a      	mov	r2, r3
 8000f68:	685b      	ldr	r3, [r3, #4]
 8000f6a:	b10b      	cbz	r3, 8000f70 <_free_r+0x4c>
 8000f6c:	42a3      	cmp	r3, r4
 8000f6e:	d9fa      	bls.n	8000f66 <_free_r+0x42>
 8000f70:	6811      	ldr	r1, [r2, #0]
 8000f72:	1850      	adds	r0, r2, r1
 8000f74:	42a0      	cmp	r0, r4
 8000f76:	d10b      	bne.n	8000f90 <_free_r+0x6c>
 8000f78:	6820      	ldr	r0, [r4, #0]
 8000f7a:	4401      	add	r1, r0
 8000f7c:	1850      	adds	r0, r2, r1
 8000f7e:	4283      	cmp	r3, r0
 8000f80:	6011      	str	r1, [r2, #0]
 8000f82:	d1e0      	bne.n	8000f46 <_free_r+0x22>
 8000f84:	6818      	ldr	r0, [r3, #0]
 8000f86:	685b      	ldr	r3, [r3, #4]
 8000f88:	6053      	str	r3, [r2, #4]
 8000f8a:	4408      	add	r0, r1
 8000f8c:	6010      	str	r0, [r2, #0]
 8000f8e:	e7da      	b.n	8000f46 <_free_r+0x22>
 8000f90:	d902      	bls.n	8000f98 <_free_r+0x74>
 8000f92:	230c      	movs	r3, #12
 8000f94:	602b      	str	r3, [r5, #0]
 8000f96:	e7d6      	b.n	8000f46 <_free_r+0x22>
 8000f98:	6820      	ldr	r0, [r4, #0]
 8000f9a:	1821      	adds	r1, r4, r0
 8000f9c:	428b      	cmp	r3, r1
 8000f9e:	bf04      	itt	eq
 8000fa0:	6819      	ldreq	r1, [r3, #0]
 8000fa2:	685b      	ldreq	r3, [r3, #4]
 8000fa4:	6063      	str	r3, [r4, #4]
 8000fa6:	bf04      	itt	eq
 8000fa8:	1809      	addeq	r1, r1, r0
 8000faa:	6021      	streq	r1, [r4, #0]
 8000fac:	6054      	str	r4, [r2, #4]
 8000fae:	e7ca      	b.n	8000f46 <_free_r+0x22>
 8000fb0:	bd38      	pop	{r3, r4, r5, pc}
 8000fb2:	bf00      	nop
 8000fb4:	200001c4 	.word	0x200001c4

08000fb8 <sbrk_aligned>:
 8000fb8:	b570      	push	{r4, r5, r6, lr}
 8000fba:	4e0f      	ldr	r6, [pc, #60]	@ (8000ff8 <sbrk_aligned+0x40>)
 8000fbc:	460c      	mov	r4, r1
 8000fbe:	6831      	ldr	r1, [r6, #0]
 8000fc0:	4605      	mov	r5, r0
 8000fc2:	b911      	cbnz	r1, 8000fca <sbrk_aligned+0x12>
 8000fc4:	f000 fa0a 	bl	80013dc <_sbrk_r>
 8000fc8:	6030      	str	r0, [r6, #0]
 8000fca:	4621      	mov	r1, r4
 8000fcc:	4628      	mov	r0, r5
 8000fce:	f000 fa05 	bl	80013dc <_sbrk_r>
 8000fd2:	1c43      	adds	r3, r0, #1
 8000fd4:	d103      	bne.n	8000fde <sbrk_aligned+0x26>
 8000fd6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000fda:	4620      	mov	r0, r4
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	1cc4      	adds	r4, r0, #3
 8000fe0:	f024 0403 	bic.w	r4, r4, #3
 8000fe4:	42a0      	cmp	r0, r4
 8000fe6:	d0f8      	beq.n	8000fda <sbrk_aligned+0x22>
 8000fe8:	1a21      	subs	r1, r4, r0
 8000fea:	4628      	mov	r0, r5
 8000fec:	f000 f9f6 	bl	80013dc <_sbrk_r>
 8000ff0:	3001      	adds	r0, #1
 8000ff2:	d1f2      	bne.n	8000fda <sbrk_aligned+0x22>
 8000ff4:	e7ef      	b.n	8000fd6 <sbrk_aligned+0x1e>
 8000ff6:	bf00      	nop
 8000ff8:	200001c0 	.word	0x200001c0

08000ffc <_malloc_r>:
 8000ffc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001000:	1ccd      	adds	r5, r1, #3
 8001002:	f025 0503 	bic.w	r5, r5, #3
 8001006:	3508      	adds	r5, #8
 8001008:	2d0c      	cmp	r5, #12
 800100a:	bf38      	it	cc
 800100c:	250c      	movcc	r5, #12
 800100e:	2d00      	cmp	r5, #0
 8001010:	4606      	mov	r6, r0
 8001012:	db01      	blt.n	8001018 <_malloc_r+0x1c>
 8001014:	42a9      	cmp	r1, r5
 8001016:	d904      	bls.n	8001022 <_malloc_r+0x26>
 8001018:	230c      	movs	r3, #12
 800101a:	6033      	str	r3, [r6, #0]
 800101c:	2000      	movs	r0, #0
 800101e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001022:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80010f8 <_malloc_r+0xfc>
 8001026:	f000 f869 	bl	80010fc <__malloc_lock>
 800102a:	f8d8 3000 	ldr.w	r3, [r8]
 800102e:	461c      	mov	r4, r3
 8001030:	bb44      	cbnz	r4, 8001084 <_malloc_r+0x88>
 8001032:	4629      	mov	r1, r5
 8001034:	4630      	mov	r0, r6
 8001036:	f7ff ffbf 	bl	8000fb8 <sbrk_aligned>
 800103a:	1c43      	adds	r3, r0, #1
 800103c:	4604      	mov	r4, r0
 800103e:	d158      	bne.n	80010f2 <_malloc_r+0xf6>
 8001040:	f8d8 4000 	ldr.w	r4, [r8]
 8001044:	4627      	mov	r7, r4
 8001046:	2f00      	cmp	r7, #0
 8001048:	d143      	bne.n	80010d2 <_malloc_r+0xd6>
 800104a:	2c00      	cmp	r4, #0
 800104c:	d04b      	beq.n	80010e6 <_malloc_r+0xea>
 800104e:	6823      	ldr	r3, [r4, #0]
 8001050:	4639      	mov	r1, r7
 8001052:	4630      	mov	r0, r6
 8001054:	eb04 0903 	add.w	r9, r4, r3
 8001058:	f000 f9c0 	bl	80013dc <_sbrk_r>
 800105c:	4581      	cmp	r9, r0
 800105e:	d142      	bne.n	80010e6 <_malloc_r+0xea>
 8001060:	6821      	ldr	r1, [r4, #0]
 8001062:	1a6d      	subs	r5, r5, r1
 8001064:	4629      	mov	r1, r5
 8001066:	4630      	mov	r0, r6
 8001068:	f7ff ffa6 	bl	8000fb8 <sbrk_aligned>
 800106c:	3001      	adds	r0, #1
 800106e:	d03a      	beq.n	80010e6 <_malloc_r+0xea>
 8001070:	6823      	ldr	r3, [r4, #0]
 8001072:	442b      	add	r3, r5
 8001074:	6023      	str	r3, [r4, #0]
 8001076:	f8d8 3000 	ldr.w	r3, [r8]
 800107a:	685a      	ldr	r2, [r3, #4]
 800107c:	bb62      	cbnz	r2, 80010d8 <_malloc_r+0xdc>
 800107e:	f8c8 7000 	str.w	r7, [r8]
 8001082:	e00f      	b.n	80010a4 <_malloc_r+0xa8>
 8001084:	6822      	ldr	r2, [r4, #0]
 8001086:	1b52      	subs	r2, r2, r5
 8001088:	d420      	bmi.n	80010cc <_malloc_r+0xd0>
 800108a:	2a0b      	cmp	r2, #11
 800108c:	d917      	bls.n	80010be <_malloc_r+0xc2>
 800108e:	1961      	adds	r1, r4, r5
 8001090:	42a3      	cmp	r3, r4
 8001092:	6025      	str	r5, [r4, #0]
 8001094:	bf18      	it	ne
 8001096:	6059      	strne	r1, [r3, #4]
 8001098:	6863      	ldr	r3, [r4, #4]
 800109a:	bf08      	it	eq
 800109c:	f8c8 1000 	streq.w	r1, [r8]
 80010a0:	5162      	str	r2, [r4, r5]
 80010a2:	604b      	str	r3, [r1, #4]
 80010a4:	4630      	mov	r0, r6
 80010a6:	f000 f82f 	bl	8001108 <__malloc_unlock>
 80010aa:	f104 000b 	add.w	r0, r4, #11
 80010ae:	1d23      	adds	r3, r4, #4
 80010b0:	f020 0007 	bic.w	r0, r0, #7
 80010b4:	1ac2      	subs	r2, r0, r3
 80010b6:	bf1c      	itt	ne
 80010b8:	1a1b      	subne	r3, r3, r0
 80010ba:	50a3      	strne	r3, [r4, r2]
 80010bc:	e7af      	b.n	800101e <_malloc_r+0x22>
 80010be:	6862      	ldr	r2, [r4, #4]
 80010c0:	42a3      	cmp	r3, r4
 80010c2:	bf0c      	ite	eq
 80010c4:	f8c8 2000 	streq.w	r2, [r8]
 80010c8:	605a      	strne	r2, [r3, #4]
 80010ca:	e7eb      	b.n	80010a4 <_malloc_r+0xa8>
 80010cc:	4623      	mov	r3, r4
 80010ce:	6864      	ldr	r4, [r4, #4]
 80010d0:	e7ae      	b.n	8001030 <_malloc_r+0x34>
 80010d2:	463c      	mov	r4, r7
 80010d4:	687f      	ldr	r7, [r7, #4]
 80010d6:	e7b6      	b.n	8001046 <_malloc_r+0x4a>
 80010d8:	461a      	mov	r2, r3
 80010da:	685b      	ldr	r3, [r3, #4]
 80010dc:	42a3      	cmp	r3, r4
 80010de:	d1fb      	bne.n	80010d8 <_malloc_r+0xdc>
 80010e0:	2300      	movs	r3, #0
 80010e2:	6053      	str	r3, [r2, #4]
 80010e4:	e7de      	b.n	80010a4 <_malloc_r+0xa8>
 80010e6:	230c      	movs	r3, #12
 80010e8:	6033      	str	r3, [r6, #0]
 80010ea:	4630      	mov	r0, r6
 80010ec:	f000 f80c 	bl	8001108 <__malloc_unlock>
 80010f0:	e794      	b.n	800101c <_malloc_r+0x20>
 80010f2:	6005      	str	r5, [r0, #0]
 80010f4:	e7d6      	b.n	80010a4 <_malloc_r+0xa8>
 80010f6:	bf00      	nop
 80010f8:	200001c4 	.word	0x200001c4

080010fc <__malloc_lock>:
 80010fc:	4801      	ldr	r0, [pc, #4]	@ (8001104 <__malloc_lock+0x8>)
 80010fe:	f7ff bf0e 	b.w	8000f1e <__retarget_lock_acquire_recursive>
 8001102:	bf00      	nop
 8001104:	200001bc 	.word	0x200001bc

08001108 <__malloc_unlock>:
 8001108:	4801      	ldr	r0, [pc, #4]	@ (8001110 <__malloc_unlock+0x8>)
 800110a:	f7ff bf09 	b.w	8000f20 <__retarget_lock_release_recursive>
 800110e:	bf00      	nop
 8001110:	200001bc 	.word	0x200001bc

08001114 <__sflush_r>:
 8001114:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800111c:	0716      	lsls	r6, r2, #28
 800111e:	4605      	mov	r5, r0
 8001120:	460c      	mov	r4, r1
 8001122:	d454      	bmi.n	80011ce <__sflush_r+0xba>
 8001124:	684b      	ldr	r3, [r1, #4]
 8001126:	2b00      	cmp	r3, #0
 8001128:	dc02      	bgt.n	8001130 <__sflush_r+0x1c>
 800112a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800112c:	2b00      	cmp	r3, #0
 800112e:	dd48      	ble.n	80011c2 <__sflush_r+0xae>
 8001130:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001132:	2e00      	cmp	r6, #0
 8001134:	d045      	beq.n	80011c2 <__sflush_r+0xae>
 8001136:	2300      	movs	r3, #0
 8001138:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800113c:	682f      	ldr	r7, [r5, #0]
 800113e:	6a21      	ldr	r1, [r4, #32]
 8001140:	602b      	str	r3, [r5, #0]
 8001142:	d030      	beq.n	80011a6 <__sflush_r+0x92>
 8001144:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001146:	89a3      	ldrh	r3, [r4, #12]
 8001148:	0759      	lsls	r1, r3, #29
 800114a:	d505      	bpl.n	8001158 <__sflush_r+0x44>
 800114c:	6863      	ldr	r3, [r4, #4]
 800114e:	1ad2      	subs	r2, r2, r3
 8001150:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001152:	b10b      	cbz	r3, 8001158 <__sflush_r+0x44>
 8001154:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001156:	1ad2      	subs	r2, r2, r3
 8001158:	2300      	movs	r3, #0
 800115a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800115c:	6a21      	ldr	r1, [r4, #32]
 800115e:	4628      	mov	r0, r5
 8001160:	47b0      	blx	r6
 8001162:	1c43      	adds	r3, r0, #1
 8001164:	89a3      	ldrh	r3, [r4, #12]
 8001166:	d106      	bne.n	8001176 <__sflush_r+0x62>
 8001168:	6829      	ldr	r1, [r5, #0]
 800116a:	291d      	cmp	r1, #29
 800116c:	d82b      	bhi.n	80011c6 <__sflush_r+0xb2>
 800116e:	4a2a      	ldr	r2, [pc, #168]	@ (8001218 <__sflush_r+0x104>)
 8001170:	410a      	asrs	r2, r1
 8001172:	07d6      	lsls	r6, r2, #31
 8001174:	d427      	bmi.n	80011c6 <__sflush_r+0xb2>
 8001176:	2200      	movs	r2, #0
 8001178:	6062      	str	r2, [r4, #4]
 800117a:	04d9      	lsls	r1, r3, #19
 800117c:	6922      	ldr	r2, [r4, #16]
 800117e:	6022      	str	r2, [r4, #0]
 8001180:	d504      	bpl.n	800118c <__sflush_r+0x78>
 8001182:	1c42      	adds	r2, r0, #1
 8001184:	d101      	bne.n	800118a <__sflush_r+0x76>
 8001186:	682b      	ldr	r3, [r5, #0]
 8001188:	b903      	cbnz	r3, 800118c <__sflush_r+0x78>
 800118a:	6560      	str	r0, [r4, #84]	@ 0x54
 800118c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800118e:	602f      	str	r7, [r5, #0]
 8001190:	b1b9      	cbz	r1, 80011c2 <__sflush_r+0xae>
 8001192:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001196:	4299      	cmp	r1, r3
 8001198:	d002      	beq.n	80011a0 <__sflush_r+0x8c>
 800119a:	4628      	mov	r0, r5
 800119c:	f7ff fec2 	bl	8000f24 <_free_r>
 80011a0:	2300      	movs	r3, #0
 80011a2:	6363      	str	r3, [r4, #52]	@ 0x34
 80011a4:	e00d      	b.n	80011c2 <__sflush_r+0xae>
 80011a6:	2301      	movs	r3, #1
 80011a8:	4628      	mov	r0, r5
 80011aa:	47b0      	blx	r6
 80011ac:	4602      	mov	r2, r0
 80011ae:	1c50      	adds	r0, r2, #1
 80011b0:	d1c9      	bne.n	8001146 <__sflush_r+0x32>
 80011b2:	682b      	ldr	r3, [r5, #0]
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	d0c6      	beq.n	8001146 <__sflush_r+0x32>
 80011b8:	2b1d      	cmp	r3, #29
 80011ba:	d001      	beq.n	80011c0 <__sflush_r+0xac>
 80011bc:	2b16      	cmp	r3, #22
 80011be:	d11e      	bne.n	80011fe <__sflush_r+0xea>
 80011c0:	602f      	str	r7, [r5, #0]
 80011c2:	2000      	movs	r0, #0
 80011c4:	e022      	b.n	800120c <__sflush_r+0xf8>
 80011c6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011ca:	b21b      	sxth	r3, r3
 80011cc:	e01b      	b.n	8001206 <__sflush_r+0xf2>
 80011ce:	690f      	ldr	r7, [r1, #16]
 80011d0:	2f00      	cmp	r7, #0
 80011d2:	d0f6      	beq.n	80011c2 <__sflush_r+0xae>
 80011d4:	0793      	lsls	r3, r2, #30
 80011d6:	680e      	ldr	r6, [r1, #0]
 80011d8:	bf08      	it	eq
 80011da:	694b      	ldreq	r3, [r1, #20]
 80011dc:	600f      	str	r7, [r1, #0]
 80011de:	bf18      	it	ne
 80011e0:	2300      	movne	r3, #0
 80011e2:	eba6 0807 	sub.w	r8, r6, r7
 80011e6:	608b      	str	r3, [r1, #8]
 80011e8:	f1b8 0f00 	cmp.w	r8, #0
 80011ec:	dde9      	ble.n	80011c2 <__sflush_r+0xae>
 80011ee:	6a21      	ldr	r1, [r4, #32]
 80011f0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80011f2:	4643      	mov	r3, r8
 80011f4:	463a      	mov	r2, r7
 80011f6:	4628      	mov	r0, r5
 80011f8:	47b0      	blx	r6
 80011fa:	2800      	cmp	r0, #0
 80011fc:	dc08      	bgt.n	8001210 <__sflush_r+0xfc>
 80011fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001202:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001206:	81a3      	strh	r3, [r4, #12]
 8001208:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800120c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001210:	4407      	add	r7, r0
 8001212:	eba8 0800 	sub.w	r8, r8, r0
 8001216:	e7e7      	b.n	80011e8 <__sflush_r+0xd4>
 8001218:	dfbffffe 	.word	0xdfbffffe

0800121c <_fflush_r>:
 800121c:	b538      	push	{r3, r4, r5, lr}
 800121e:	690b      	ldr	r3, [r1, #16]
 8001220:	4605      	mov	r5, r0
 8001222:	460c      	mov	r4, r1
 8001224:	b913      	cbnz	r3, 800122c <_fflush_r+0x10>
 8001226:	2500      	movs	r5, #0
 8001228:	4628      	mov	r0, r5
 800122a:	bd38      	pop	{r3, r4, r5, pc}
 800122c:	b118      	cbz	r0, 8001236 <_fflush_r+0x1a>
 800122e:	6a03      	ldr	r3, [r0, #32]
 8001230:	b90b      	cbnz	r3, 8001236 <_fflush_r+0x1a>
 8001232:	f7ff fcd9 	bl	8000be8 <__sinit>
 8001236:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800123a:	2b00      	cmp	r3, #0
 800123c:	d0f3      	beq.n	8001226 <_fflush_r+0xa>
 800123e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001240:	07d0      	lsls	r0, r2, #31
 8001242:	d404      	bmi.n	800124e <_fflush_r+0x32>
 8001244:	0599      	lsls	r1, r3, #22
 8001246:	d402      	bmi.n	800124e <_fflush_r+0x32>
 8001248:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800124a:	f7ff fe68 	bl	8000f1e <__retarget_lock_acquire_recursive>
 800124e:	4628      	mov	r0, r5
 8001250:	4621      	mov	r1, r4
 8001252:	f7ff ff5f 	bl	8001114 <__sflush_r>
 8001256:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001258:	07da      	lsls	r2, r3, #31
 800125a:	4605      	mov	r5, r0
 800125c:	d4e4      	bmi.n	8001228 <_fflush_r+0xc>
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	059b      	lsls	r3, r3, #22
 8001262:	d4e1      	bmi.n	8001228 <_fflush_r+0xc>
 8001264:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001266:	f7ff fe5b 	bl	8000f20 <__retarget_lock_release_recursive>
 800126a:	e7dd      	b.n	8001228 <_fflush_r+0xc>

0800126c <__swhatbuf_r>:
 800126c:	b570      	push	{r4, r5, r6, lr}
 800126e:	460c      	mov	r4, r1
 8001270:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001274:	2900      	cmp	r1, #0
 8001276:	b096      	sub	sp, #88	@ 0x58
 8001278:	4615      	mov	r5, r2
 800127a:	461e      	mov	r6, r3
 800127c:	da0d      	bge.n	800129a <__swhatbuf_r+0x2e>
 800127e:	89a3      	ldrh	r3, [r4, #12]
 8001280:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001284:	f04f 0100 	mov.w	r1, #0
 8001288:	bf14      	ite	ne
 800128a:	2340      	movne	r3, #64	@ 0x40
 800128c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001290:	2000      	movs	r0, #0
 8001292:	6031      	str	r1, [r6, #0]
 8001294:	602b      	str	r3, [r5, #0]
 8001296:	b016      	add	sp, #88	@ 0x58
 8001298:	bd70      	pop	{r4, r5, r6, pc}
 800129a:	466a      	mov	r2, sp
 800129c:	f000 f87c 	bl	8001398 <_fstat_r>
 80012a0:	2800      	cmp	r0, #0
 80012a2:	dbec      	blt.n	800127e <__swhatbuf_r+0x12>
 80012a4:	9901      	ldr	r1, [sp, #4]
 80012a6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012aa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012ae:	4259      	negs	r1, r3
 80012b0:	4159      	adcs	r1, r3
 80012b2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012b6:	e7eb      	b.n	8001290 <__swhatbuf_r+0x24>

080012b8 <__smakebuf_r>:
 80012b8:	898b      	ldrh	r3, [r1, #12]
 80012ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012bc:	079d      	lsls	r5, r3, #30
 80012be:	4606      	mov	r6, r0
 80012c0:	460c      	mov	r4, r1
 80012c2:	d507      	bpl.n	80012d4 <__smakebuf_r+0x1c>
 80012c4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012c8:	6023      	str	r3, [r4, #0]
 80012ca:	6123      	str	r3, [r4, #16]
 80012cc:	2301      	movs	r3, #1
 80012ce:	6163      	str	r3, [r4, #20]
 80012d0:	b003      	add	sp, #12
 80012d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012d4:	ab01      	add	r3, sp, #4
 80012d6:	466a      	mov	r2, sp
 80012d8:	f7ff ffc8 	bl	800126c <__swhatbuf_r>
 80012dc:	9f00      	ldr	r7, [sp, #0]
 80012de:	4605      	mov	r5, r0
 80012e0:	4639      	mov	r1, r7
 80012e2:	4630      	mov	r0, r6
 80012e4:	f7ff fe8a 	bl	8000ffc <_malloc_r>
 80012e8:	b948      	cbnz	r0, 80012fe <__smakebuf_r+0x46>
 80012ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ee:	059a      	lsls	r2, r3, #22
 80012f0:	d4ee      	bmi.n	80012d0 <__smakebuf_r+0x18>
 80012f2:	f023 0303 	bic.w	r3, r3, #3
 80012f6:	f043 0302 	orr.w	r3, r3, #2
 80012fa:	81a3      	strh	r3, [r4, #12]
 80012fc:	e7e2      	b.n	80012c4 <__smakebuf_r+0xc>
 80012fe:	89a3      	ldrh	r3, [r4, #12]
 8001300:	6020      	str	r0, [r4, #0]
 8001302:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001306:	81a3      	strh	r3, [r4, #12]
 8001308:	9b01      	ldr	r3, [sp, #4]
 800130a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800130e:	b15b      	cbz	r3, 8001328 <__smakebuf_r+0x70>
 8001310:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001314:	4630      	mov	r0, r6
 8001316:	f000 f851 	bl	80013bc <_isatty_r>
 800131a:	b128      	cbz	r0, 8001328 <__smakebuf_r+0x70>
 800131c:	89a3      	ldrh	r3, [r4, #12]
 800131e:	f023 0303 	bic.w	r3, r3, #3
 8001322:	f043 0301 	orr.w	r3, r3, #1
 8001326:	81a3      	strh	r3, [r4, #12]
 8001328:	89a3      	ldrh	r3, [r4, #12]
 800132a:	431d      	orrs	r5, r3
 800132c:	81a5      	strh	r5, [r4, #12]
 800132e:	e7cf      	b.n	80012d0 <__smakebuf_r+0x18>

08001330 <_putc_r>:
 8001330:	b570      	push	{r4, r5, r6, lr}
 8001332:	460d      	mov	r5, r1
 8001334:	4614      	mov	r4, r2
 8001336:	4606      	mov	r6, r0
 8001338:	b118      	cbz	r0, 8001342 <_putc_r+0x12>
 800133a:	6a03      	ldr	r3, [r0, #32]
 800133c:	b90b      	cbnz	r3, 8001342 <_putc_r+0x12>
 800133e:	f7ff fc53 	bl	8000be8 <__sinit>
 8001342:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001344:	07d8      	lsls	r0, r3, #31
 8001346:	d405      	bmi.n	8001354 <_putc_r+0x24>
 8001348:	89a3      	ldrh	r3, [r4, #12]
 800134a:	0599      	lsls	r1, r3, #22
 800134c:	d402      	bmi.n	8001354 <_putc_r+0x24>
 800134e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001350:	f7ff fde5 	bl	8000f1e <__retarget_lock_acquire_recursive>
 8001354:	68a3      	ldr	r3, [r4, #8]
 8001356:	3b01      	subs	r3, #1
 8001358:	2b00      	cmp	r3, #0
 800135a:	60a3      	str	r3, [r4, #8]
 800135c:	da05      	bge.n	800136a <_putc_r+0x3a>
 800135e:	69a2      	ldr	r2, [r4, #24]
 8001360:	4293      	cmp	r3, r2
 8001362:	db12      	blt.n	800138a <_putc_r+0x5a>
 8001364:	b2eb      	uxtb	r3, r5
 8001366:	2b0a      	cmp	r3, #10
 8001368:	d00f      	beq.n	800138a <_putc_r+0x5a>
 800136a:	6823      	ldr	r3, [r4, #0]
 800136c:	1c5a      	adds	r2, r3, #1
 800136e:	6022      	str	r2, [r4, #0]
 8001370:	701d      	strb	r5, [r3, #0]
 8001372:	b2ed      	uxtb	r5, r5
 8001374:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001376:	07da      	lsls	r2, r3, #31
 8001378:	d405      	bmi.n	8001386 <_putc_r+0x56>
 800137a:	89a3      	ldrh	r3, [r4, #12]
 800137c:	059b      	lsls	r3, r3, #22
 800137e:	d402      	bmi.n	8001386 <_putc_r+0x56>
 8001380:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001382:	f7ff fdcd 	bl	8000f20 <__retarget_lock_release_recursive>
 8001386:	4628      	mov	r0, r5
 8001388:	bd70      	pop	{r4, r5, r6, pc}
 800138a:	4629      	mov	r1, r5
 800138c:	4622      	mov	r2, r4
 800138e:	4630      	mov	r0, r6
 8001390:	f7ff fcbd 	bl	8000d0e <__swbuf_r>
 8001394:	4605      	mov	r5, r0
 8001396:	e7ed      	b.n	8001374 <_putc_r+0x44>

08001398 <_fstat_r>:
 8001398:	b538      	push	{r3, r4, r5, lr}
 800139a:	4d07      	ldr	r5, [pc, #28]	@ (80013b8 <_fstat_r+0x20>)
 800139c:	2300      	movs	r3, #0
 800139e:	4604      	mov	r4, r0
 80013a0:	4608      	mov	r0, r1
 80013a2:	4611      	mov	r1, r2
 80013a4:	602b      	str	r3, [r5, #0]
 80013a6:	f000 f831 	bl	800140c <_fstat>
 80013aa:	1c43      	adds	r3, r0, #1
 80013ac:	d102      	bne.n	80013b4 <_fstat_r+0x1c>
 80013ae:	682b      	ldr	r3, [r5, #0]
 80013b0:	b103      	cbz	r3, 80013b4 <_fstat_r+0x1c>
 80013b2:	6023      	str	r3, [r4, #0]
 80013b4:	bd38      	pop	{r3, r4, r5, pc}
 80013b6:	bf00      	nop
 80013b8:	200001b8 	.word	0x200001b8

080013bc <_isatty_r>:
 80013bc:	b538      	push	{r3, r4, r5, lr}
 80013be:	4d06      	ldr	r5, [pc, #24]	@ (80013d8 <_isatty_r+0x1c>)
 80013c0:	2300      	movs	r3, #0
 80013c2:	4604      	mov	r4, r0
 80013c4:	4608      	mov	r0, r1
 80013c6:	602b      	str	r3, [r5, #0]
 80013c8:	f000 f828 	bl	800141c <_isatty>
 80013cc:	1c43      	adds	r3, r0, #1
 80013ce:	d102      	bne.n	80013d6 <_isatty_r+0x1a>
 80013d0:	682b      	ldr	r3, [r5, #0]
 80013d2:	b103      	cbz	r3, 80013d6 <_isatty_r+0x1a>
 80013d4:	6023      	str	r3, [r4, #0]
 80013d6:	bd38      	pop	{r3, r4, r5, pc}
 80013d8:	200001b8 	.word	0x200001b8

080013dc <_sbrk_r>:
 80013dc:	b538      	push	{r3, r4, r5, lr}
 80013de:	4d06      	ldr	r5, [pc, #24]	@ (80013f8 <_sbrk_r+0x1c>)
 80013e0:	2300      	movs	r3, #0
 80013e2:	4604      	mov	r4, r0
 80013e4:	4608      	mov	r0, r1
 80013e6:	602b      	str	r3, [r5, #0]
 80013e8:	f000 f830 	bl	800144c <_sbrk>
 80013ec:	1c43      	adds	r3, r0, #1
 80013ee:	d102      	bne.n	80013f6 <_sbrk_r+0x1a>
 80013f0:	682b      	ldr	r3, [r5, #0]
 80013f2:	b103      	cbz	r3, 80013f6 <_sbrk_r+0x1a>
 80013f4:	6023      	str	r3, [r4, #0]
 80013f6:	bd38      	pop	{r3, r4, r5, pc}
 80013f8:	200001b8 	.word	0x200001b8

080013fc <_close>:
 80013fc:	4b02      	ldr	r3, [pc, #8]	@ (8001408 <_close+0xc>)
 80013fe:	2258      	movs	r2, #88	@ 0x58
 8001400:	601a      	str	r2, [r3, #0]
 8001402:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001406:	4770      	bx	lr
 8001408:	200001b8 	.word	0x200001b8

0800140c <_fstat>:
 800140c:	4b02      	ldr	r3, [pc, #8]	@ (8001418 <_fstat+0xc>)
 800140e:	2258      	movs	r2, #88	@ 0x58
 8001410:	601a      	str	r2, [r3, #0]
 8001412:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001416:	4770      	bx	lr
 8001418:	200001b8 	.word	0x200001b8

0800141c <_isatty>:
 800141c:	4b02      	ldr	r3, [pc, #8]	@ (8001428 <_isatty+0xc>)
 800141e:	2258      	movs	r2, #88	@ 0x58
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	2000      	movs	r0, #0
 8001424:	4770      	bx	lr
 8001426:	bf00      	nop
 8001428:	200001b8 	.word	0x200001b8

0800142c <_lseek>:
 800142c:	4b02      	ldr	r3, [pc, #8]	@ (8001438 <_lseek+0xc>)
 800142e:	2258      	movs	r2, #88	@ 0x58
 8001430:	601a      	str	r2, [r3, #0]
 8001432:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001436:	4770      	bx	lr
 8001438:	200001b8 	.word	0x200001b8

0800143c <_read>:
 800143c:	4b02      	ldr	r3, [pc, #8]	@ (8001448 <_read+0xc>)
 800143e:	2258      	movs	r2, #88	@ 0x58
 8001440:	601a      	str	r2, [r3, #0]
 8001442:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001446:	4770      	bx	lr
 8001448:	200001b8 	.word	0x200001b8

0800144c <_sbrk>:
 800144c:	4a04      	ldr	r2, [pc, #16]	@ (8001460 <_sbrk+0x14>)
 800144e:	6811      	ldr	r1, [r2, #0]
 8001450:	4603      	mov	r3, r0
 8001452:	b909      	cbnz	r1, 8001458 <_sbrk+0xc>
 8001454:	4903      	ldr	r1, [pc, #12]	@ (8001464 <_sbrk+0x18>)
 8001456:	6011      	str	r1, [r2, #0]
 8001458:	6810      	ldr	r0, [r2, #0]
 800145a:	4403      	add	r3, r0
 800145c:	6013      	str	r3, [r2, #0]
 800145e:	4770      	bx	lr
 8001460:	200001c8 	.word	0x200001c8
 8001464:	200001d0 	.word	0x200001d0

08001468 <_init>:
 8001468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800146a:	bf00      	nop
 800146c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800146e:	bc08      	pop	{r3}
 8001470:	469e      	mov	lr, r3
 8001472:	4770      	bx	lr

08001474 <_fini>:
 8001474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001476:	bf00      	nop
 8001478:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800147a:	bc08      	pop	{r3}
 800147c:	469e      	mov	lr, r3
 800147e:	4770      	bx	lr

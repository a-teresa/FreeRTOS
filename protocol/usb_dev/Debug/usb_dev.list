
usb_dev.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012b8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000084  08001488  08001488  00002488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800150c  0800150c  00003060  2**0
                  CONTENTS
  4 .ARM          00000008  0800150c  0800150c  0000250c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001514  08001514  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001514  08001514  00002514  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001518  08001518  00002518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  0800151c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  0800157c  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  0800157c  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000fe7  00000000  00000000  00003090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004db  00000000  00000000  00004077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00004558  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000084  00000000  00000000  00004620  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000cdc3  00000000  00000000  000046a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ff0  00000000  00000000  00011467  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00045cca  00000000  00000000  00012457  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00058121  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000adc  00000000  00000000  00058164  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004b  00000000  00000000  00058c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000060 	.word	0x20000060
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001470 	.word	0x08001470

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000064 	.word	0x20000064
 800020c:	08001470 	.word	0x08001470

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002bc:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 80002c0:	f003 0301 	and.w	r3, r3, #1
 80002c4:	2b00      	cmp	r3, #0
 80002c6:	d013      	beq.n	80002f0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002c8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002cc:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 80002d0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002d4:	2b00      	cmp	r3, #0
 80002d6:	d00b      	beq.n	80002f0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002d8:	e000      	b.n	80002dc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002da:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002dc:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	2b00      	cmp	r3, #0
 80002e4:	d0f9      	beq.n	80002da <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002e6:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002ea:	687a      	ldr	r2, [r7, #4]
 80002ec:	b2d2      	uxtb	r2, r2
 80002ee:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	370c      	adds	r7, #12
 80002f6:	46bd      	mov	sp, r7
 80002f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fc:	4770      	bx	lr

080002fe <_write>:
#include "stm32f4xx.h"

//redirects printf() output to theserial wire out (SWO)
//this function overrides a weak function symbol and is not to be used directly

int _write(int file, char *ptr, int len){
 80002fe:	b580      	push	{r7, lr}
 8000300:	b086      	sub	sp, #24
 8000302:	af00      	add	r7, sp, #0
 8000304:	60f8      	str	r0, [r7, #12]
 8000306:	60b9      	str	r1, [r7, #8]
 8000308:	607a      	str	r2, [r7, #4]
	int i=0;
 800030a:	2300      	movs	r3, #0
 800030c:	617b      	str	r3, [r7, #20]
	for(i=0; i<len;i++)
 800030e:	2300      	movs	r3, #0
 8000310:	617b      	str	r3, [r7, #20]
 8000312:	e009      	b.n	8000328 <_write+0x2a>
		ITM_SendChar((*ptr++));
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	1c5a      	adds	r2, r3, #1
 8000318:	60ba      	str	r2, [r7, #8]
 800031a:	781b      	ldrb	r3, [r3, #0]
 800031c:	4618      	mov	r0, r3
 800031e:	f7ff ffc7 	bl	80002b0 <ITM_SendChar>
	for(i=0; i<len;i++)
 8000322:	697b      	ldr	r3, [r7, #20]
 8000324:	3301      	adds	r3, #1
 8000326:	617b      	str	r3, [r7, #20]
 8000328:	697a      	ldr	r2, [r7, #20]
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	429a      	cmp	r2, r3
 800032e:	dbf1      	blt.n	8000314 <_write+0x16>
	return len;
 8000330:	687b      	ldr	r3, [r7, #4]
}
 8000332:	4618      	mov	r0, r3
 8000334:	3718      	adds	r7, #24
 8000336:	46bd      	mov	sp, r7
 8000338:	bd80      	pop	{r7, pc}
	...

0800033c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800033c:	b480      	push	{r7}
 800033e:	b083      	sub	sp, #12
 8000340:	af00      	add	r7, sp, #0
 8000342:	4603      	mov	r3, r0
 8000344:	71fb      	strb	r3, [r7, #7]
	switch(log_level){
 8000346:	79fb      	ldrb	r3, [r7, #7]
 8000348:	2b02      	cmp	r3, #2
 800034a:	d00a      	beq.n	8000362 <_get_log_level_string+0x26>
 800034c:	2b02      	cmp	r3, #2
 800034e:	dc0a      	bgt.n	8000366 <_get_log_level_string+0x2a>
 8000350:	2b00      	cmp	r3, #0
 8000352:	d002      	beq.n	800035a <_get_log_level_string+0x1e>
 8000354:	2b01      	cmp	r3, #1
 8000356:	d002      	beq.n	800035e <_get_log_level_string+0x22>
 8000358:	e005      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_ERROR:
			return "ERROR";
 800035a:	4b06      	ldr	r3, [pc, #24]	@ (8000374 <_get_log_level_string+0x38>)
 800035c:	e003      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_INFORMATION:
			return "INFO";
 800035e:	4b06      	ldr	r3, [pc, #24]	@ (8000378 <_get_log_level_string+0x3c>)
 8000360:	e001      	b.n	8000366 <_get_log_level_string+0x2a>
		case LOG_LEVEL_DEBUG:
			return "DEBUG";
 8000362:	4b06      	ldr	r3, [pc, #24]	@ (800037c <_get_log_level_string+0x40>)
 8000364:	e7ff      	b.n	8000366 <_get_log_level_string+0x2a>
	}
}
 8000366:	4618      	mov	r0, r3
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	08001488 	.word	0x08001488
 8000378:	08001490 	.word	0x08001490
 800037c:	08001498 	.word	0x08001498

08000380 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args){
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	4603      	mov	r3, r0
 8000388:	60b9      	str	r1, [r7, #8]
 800038a:	607a      	str	r2, [r7, #4]
 800038c:	73fb      	strb	r3, [r7, #15]
	{
		if(log_level > system_log_level)
 800038e:	4b0f      	ldr	r3, [pc, #60]	@ (80003cc <_log+0x4c>)
 8000390:	781b      	ldrb	r3, [r3, #0]
 8000392:	7bfa      	ldrb	r2, [r7, #15]
 8000394:	429a      	cmp	r2, r3
 8000396:	d814      	bhi.n	80003c2 <_log+0x42>
			return;
		printf("[%s]", _get_log_level_string(log_level));
 8000398:	7bfb      	ldrb	r3, [r7, #15]
 800039a:	4618      	mov	r0, r3
 800039c:	f7ff ffce 	bl	800033c <_get_log_level_string>
 80003a0:	4603      	mov	r3, r0
 80003a2:	4619      	mov	r1, r3
 80003a4:	480a      	ldr	r0, [pc, #40]	@ (80003d0 <_log+0x50>)
 80003a6:	f000 fc59 	bl	8000c5c <iprintf>
		vfprintf(stdout, format, args);
 80003aa:	4b0a      	ldr	r3, [pc, #40]	@ (80003d4 <_log+0x54>)
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	689b      	ldr	r3, [r3, #8]
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	68b9      	ldr	r1, [r7, #8]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f000 f9f7 	bl	80007a8 <vfiprintf>
		printf("\n");
 80003ba:	200a      	movs	r0, #10
 80003bc:	f000 fc60 	bl	8000c80 <putchar>
 80003c0:	e000      	b.n	80003c4 <_log+0x44>
			return;
 80003c2:	bf00      	nop
	}
}
 80003c4:	3710      	adds	r7, #16
 80003c6:	46bd      	mov	sp, r7
 80003c8:	bd80      	pop	{r7, pc}
 80003ca:	bf00      	nop
 80003cc:	20000000 	.word	0x20000000
 80003d0:	080014a0 	.word	0x080014a0
 80003d4:	20000010 	.word	0x20000010

080003d8 <log_info>:
	}


	void log_info(char const * const format, ...)

	{
 80003d8:	b40f      	push	{r0, r1, r2, r3}
 80003da:	b580      	push	{r7, lr}
 80003dc:	b082      	sub	sp, #8
 80003de:	af00      	add	r7, sp, #0

	    va_list args;

		va_start(args, format);
 80003e0:	f107 0314 	add.w	r3, r7, #20
 80003e4:	607b      	str	r3, [r7, #4]

	    _log(LOG_LEVEL_INFORMATION, format, args);
 80003e6:	687a      	ldr	r2, [r7, #4]
 80003e8:	6939      	ldr	r1, [r7, #16]
 80003ea:	2001      	movs	r0, #1
 80003ec:	f7ff ffc8 	bl	8000380 <_log>

	    va_end(args);

	}
 80003f0:	bf00      	nop
 80003f2:	3708      	adds	r7, #8
 80003f4:	46bd      	mov	sp, r7
 80003f6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003fa:	b004      	add	sp, #16
 80003fc:	4770      	bx	lr
	...

08000400 <main>:
#include "Helpers/logger.h"

int main(void){
 8000400:	b580      	push	{r7, lr}
 8000402:	af00      	add	r7, sp, #0
	configure_clock();
 8000404:	f000 f808 	bl	8000418 <configure_clock>
	log_info("Program_start");
 8000408:	4802      	ldr	r0, [pc, #8]	@ (8000414 <main+0x14>)
 800040a:	f7ff ffe5 	bl	80003d8 <log_info>

	for(;;);
 800040e:	bf00      	nop
 8000410:	e7fd      	b.n	800040e <main+0xe>
 8000412:	bf00      	nop
 8000414:	080014c8 	.word	0x080014c8

08000418 <configure_clock>:
//APB prescaller1 = 2, APB prescaller2 ? 1
//MC01 prescaller = 2


void configure_clock()
{
 8000418:	b480      	push	{r7}
 800041a:	af00      	add	r7, sp, #0
	MODIFY_REG(FLASH->ACR,
 800041c:	4b25      	ldr	r3, [pc, #148]	@ (80004b4 <configure_clock+0x9c>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	f023 0307 	bic.w	r3, r3, #7
 8000424:	4a23      	ldr	r2, [pc, #140]	@ (80004b4 <configure_clock+0x9c>)
 8000426:	f043 0302 	orr.w	r3, r3, #2
 800042a:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY,
			_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS)//FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
			);
	//Enable HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 800042c:	4b22      	ldr	r3, [pc, #136]	@ (80004b8 <configure_clock+0xa0>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	4a21      	ldr	r2, [pc, #132]	@ (80004b8 <configure_clock+0xa0>)
 8000432:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000436:	6013      	str	r3, [r2, #0]

	//wait until HSE is stable
	while(!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 8000438:	bf00      	nop
 800043a:	4b1f      	ldr	r3, [pc, #124]	@ (80004b8 <configure_clock+0xa0>)
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000442:	2b00      	cmp	r3, #0
 8000444:	d0f9      	beq.n	800043a <configure_clock+0x22>


	//configure PLL: source hse; SYSCLK=72 MHZ -> config only before enable PLL

	MODIFY_REG(RCC->PLLCFGR,
 8000446:	4b1c      	ldr	r3, [pc, #112]	@ (80004b8 <configure_clock+0xa0>)
 8000448:	685b      	ldr	r3, [r3, #4]
 800044a:	4a1c      	ldr	r2, [pc, #112]	@ (80004bc <configure_clock+0xa4>)
 800044c:	401a      	ands	r2, r3
 800044e:	491a      	ldr	r1, [pc, #104]	@ (80004b8 <configure_clock+0xa0>)
 8000450:	4b1b      	ldr	r3, [pc, #108]	@ (80004c0 <configure_clock+0xa8>)
 8000452:	4313      	orrs	r3, r2
 8000454:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM|RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ |RCC_PLLCFGR_PLLP | RCC_PLLCFGR_PLLSRC,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4)|_VAL2FLD(RCC_PLLCFGR_PLLN, 72)|_VAL2FLD(RCC_PLLCFGR_PLLQ,3)| _VAL2FLD(RCC_PLLCFGR_PLLSRC, 1));

	//enable PLL
		SET_BIT(RCC->CR, RCC_CR_PLLON);
 8000456:	4b18      	ldr	r3, [pc, #96]	@ (80004b8 <configure_clock+0xa0>)
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	4a17      	ldr	r2, [pc, #92]	@ (80004b8 <configure_clock+0xa0>)
 800045c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000460:	6013      	str	r3, [r2, #0]

	//wait until PLL is stable
	while(!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 8000462:	bf00      	nop
 8000464:	4b14      	ldr	r3, [pc, #80]	@ (80004b8 <configure_clock+0xa0>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800046c:	2b00      	cmp	r3, #0
 800046e:	d0f9      	beq.n	8000464 <configure_clock+0x4c>

	//Switch system clock to PLL
	MODIFY_REG(RCC->CFGR,
 8000470:	4b11      	ldr	r3, [pc, #68]	@ (80004b8 <configure_clock+0xa0>)
 8000472:	689b      	ldr	r3, [r3, #8]
 8000474:	f023 0303 	bic.w	r3, r3, #3
 8000478:	4a0f      	ldr	r2, [pc, #60]	@ (80004b8 <configure_clock+0xa0>)
 800047a:	f043 0302 	orr.w	r3, r3, #2
 800047e:	6093      	str	r3, [r2, #8]
			RCC_CFGR_SW,
			_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL));

	//Configure PPRE1
	MODIFY_REG(RCC->CFGR,
 8000480:	4b0d      	ldr	r3, [pc, #52]	@ (80004b8 <configure_clock+0xa0>)
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8000488:	4a0b      	ldr	r2, [pc, #44]	@ (80004b8 <configure_clock+0xa0>)
 800048a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800048e:	6093      	str	r3, [r2, #8]
				RCC_CFGR_PPRE1,
				_VAL2FLD(RCC_CFGR_PPRE1, 4));

	//wait until PLL is used
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS)  != RCC_CFGR_SWS_PLL);
 8000490:	bf00      	nop
 8000492:	4b09      	ldr	r3, [pc, #36]	@ (80004b8 <configure_clock+0xa0>)
 8000494:	689b      	ldr	r3, [r3, #8]
 8000496:	f003 030c 	and.w	r3, r3, #12
 800049a:	2b08      	cmp	r3, #8
 800049c:	d1f9      	bne.n	8000492 <configure_clock+0x7a>

	//Disable HSI
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800049e:	4b06      	ldr	r3, [pc, #24]	@ (80004b8 <configure_clock+0xa0>)
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	4a05      	ldr	r2, [pc, #20]	@ (80004b8 <configure_clock+0xa0>)
 80004a4:	f023 0301 	bic.w	r3, r3, #1
 80004a8:	6013      	str	r3, [r2, #0]
}
 80004aa:	bf00      	nop
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr
 80004b4:	40023c00 	.word	0x40023c00
 80004b8:	40023800 	.word	0x40023800
 80004bc:	f0bc8000 	.word	0xf0bc8000
 80004c0:	03401204 	.word	0x03401204

080004c4 <SystemInit>:
void SystemInit(void)
{
 80004c4:	b480      	push	{r7}
 80004c6:	af00      	add	r7, sp, #0

}
 80004c8:	bf00      	nop
 80004ca:	46bd      	mov	sp, r7
 80004cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d0:	4770      	bx	lr
	...

080004d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004d4:	480d      	ldr	r0, [pc, #52]	@ (800050c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d8:	f7ff fff4 	bl	80004c4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004dc:	480c      	ldr	r0, [pc, #48]	@ (8000510 <LoopForever+0x6>)
  ldr r1, =_edata
 80004de:	490d      	ldr	r1, [pc, #52]	@ (8000514 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000518 <LoopForever+0xe>)
  movs r3, #0
 80004e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004e4:	e002      	b.n	80004ec <LoopCopyDataInit>

080004e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ea:	3304      	adds	r3, #4

080004ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004f0:	d3f9      	bcc.n	80004e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004f2:	4a0a      	ldr	r2, [pc, #40]	@ (800051c <LoopForever+0x12>)
  ldr r4, =_ebss
 80004f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000520 <LoopForever+0x16>)
  movs r3, #0
 80004f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f8:	e001      	b.n	80004fe <LoopFillZerobss>

080004fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004fc:	3204      	adds	r2, #4

080004fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000500:	d3fb      	bcc.n	80004fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000502:	f000 fceb 	bl	8000edc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000506:	f7ff ff7b 	bl	8000400 <main>

0800050a <LoopForever>:

LoopForever:
  b LoopForever
 800050a:	e7fe      	b.n	800050a <LoopForever>
  ldr   r0, =_estack
 800050c:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000510:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000514:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000518:	0800151c 	.word	0x0800151c
  ldr r2, =_sbss
 800051c:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000520:	200001cc 	.word	0x200001cc

08000524 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000524:	e7fe      	b.n	8000524 <ADC_IRQHandler>

08000526 <__sfputc_r>:
 8000526:	6893      	ldr	r3, [r2, #8]
 8000528:	3b01      	subs	r3, #1
 800052a:	2b00      	cmp	r3, #0
 800052c:	b410      	push	{r4}
 800052e:	6093      	str	r3, [r2, #8]
 8000530:	da08      	bge.n	8000544 <__sfputc_r+0x1e>
 8000532:	6994      	ldr	r4, [r2, #24]
 8000534:	42a3      	cmp	r3, r4
 8000536:	db01      	blt.n	800053c <__sfputc_r+0x16>
 8000538:	290a      	cmp	r1, #10
 800053a:	d103      	bne.n	8000544 <__sfputc_r+0x1e>
 800053c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000540:	f000 bbe9 	b.w	8000d16 <__swbuf_r>
 8000544:	6813      	ldr	r3, [r2, #0]
 8000546:	1c58      	adds	r0, r3, #1
 8000548:	6010      	str	r0, [r2, #0]
 800054a:	7019      	strb	r1, [r3, #0]
 800054c:	4608      	mov	r0, r1
 800054e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000552:	4770      	bx	lr

08000554 <__sfputs_r>:
 8000554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000556:	4606      	mov	r6, r0
 8000558:	460f      	mov	r7, r1
 800055a:	4614      	mov	r4, r2
 800055c:	18d5      	adds	r5, r2, r3
 800055e:	42ac      	cmp	r4, r5
 8000560:	d101      	bne.n	8000566 <__sfputs_r+0x12>
 8000562:	2000      	movs	r0, #0
 8000564:	e007      	b.n	8000576 <__sfputs_r+0x22>
 8000566:	f814 1b01 	ldrb.w	r1, [r4], #1
 800056a:	463a      	mov	r2, r7
 800056c:	4630      	mov	r0, r6
 800056e:	f7ff ffda 	bl	8000526 <__sfputc_r>
 8000572:	1c43      	adds	r3, r0, #1
 8000574:	d1f3      	bne.n	800055e <__sfputs_r+0xa>
 8000576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000578 <_vfiprintf_r>:
 8000578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800057c:	460d      	mov	r5, r1
 800057e:	b09d      	sub	sp, #116	@ 0x74
 8000580:	4614      	mov	r4, r2
 8000582:	4698      	mov	r8, r3
 8000584:	4606      	mov	r6, r0
 8000586:	b118      	cbz	r0, 8000590 <_vfiprintf_r+0x18>
 8000588:	6a03      	ldr	r3, [r0, #32]
 800058a:	b90b      	cbnz	r3, 8000590 <_vfiprintf_r+0x18>
 800058c:	f000 fb30 	bl	8000bf0 <__sinit>
 8000590:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000592:	07d9      	lsls	r1, r3, #31
 8000594:	d405      	bmi.n	80005a2 <_vfiprintf_r+0x2a>
 8000596:	89ab      	ldrh	r3, [r5, #12]
 8000598:	059a      	lsls	r2, r3, #22
 800059a:	d402      	bmi.n	80005a2 <_vfiprintf_r+0x2a>
 800059c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800059e:	f000 fcc2 	bl	8000f26 <__retarget_lock_acquire_recursive>
 80005a2:	89ab      	ldrh	r3, [r5, #12]
 80005a4:	071b      	lsls	r3, r3, #28
 80005a6:	d501      	bpl.n	80005ac <_vfiprintf_r+0x34>
 80005a8:	692b      	ldr	r3, [r5, #16]
 80005aa:	b99b      	cbnz	r3, 80005d4 <_vfiprintf_r+0x5c>
 80005ac:	4629      	mov	r1, r5
 80005ae:	4630      	mov	r0, r6
 80005b0:	f000 fbf0 	bl	8000d94 <__swsetup_r>
 80005b4:	b170      	cbz	r0, 80005d4 <_vfiprintf_r+0x5c>
 80005b6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80005b8:	07dc      	lsls	r4, r3, #31
 80005ba:	d504      	bpl.n	80005c6 <_vfiprintf_r+0x4e>
 80005bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80005c0:	b01d      	add	sp, #116	@ 0x74
 80005c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80005c6:	89ab      	ldrh	r3, [r5, #12]
 80005c8:	0598      	lsls	r0, r3, #22
 80005ca:	d4f7      	bmi.n	80005bc <_vfiprintf_r+0x44>
 80005cc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80005ce:	f000 fcab 	bl	8000f28 <__retarget_lock_release_recursive>
 80005d2:	e7f3      	b.n	80005bc <_vfiprintf_r+0x44>
 80005d4:	2300      	movs	r3, #0
 80005d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80005d8:	2320      	movs	r3, #32
 80005da:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80005de:	f8cd 800c 	str.w	r8, [sp, #12]
 80005e2:	2330      	movs	r3, #48	@ 0x30
 80005e4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000794 <_vfiprintf_r+0x21c>
 80005e8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80005ec:	f04f 0901 	mov.w	r9, #1
 80005f0:	4623      	mov	r3, r4
 80005f2:	469a      	mov	sl, r3
 80005f4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005f8:	b10a      	cbz	r2, 80005fe <_vfiprintf_r+0x86>
 80005fa:	2a25      	cmp	r2, #37	@ 0x25
 80005fc:	d1f9      	bne.n	80005f2 <_vfiprintf_r+0x7a>
 80005fe:	ebba 0b04 	subs.w	fp, sl, r4
 8000602:	d00b      	beq.n	800061c <_vfiprintf_r+0xa4>
 8000604:	465b      	mov	r3, fp
 8000606:	4622      	mov	r2, r4
 8000608:	4629      	mov	r1, r5
 800060a:	4630      	mov	r0, r6
 800060c:	f7ff ffa2 	bl	8000554 <__sfputs_r>
 8000610:	3001      	adds	r0, #1
 8000612:	f000 80a7 	beq.w	8000764 <_vfiprintf_r+0x1ec>
 8000616:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000618:	445a      	add	r2, fp
 800061a:	9209      	str	r2, [sp, #36]	@ 0x24
 800061c:	f89a 3000 	ldrb.w	r3, [sl]
 8000620:	2b00      	cmp	r3, #0
 8000622:	f000 809f 	beq.w	8000764 <_vfiprintf_r+0x1ec>
 8000626:	2300      	movs	r3, #0
 8000628:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800062c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000630:	f10a 0a01 	add.w	sl, sl, #1
 8000634:	9304      	str	r3, [sp, #16]
 8000636:	9307      	str	r3, [sp, #28]
 8000638:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800063c:	931a      	str	r3, [sp, #104]	@ 0x68
 800063e:	4654      	mov	r4, sl
 8000640:	2205      	movs	r2, #5
 8000642:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000646:	4853      	ldr	r0, [pc, #332]	@ (8000794 <_vfiprintf_r+0x21c>)
 8000648:	f7ff fde2 	bl	8000210 <memchr>
 800064c:	9a04      	ldr	r2, [sp, #16]
 800064e:	b9d8      	cbnz	r0, 8000688 <_vfiprintf_r+0x110>
 8000650:	06d1      	lsls	r1, r2, #27
 8000652:	bf44      	itt	mi
 8000654:	2320      	movmi	r3, #32
 8000656:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800065a:	0713      	lsls	r3, r2, #28
 800065c:	bf44      	itt	mi
 800065e:	232b      	movmi	r3, #43	@ 0x2b
 8000660:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000664:	f89a 3000 	ldrb.w	r3, [sl]
 8000668:	2b2a      	cmp	r3, #42	@ 0x2a
 800066a:	d015      	beq.n	8000698 <_vfiprintf_r+0x120>
 800066c:	9a07      	ldr	r2, [sp, #28]
 800066e:	4654      	mov	r4, sl
 8000670:	2000      	movs	r0, #0
 8000672:	f04f 0c0a 	mov.w	ip, #10
 8000676:	4621      	mov	r1, r4
 8000678:	f811 3b01 	ldrb.w	r3, [r1], #1
 800067c:	3b30      	subs	r3, #48	@ 0x30
 800067e:	2b09      	cmp	r3, #9
 8000680:	d94b      	bls.n	800071a <_vfiprintf_r+0x1a2>
 8000682:	b1b0      	cbz	r0, 80006b2 <_vfiprintf_r+0x13a>
 8000684:	9207      	str	r2, [sp, #28]
 8000686:	e014      	b.n	80006b2 <_vfiprintf_r+0x13a>
 8000688:	eba0 0308 	sub.w	r3, r0, r8
 800068c:	fa09 f303 	lsl.w	r3, r9, r3
 8000690:	4313      	orrs	r3, r2
 8000692:	9304      	str	r3, [sp, #16]
 8000694:	46a2      	mov	sl, r4
 8000696:	e7d2      	b.n	800063e <_vfiprintf_r+0xc6>
 8000698:	9b03      	ldr	r3, [sp, #12]
 800069a:	1d19      	adds	r1, r3, #4
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	9103      	str	r1, [sp, #12]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	bfbb      	ittet	lt
 80006a4:	425b      	neglt	r3, r3
 80006a6:	f042 0202 	orrlt.w	r2, r2, #2
 80006aa:	9307      	strge	r3, [sp, #28]
 80006ac:	9307      	strlt	r3, [sp, #28]
 80006ae:	bfb8      	it	lt
 80006b0:	9204      	strlt	r2, [sp, #16]
 80006b2:	7823      	ldrb	r3, [r4, #0]
 80006b4:	2b2e      	cmp	r3, #46	@ 0x2e
 80006b6:	d10a      	bne.n	80006ce <_vfiprintf_r+0x156>
 80006b8:	7863      	ldrb	r3, [r4, #1]
 80006ba:	2b2a      	cmp	r3, #42	@ 0x2a
 80006bc:	d132      	bne.n	8000724 <_vfiprintf_r+0x1ac>
 80006be:	9b03      	ldr	r3, [sp, #12]
 80006c0:	1d1a      	adds	r2, r3, #4
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	9203      	str	r2, [sp, #12]
 80006c6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80006ca:	3402      	adds	r4, #2
 80006cc:	9305      	str	r3, [sp, #20]
 80006ce:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80007a4 <_vfiprintf_r+0x22c>
 80006d2:	7821      	ldrb	r1, [r4, #0]
 80006d4:	2203      	movs	r2, #3
 80006d6:	4650      	mov	r0, sl
 80006d8:	f7ff fd9a 	bl	8000210 <memchr>
 80006dc:	b138      	cbz	r0, 80006ee <_vfiprintf_r+0x176>
 80006de:	9b04      	ldr	r3, [sp, #16]
 80006e0:	eba0 000a 	sub.w	r0, r0, sl
 80006e4:	2240      	movs	r2, #64	@ 0x40
 80006e6:	4082      	lsls	r2, r0
 80006e8:	4313      	orrs	r3, r2
 80006ea:	3401      	adds	r4, #1
 80006ec:	9304      	str	r3, [sp, #16]
 80006ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006f2:	4829      	ldr	r0, [pc, #164]	@ (8000798 <_vfiprintf_r+0x220>)
 80006f4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80006f8:	2206      	movs	r2, #6
 80006fa:	f7ff fd89 	bl	8000210 <memchr>
 80006fe:	2800      	cmp	r0, #0
 8000700:	d03f      	beq.n	8000782 <_vfiprintf_r+0x20a>
 8000702:	4b26      	ldr	r3, [pc, #152]	@ (800079c <_vfiprintf_r+0x224>)
 8000704:	bb1b      	cbnz	r3, 800074e <_vfiprintf_r+0x1d6>
 8000706:	9b03      	ldr	r3, [sp, #12]
 8000708:	3307      	adds	r3, #7
 800070a:	f023 0307 	bic.w	r3, r3, #7
 800070e:	3308      	adds	r3, #8
 8000710:	9303      	str	r3, [sp, #12]
 8000712:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000714:	443b      	add	r3, r7
 8000716:	9309      	str	r3, [sp, #36]	@ 0x24
 8000718:	e76a      	b.n	80005f0 <_vfiprintf_r+0x78>
 800071a:	fb0c 3202 	mla	r2, ip, r2, r3
 800071e:	460c      	mov	r4, r1
 8000720:	2001      	movs	r0, #1
 8000722:	e7a8      	b.n	8000676 <_vfiprintf_r+0xfe>
 8000724:	2300      	movs	r3, #0
 8000726:	3401      	adds	r4, #1
 8000728:	9305      	str	r3, [sp, #20]
 800072a:	4619      	mov	r1, r3
 800072c:	f04f 0c0a 	mov.w	ip, #10
 8000730:	4620      	mov	r0, r4
 8000732:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000736:	3a30      	subs	r2, #48	@ 0x30
 8000738:	2a09      	cmp	r2, #9
 800073a:	d903      	bls.n	8000744 <_vfiprintf_r+0x1cc>
 800073c:	2b00      	cmp	r3, #0
 800073e:	d0c6      	beq.n	80006ce <_vfiprintf_r+0x156>
 8000740:	9105      	str	r1, [sp, #20]
 8000742:	e7c4      	b.n	80006ce <_vfiprintf_r+0x156>
 8000744:	fb0c 2101 	mla	r1, ip, r1, r2
 8000748:	4604      	mov	r4, r0
 800074a:	2301      	movs	r3, #1
 800074c:	e7f0      	b.n	8000730 <_vfiprintf_r+0x1b8>
 800074e:	ab03      	add	r3, sp, #12
 8000750:	9300      	str	r3, [sp, #0]
 8000752:	462a      	mov	r2, r5
 8000754:	4b12      	ldr	r3, [pc, #72]	@ (80007a0 <_vfiprintf_r+0x228>)
 8000756:	a904      	add	r1, sp, #16
 8000758:	4630      	mov	r0, r6
 800075a:	f3af 8000 	nop.w
 800075e:	4607      	mov	r7, r0
 8000760:	1c78      	adds	r0, r7, #1
 8000762:	d1d6      	bne.n	8000712 <_vfiprintf_r+0x19a>
 8000764:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000766:	07d9      	lsls	r1, r3, #31
 8000768:	d405      	bmi.n	8000776 <_vfiprintf_r+0x1fe>
 800076a:	89ab      	ldrh	r3, [r5, #12]
 800076c:	059a      	lsls	r2, r3, #22
 800076e:	d402      	bmi.n	8000776 <_vfiprintf_r+0x1fe>
 8000770:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000772:	f000 fbd9 	bl	8000f28 <__retarget_lock_release_recursive>
 8000776:	89ab      	ldrh	r3, [r5, #12]
 8000778:	065b      	lsls	r3, r3, #25
 800077a:	f53f af1f 	bmi.w	80005bc <_vfiprintf_r+0x44>
 800077e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000780:	e71e      	b.n	80005c0 <_vfiprintf_r+0x48>
 8000782:	ab03      	add	r3, sp, #12
 8000784:	9300      	str	r3, [sp, #0]
 8000786:	462a      	mov	r2, r5
 8000788:	4b05      	ldr	r3, [pc, #20]	@ (80007a0 <_vfiprintf_r+0x228>)
 800078a:	a904      	add	r1, sp, #16
 800078c:	4630      	mov	r0, r6
 800078e:	f000 f883 	bl	8000898 <_printf_i>
 8000792:	e7e4      	b.n	800075e <_vfiprintf_r+0x1e6>
 8000794:	080014d6 	.word	0x080014d6
 8000798:	080014e0 	.word	0x080014e0
 800079c:	00000000 	.word	0x00000000
 80007a0:	08000555 	.word	0x08000555
 80007a4:	080014dc 	.word	0x080014dc

080007a8 <vfiprintf>:
 80007a8:	4613      	mov	r3, r2
 80007aa:	460a      	mov	r2, r1
 80007ac:	4601      	mov	r1, r0
 80007ae:	4802      	ldr	r0, [pc, #8]	@ (80007b8 <vfiprintf+0x10>)
 80007b0:	6800      	ldr	r0, [r0, #0]
 80007b2:	f7ff bee1 	b.w	8000578 <_vfiprintf_r>
 80007b6:	bf00      	nop
 80007b8:	20000010 	.word	0x20000010

080007bc <_printf_common>:
 80007bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007c0:	4616      	mov	r6, r2
 80007c2:	4698      	mov	r8, r3
 80007c4:	688a      	ldr	r2, [r1, #8]
 80007c6:	690b      	ldr	r3, [r1, #16]
 80007c8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80007cc:	4293      	cmp	r3, r2
 80007ce:	bfb8      	it	lt
 80007d0:	4613      	movlt	r3, r2
 80007d2:	6033      	str	r3, [r6, #0]
 80007d4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80007d8:	4607      	mov	r7, r0
 80007da:	460c      	mov	r4, r1
 80007dc:	b10a      	cbz	r2, 80007e2 <_printf_common+0x26>
 80007de:	3301      	adds	r3, #1
 80007e0:	6033      	str	r3, [r6, #0]
 80007e2:	6823      	ldr	r3, [r4, #0]
 80007e4:	0699      	lsls	r1, r3, #26
 80007e6:	bf42      	ittt	mi
 80007e8:	6833      	ldrmi	r3, [r6, #0]
 80007ea:	3302      	addmi	r3, #2
 80007ec:	6033      	strmi	r3, [r6, #0]
 80007ee:	6825      	ldr	r5, [r4, #0]
 80007f0:	f015 0506 	ands.w	r5, r5, #6
 80007f4:	d106      	bne.n	8000804 <_printf_common+0x48>
 80007f6:	f104 0a19 	add.w	sl, r4, #25
 80007fa:	68e3      	ldr	r3, [r4, #12]
 80007fc:	6832      	ldr	r2, [r6, #0]
 80007fe:	1a9b      	subs	r3, r3, r2
 8000800:	42ab      	cmp	r3, r5
 8000802:	dc26      	bgt.n	8000852 <_printf_common+0x96>
 8000804:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000808:	6822      	ldr	r2, [r4, #0]
 800080a:	3b00      	subs	r3, #0
 800080c:	bf18      	it	ne
 800080e:	2301      	movne	r3, #1
 8000810:	0692      	lsls	r2, r2, #26
 8000812:	d42b      	bmi.n	800086c <_printf_common+0xb0>
 8000814:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000818:	4641      	mov	r1, r8
 800081a:	4638      	mov	r0, r7
 800081c:	47c8      	blx	r9
 800081e:	3001      	adds	r0, #1
 8000820:	d01e      	beq.n	8000860 <_printf_common+0xa4>
 8000822:	6823      	ldr	r3, [r4, #0]
 8000824:	6922      	ldr	r2, [r4, #16]
 8000826:	f003 0306 	and.w	r3, r3, #6
 800082a:	2b04      	cmp	r3, #4
 800082c:	bf02      	ittt	eq
 800082e:	68e5      	ldreq	r5, [r4, #12]
 8000830:	6833      	ldreq	r3, [r6, #0]
 8000832:	1aed      	subeq	r5, r5, r3
 8000834:	68a3      	ldr	r3, [r4, #8]
 8000836:	bf0c      	ite	eq
 8000838:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800083c:	2500      	movne	r5, #0
 800083e:	4293      	cmp	r3, r2
 8000840:	bfc4      	itt	gt
 8000842:	1a9b      	subgt	r3, r3, r2
 8000844:	18ed      	addgt	r5, r5, r3
 8000846:	2600      	movs	r6, #0
 8000848:	341a      	adds	r4, #26
 800084a:	42b5      	cmp	r5, r6
 800084c:	d11a      	bne.n	8000884 <_printf_common+0xc8>
 800084e:	2000      	movs	r0, #0
 8000850:	e008      	b.n	8000864 <_printf_common+0xa8>
 8000852:	2301      	movs	r3, #1
 8000854:	4652      	mov	r2, sl
 8000856:	4641      	mov	r1, r8
 8000858:	4638      	mov	r0, r7
 800085a:	47c8      	blx	r9
 800085c:	3001      	adds	r0, #1
 800085e:	d103      	bne.n	8000868 <_printf_common+0xac>
 8000860:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000864:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000868:	3501      	adds	r5, #1
 800086a:	e7c6      	b.n	80007fa <_printf_common+0x3e>
 800086c:	18e1      	adds	r1, r4, r3
 800086e:	1c5a      	adds	r2, r3, #1
 8000870:	2030      	movs	r0, #48	@ 0x30
 8000872:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000876:	4422      	add	r2, r4
 8000878:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800087c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000880:	3302      	adds	r3, #2
 8000882:	e7c7      	b.n	8000814 <_printf_common+0x58>
 8000884:	2301      	movs	r3, #1
 8000886:	4622      	mov	r2, r4
 8000888:	4641      	mov	r1, r8
 800088a:	4638      	mov	r0, r7
 800088c:	47c8      	blx	r9
 800088e:	3001      	adds	r0, #1
 8000890:	d0e6      	beq.n	8000860 <_printf_common+0xa4>
 8000892:	3601      	adds	r6, #1
 8000894:	e7d9      	b.n	800084a <_printf_common+0x8e>
	...

08000898 <_printf_i>:
 8000898:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800089c:	7e0f      	ldrb	r7, [r1, #24]
 800089e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80008a0:	2f78      	cmp	r7, #120	@ 0x78
 80008a2:	4691      	mov	r9, r2
 80008a4:	4680      	mov	r8, r0
 80008a6:	460c      	mov	r4, r1
 80008a8:	469a      	mov	sl, r3
 80008aa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80008ae:	d807      	bhi.n	80008c0 <_printf_i+0x28>
 80008b0:	2f62      	cmp	r7, #98	@ 0x62
 80008b2:	d80a      	bhi.n	80008ca <_printf_i+0x32>
 80008b4:	2f00      	cmp	r7, #0
 80008b6:	f000 80d2 	beq.w	8000a5e <_printf_i+0x1c6>
 80008ba:	2f58      	cmp	r7, #88	@ 0x58
 80008bc:	f000 80b9 	beq.w	8000a32 <_printf_i+0x19a>
 80008c0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80008c4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80008c8:	e03a      	b.n	8000940 <_printf_i+0xa8>
 80008ca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80008ce:	2b15      	cmp	r3, #21
 80008d0:	d8f6      	bhi.n	80008c0 <_printf_i+0x28>
 80008d2:	a101      	add	r1, pc, #4	@ (adr r1, 80008d8 <_printf_i+0x40>)
 80008d4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80008d8:	08000931 	.word	0x08000931
 80008dc:	08000945 	.word	0x08000945
 80008e0:	080008c1 	.word	0x080008c1
 80008e4:	080008c1 	.word	0x080008c1
 80008e8:	080008c1 	.word	0x080008c1
 80008ec:	080008c1 	.word	0x080008c1
 80008f0:	08000945 	.word	0x08000945
 80008f4:	080008c1 	.word	0x080008c1
 80008f8:	080008c1 	.word	0x080008c1
 80008fc:	080008c1 	.word	0x080008c1
 8000900:	080008c1 	.word	0x080008c1
 8000904:	08000a45 	.word	0x08000a45
 8000908:	0800096f 	.word	0x0800096f
 800090c:	080009ff 	.word	0x080009ff
 8000910:	080008c1 	.word	0x080008c1
 8000914:	080008c1 	.word	0x080008c1
 8000918:	08000a67 	.word	0x08000a67
 800091c:	080008c1 	.word	0x080008c1
 8000920:	0800096f 	.word	0x0800096f
 8000924:	080008c1 	.word	0x080008c1
 8000928:	080008c1 	.word	0x080008c1
 800092c:	08000a07 	.word	0x08000a07
 8000930:	6833      	ldr	r3, [r6, #0]
 8000932:	1d1a      	adds	r2, r3, #4
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	6032      	str	r2, [r6, #0]
 8000938:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800093c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000940:	2301      	movs	r3, #1
 8000942:	e09d      	b.n	8000a80 <_printf_i+0x1e8>
 8000944:	6833      	ldr	r3, [r6, #0]
 8000946:	6820      	ldr	r0, [r4, #0]
 8000948:	1d19      	adds	r1, r3, #4
 800094a:	6031      	str	r1, [r6, #0]
 800094c:	0606      	lsls	r6, r0, #24
 800094e:	d501      	bpl.n	8000954 <_printf_i+0xbc>
 8000950:	681d      	ldr	r5, [r3, #0]
 8000952:	e003      	b.n	800095c <_printf_i+0xc4>
 8000954:	0645      	lsls	r5, r0, #25
 8000956:	d5fb      	bpl.n	8000950 <_printf_i+0xb8>
 8000958:	f9b3 5000 	ldrsh.w	r5, [r3]
 800095c:	2d00      	cmp	r5, #0
 800095e:	da03      	bge.n	8000968 <_printf_i+0xd0>
 8000960:	232d      	movs	r3, #45	@ 0x2d
 8000962:	426d      	negs	r5, r5
 8000964:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000968:	4859      	ldr	r0, [pc, #356]	@ (8000ad0 <_printf_i+0x238>)
 800096a:	230a      	movs	r3, #10
 800096c:	e011      	b.n	8000992 <_printf_i+0xfa>
 800096e:	6821      	ldr	r1, [r4, #0]
 8000970:	6833      	ldr	r3, [r6, #0]
 8000972:	0608      	lsls	r0, r1, #24
 8000974:	f853 5b04 	ldr.w	r5, [r3], #4
 8000978:	d402      	bmi.n	8000980 <_printf_i+0xe8>
 800097a:	0649      	lsls	r1, r1, #25
 800097c:	bf48      	it	mi
 800097e:	b2ad      	uxthmi	r5, r5
 8000980:	2f6f      	cmp	r7, #111	@ 0x6f
 8000982:	4853      	ldr	r0, [pc, #332]	@ (8000ad0 <_printf_i+0x238>)
 8000984:	6033      	str	r3, [r6, #0]
 8000986:	bf14      	ite	ne
 8000988:	230a      	movne	r3, #10
 800098a:	2308      	moveq	r3, #8
 800098c:	2100      	movs	r1, #0
 800098e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000992:	6866      	ldr	r6, [r4, #4]
 8000994:	60a6      	str	r6, [r4, #8]
 8000996:	2e00      	cmp	r6, #0
 8000998:	bfa2      	ittt	ge
 800099a:	6821      	ldrge	r1, [r4, #0]
 800099c:	f021 0104 	bicge.w	r1, r1, #4
 80009a0:	6021      	strge	r1, [r4, #0]
 80009a2:	b90d      	cbnz	r5, 80009a8 <_printf_i+0x110>
 80009a4:	2e00      	cmp	r6, #0
 80009a6:	d04b      	beq.n	8000a40 <_printf_i+0x1a8>
 80009a8:	4616      	mov	r6, r2
 80009aa:	fbb5 f1f3 	udiv	r1, r5, r3
 80009ae:	fb03 5711 	mls	r7, r3, r1, r5
 80009b2:	5dc7      	ldrb	r7, [r0, r7]
 80009b4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80009b8:	462f      	mov	r7, r5
 80009ba:	42bb      	cmp	r3, r7
 80009bc:	460d      	mov	r5, r1
 80009be:	d9f4      	bls.n	80009aa <_printf_i+0x112>
 80009c0:	2b08      	cmp	r3, #8
 80009c2:	d10b      	bne.n	80009dc <_printf_i+0x144>
 80009c4:	6823      	ldr	r3, [r4, #0]
 80009c6:	07df      	lsls	r7, r3, #31
 80009c8:	d508      	bpl.n	80009dc <_printf_i+0x144>
 80009ca:	6923      	ldr	r3, [r4, #16]
 80009cc:	6861      	ldr	r1, [r4, #4]
 80009ce:	4299      	cmp	r1, r3
 80009d0:	bfde      	ittt	le
 80009d2:	2330      	movle	r3, #48	@ 0x30
 80009d4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80009d8:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80009dc:	1b92      	subs	r2, r2, r6
 80009de:	6122      	str	r2, [r4, #16]
 80009e0:	f8cd a000 	str.w	sl, [sp]
 80009e4:	464b      	mov	r3, r9
 80009e6:	aa03      	add	r2, sp, #12
 80009e8:	4621      	mov	r1, r4
 80009ea:	4640      	mov	r0, r8
 80009ec:	f7ff fee6 	bl	80007bc <_printf_common>
 80009f0:	3001      	adds	r0, #1
 80009f2:	d14a      	bne.n	8000a8a <_printf_i+0x1f2>
 80009f4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80009f8:	b004      	add	sp, #16
 80009fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009fe:	6823      	ldr	r3, [r4, #0]
 8000a00:	f043 0320 	orr.w	r3, r3, #32
 8000a04:	6023      	str	r3, [r4, #0]
 8000a06:	4833      	ldr	r0, [pc, #204]	@ (8000ad4 <_printf_i+0x23c>)
 8000a08:	2778      	movs	r7, #120	@ 0x78
 8000a0a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000a0e:	6823      	ldr	r3, [r4, #0]
 8000a10:	6831      	ldr	r1, [r6, #0]
 8000a12:	061f      	lsls	r7, r3, #24
 8000a14:	f851 5b04 	ldr.w	r5, [r1], #4
 8000a18:	d402      	bmi.n	8000a20 <_printf_i+0x188>
 8000a1a:	065f      	lsls	r7, r3, #25
 8000a1c:	bf48      	it	mi
 8000a1e:	b2ad      	uxthmi	r5, r5
 8000a20:	6031      	str	r1, [r6, #0]
 8000a22:	07d9      	lsls	r1, r3, #31
 8000a24:	bf44      	itt	mi
 8000a26:	f043 0320 	orrmi.w	r3, r3, #32
 8000a2a:	6023      	strmi	r3, [r4, #0]
 8000a2c:	b11d      	cbz	r5, 8000a36 <_printf_i+0x19e>
 8000a2e:	2310      	movs	r3, #16
 8000a30:	e7ac      	b.n	800098c <_printf_i+0xf4>
 8000a32:	4827      	ldr	r0, [pc, #156]	@ (8000ad0 <_printf_i+0x238>)
 8000a34:	e7e9      	b.n	8000a0a <_printf_i+0x172>
 8000a36:	6823      	ldr	r3, [r4, #0]
 8000a38:	f023 0320 	bic.w	r3, r3, #32
 8000a3c:	6023      	str	r3, [r4, #0]
 8000a3e:	e7f6      	b.n	8000a2e <_printf_i+0x196>
 8000a40:	4616      	mov	r6, r2
 8000a42:	e7bd      	b.n	80009c0 <_printf_i+0x128>
 8000a44:	6833      	ldr	r3, [r6, #0]
 8000a46:	6825      	ldr	r5, [r4, #0]
 8000a48:	6961      	ldr	r1, [r4, #20]
 8000a4a:	1d18      	adds	r0, r3, #4
 8000a4c:	6030      	str	r0, [r6, #0]
 8000a4e:	062e      	lsls	r6, r5, #24
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	d501      	bpl.n	8000a58 <_printf_i+0x1c0>
 8000a54:	6019      	str	r1, [r3, #0]
 8000a56:	e002      	b.n	8000a5e <_printf_i+0x1c6>
 8000a58:	0668      	lsls	r0, r5, #25
 8000a5a:	d5fb      	bpl.n	8000a54 <_printf_i+0x1bc>
 8000a5c:	8019      	strh	r1, [r3, #0]
 8000a5e:	2300      	movs	r3, #0
 8000a60:	6123      	str	r3, [r4, #16]
 8000a62:	4616      	mov	r6, r2
 8000a64:	e7bc      	b.n	80009e0 <_printf_i+0x148>
 8000a66:	6833      	ldr	r3, [r6, #0]
 8000a68:	1d1a      	adds	r2, r3, #4
 8000a6a:	6032      	str	r2, [r6, #0]
 8000a6c:	681e      	ldr	r6, [r3, #0]
 8000a6e:	6862      	ldr	r2, [r4, #4]
 8000a70:	2100      	movs	r1, #0
 8000a72:	4630      	mov	r0, r6
 8000a74:	f7ff fbcc 	bl	8000210 <memchr>
 8000a78:	b108      	cbz	r0, 8000a7e <_printf_i+0x1e6>
 8000a7a:	1b80      	subs	r0, r0, r6
 8000a7c:	6060      	str	r0, [r4, #4]
 8000a7e:	6863      	ldr	r3, [r4, #4]
 8000a80:	6123      	str	r3, [r4, #16]
 8000a82:	2300      	movs	r3, #0
 8000a84:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000a88:	e7aa      	b.n	80009e0 <_printf_i+0x148>
 8000a8a:	6923      	ldr	r3, [r4, #16]
 8000a8c:	4632      	mov	r2, r6
 8000a8e:	4649      	mov	r1, r9
 8000a90:	4640      	mov	r0, r8
 8000a92:	47d0      	blx	sl
 8000a94:	3001      	adds	r0, #1
 8000a96:	d0ad      	beq.n	80009f4 <_printf_i+0x15c>
 8000a98:	6823      	ldr	r3, [r4, #0]
 8000a9a:	079b      	lsls	r3, r3, #30
 8000a9c:	d413      	bmi.n	8000ac6 <_printf_i+0x22e>
 8000a9e:	68e0      	ldr	r0, [r4, #12]
 8000aa0:	9b03      	ldr	r3, [sp, #12]
 8000aa2:	4298      	cmp	r0, r3
 8000aa4:	bfb8      	it	lt
 8000aa6:	4618      	movlt	r0, r3
 8000aa8:	e7a6      	b.n	80009f8 <_printf_i+0x160>
 8000aaa:	2301      	movs	r3, #1
 8000aac:	4632      	mov	r2, r6
 8000aae:	4649      	mov	r1, r9
 8000ab0:	4640      	mov	r0, r8
 8000ab2:	47d0      	blx	sl
 8000ab4:	3001      	adds	r0, #1
 8000ab6:	d09d      	beq.n	80009f4 <_printf_i+0x15c>
 8000ab8:	3501      	adds	r5, #1
 8000aba:	68e3      	ldr	r3, [r4, #12]
 8000abc:	9903      	ldr	r1, [sp, #12]
 8000abe:	1a5b      	subs	r3, r3, r1
 8000ac0:	42ab      	cmp	r3, r5
 8000ac2:	dcf2      	bgt.n	8000aaa <_printf_i+0x212>
 8000ac4:	e7eb      	b.n	8000a9e <_printf_i+0x206>
 8000ac6:	2500      	movs	r5, #0
 8000ac8:	f104 0619 	add.w	r6, r4, #25
 8000acc:	e7f5      	b.n	8000aba <_printf_i+0x222>
 8000ace:	bf00      	nop
 8000ad0:	080014e7 	.word	0x080014e7
 8000ad4:	080014f8 	.word	0x080014f8

08000ad8 <std>:
 8000ad8:	2300      	movs	r3, #0
 8000ada:	b510      	push	{r4, lr}
 8000adc:	4604      	mov	r4, r0
 8000ade:	e9c0 3300 	strd	r3, r3, [r0]
 8000ae2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ae6:	6083      	str	r3, [r0, #8]
 8000ae8:	8181      	strh	r1, [r0, #12]
 8000aea:	6643      	str	r3, [r0, #100]	@ 0x64
 8000aec:	81c2      	strh	r2, [r0, #14]
 8000aee:	6183      	str	r3, [r0, #24]
 8000af0:	4619      	mov	r1, r3
 8000af2:	2208      	movs	r2, #8
 8000af4:	305c      	adds	r0, #92	@ 0x5c
 8000af6:	f000 f9a3 	bl	8000e40 <memset>
 8000afa:	4b0d      	ldr	r3, [pc, #52]	@ (8000b30 <std+0x58>)
 8000afc:	6263      	str	r3, [r4, #36]	@ 0x24
 8000afe:	4b0d      	ldr	r3, [pc, #52]	@ (8000b34 <std+0x5c>)
 8000b00:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000b02:	4b0d      	ldr	r3, [pc, #52]	@ (8000b38 <std+0x60>)
 8000b04:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000b06:	4b0d      	ldr	r3, [pc, #52]	@ (8000b3c <std+0x64>)
 8000b08:	6323      	str	r3, [r4, #48]	@ 0x30
 8000b0a:	4b0d      	ldr	r3, [pc, #52]	@ (8000b40 <std+0x68>)
 8000b0c:	6224      	str	r4, [r4, #32]
 8000b0e:	429c      	cmp	r4, r3
 8000b10:	d006      	beq.n	8000b20 <std+0x48>
 8000b12:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000b16:	4294      	cmp	r4, r2
 8000b18:	d002      	beq.n	8000b20 <std+0x48>
 8000b1a:	33d0      	adds	r3, #208	@ 0xd0
 8000b1c:	429c      	cmp	r4, r3
 8000b1e:	d105      	bne.n	8000b2c <std+0x54>
 8000b20:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b28:	f000 b9fc 	b.w	8000f24 <__retarget_lock_init_recursive>
 8000b2c:	bd10      	pop	{r4, pc}
 8000b2e:	bf00      	nop
 8000b30:	08000c91 	.word	0x08000c91
 8000b34:	08000cb3 	.word	0x08000cb3
 8000b38:	08000ceb 	.word	0x08000ceb
 8000b3c:	08000d0f 	.word	0x08000d0f
 8000b40:	2000007c 	.word	0x2000007c

08000b44 <stdio_exit_handler>:
 8000b44:	4a02      	ldr	r2, [pc, #8]	@ (8000b50 <stdio_exit_handler+0xc>)
 8000b46:	4903      	ldr	r1, [pc, #12]	@ (8000b54 <stdio_exit_handler+0x10>)
 8000b48:	4803      	ldr	r0, [pc, #12]	@ (8000b58 <stdio_exit_handler+0x14>)
 8000b4a:	f000 b869 	b.w	8000c20 <_fwalk_sglue>
 8000b4e:	bf00      	nop
 8000b50:	20000004 	.word	0x20000004
 8000b54:	08001225 	.word	0x08001225
 8000b58:	20000014 	.word	0x20000014

08000b5c <cleanup_stdio>:
 8000b5c:	6841      	ldr	r1, [r0, #4]
 8000b5e:	4b0c      	ldr	r3, [pc, #48]	@ (8000b90 <cleanup_stdio+0x34>)
 8000b60:	4299      	cmp	r1, r3
 8000b62:	b510      	push	{r4, lr}
 8000b64:	4604      	mov	r4, r0
 8000b66:	d001      	beq.n	8000b6c <cleanup_stdio+0x10>
 8000b68:	f000 fb5c 	bl	8001224 <_fflush_r>
 8000b6c:	68a1      	ldr	r1, [r4, #8]
 8000b6e:	4b09      	ldr	r3, [pc, #36]	@ (8000b94 <cleanup_stdio+0x38>)
 8000b70:	4299      	cmp	r1, r3
 8000b72:	d002      	beq.n	8000b7a <cleanup_stdio+0x1e>
 8000b74:	4620      	mov	r0, r4
 8000b76:	f000 fb55 	bl	8001224 <_fflush_r>
 8000b7a:	68e1      	ldr	r1, [r4, #12]
 8000b7c:	4b06      	ldr	r3, [pc, #24]	@ (8000b98 <cleanup_stdio+0x3c>)
 8000b7e:	4299      	cmp	r1, r3
 8000b80:	d004      	beq.n	8000b8c <cleanup_stdio+0x30>
 8000b82:	4620      	mov	r0, r4
 8000b84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b88:	f000 bb4c 	b.w	8001224 <_fflush_r>
 8000b8c:	bd10      	pop	{r4, pc}
 8000b8e:	bf00      	nop
 8000b90:	2000007c 	.word	0x2000007c
 8000b94:	200000e4 	.word	0x200000e4
 8000b98:	2000014c 	.word	0x2000014c

08000b9c <global_stdio_init.part.0>:
 8000b9c:	b510      	push	{r4, lr}
 8000b9e:	4b0b      	ldr	r3, [pc, #44]	@ (8000bcc <global_stdio_init.part.0+0x30>)
 8000ba0:	4c0b      	ldr	r4, [pc, #44]	@ (8000bd0 <global_stdio_init.part.0+0x34>)
 8000ba2:	4a0c      	ldr	r2, [pc, #48]	@ (8000bd4 <global_stdio_init.part.0+0x38>)
 8000ba4:	601a      	str	r2, [r3, #0]
 8000ba6:	4620      	mov	r0, r4
 8000ba8:	2200      	movs	r2, #0
 8000baa:	2104      	movs	r1, #4
 8000bac:	f7ff ff94 	bl	8000ad8 <std>
 8000bb0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000bb4:	2201      	movs	r2, #1
 8000bb6:	2109      	movs	r1, #9
 8000bb8:	f7ff ff8e 	bl	8000ad8 <std>
 8000bbc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000bc0:	2202      	movs	r2, #2
 8000bc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bc6:	2112      	movs	r1, #18
 8000bc8:	f7ff bf86 	b.w	8000ad8 <std>
 8000bcc:	200001b4 	.word	0x200001b4
 8000bd0:	2000007c 	.word	0x2000007c
 8000bd4:	08000b45 	.word	0x08000b45

08000bd8 <__sfp_lock_acquire>:
 8000bd8:	4801      	ldr	r0, [pc, #4]	@ (8000be0 <__sfp_lock_acquire+0x8>)
 8000bda:	f000 b9a4 	b.w	8000f26 <__retarget_lock_acquire_recursive>
 8000bde:	bf00      	nop
 8000be0:	200001bd 	.word	0x200001bd

08000be4 <__sfp_lock_release>:
 8000be4:	4801      	ldr	r0, [pc, #4]	@ (8000bec <__sfp_lock_release+0x8>)
 8000be6:	f000 b99f 	b.w	8000f28 <__retarget_lock_release_recursive>
 8000bea:	bf00      	nop
 8000bec:	200001bd 	.word	0x200001bd

08000bf0 <__sinit>:
 8000bf0:	b510      	push	{r4, lr}
 8000bf2:	4604      	mov	r4, r0
 8000bf4:	f7ff fff0 	bl	8000bd8 <__sfp_lock_acquire>
 8000bf8:	6a23      	ldr	r3, [r4, #32]
 8000bfa:	b11b      	cbz	r3, 8000c04 <__sinit+0x14>
 8000bfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c00:	f7ff bff0 	b.w	8000be4 <__sfp_lock_release>
 8000c04:	4b04      	ldr	r3, [pc, #16]	@ (8000c18 <__sinit+0x28>)
 8000c06:	6223      	str	r3, [r4, #32]
 8000c08:	4b04      	ldr	r3, [pc, #16]	@ (8000c1c <__sinit+0x2c>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	2b00      	cmp	r3, #0
 8000c0e:	d1f5      	bne.n	8000bfc <__sinit+0xc>
 8000c10:	f7ff ffc4 	bl	8000b9c <global_stdio_init.part.0>
 8000c14:	e7f2      	b.n	8000bfc <__sinit+0xc>
 8000c16:	bf00      	nop
 8000c18:	08000b5d 	.word	0x08000b5d
 8000c1c:	200001b4 	.word	0x200001b4

08000c20 <_fwalk_sglue>:
 8000c20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c24:	4607      	mov	r7, r0
 8000c26:	4688      	mov	r8, r1
 8000c28:	4614      	mov	r4, r2
 8000c2a:	2600      	movs	r6, #0
 8000c2c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c30:	f1b9 0901 	subs.w	r9, r9, #1
 8000c34:	d505      	bpl.n	8000c42 <_fwalk_sglue+0x22>
 8000c36:	6824      	ldr	r4, [r4, #0]
 8000c38:	2c00      	cmp	r4, #0
 8000c3a:	d1f7      	bne.n	8000c2c <_fwalk_sglue+0xc>
 8000c3c:	4630      	mov	r0, r6
 8000c3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c42:	89ab      	ldrh	r3, [r5, #12]
 8000c44:	2b01      	cmp	r3, #1
 8000c46:	d907      	bls.n	8000c58 <_fwalk_sglue+0x38>
 8000c48:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c4c:	3301      	adds	r3, #1
 8000c4e:	d003      	beq.n	8000c58 <_fwalk_sglue+0x38>
 8000c50:	4629      	mov	r1, r5
 8000c52:	4638      	mov	r0, r7
 8000c54:	47c0      	blx	r8
 8000c56:	4306      	orrs	r6, r0
 8000c58:	3568      	adds	r5, #104	@ 0x68
 8000c5a:	e7e9      	b.n	8000c30 <_fwalk_sglue+0x10>

08000c5c <iprintf>:
 8000c5c:	b40f      	push	{r0, r1, r2, r3}
 8000c5e:	b507      	push	{r0, r1, r2, lr}
 8000c60:	4906      	ldr	r1, [pc, #24]	@ (8000c7c <iprintf+0x20>)
 8000c62:	ab04      	add	r3, sp, #16
 8000c64:	6808      	ldr	r0, [r1, #0]
 8000c66:	f853 2b04 	ldr.w	r2, [r3], #4
 8000c6a:	6881      	ldr	r1, [r0, #8]
 8000c6c:	9301      	str	r3, [sp, #4]
 8000c6e:	f7ff fc83 	bl	8000578 <_vfiprintf_r>
 8000c72:	b003      	add	sp, #12
 8000c74:	f85d eb04 	ldr.w	lr, [sp], #4
 8000c78:	b004      	add	sp, #16
 8000c7a:	4770      	bx	lr
 8000c7c:	20000010 	.word	0x20000010

08000c80 <putchar>:
 8000c80:	4b02      	ldr	r3, [pc, #8]	@ (8000c8c <putchar+0xc>)
 8000c82:	4601      	mov	r1, r0
 8000c84:	6818      	ldr	r0, [r3, #0]
 8000c86:	6882      	ldr	r2, [r0, #8]
 8000c88:	f000 bb56 	b.w	8001338 <_putc_r>
 8000c8c:	20000010 	.word	0x20000010

08000c90 <__sread>:
 8000c90:	b510      	push	{r4, lr}
 8000c92:	460c      	mov	r4, r1
 8000c94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c98:	f000 f8fc 	bl	8000e94 <_read_r>
 8000c9c:	2800      	cmp	r0, #0
 8000c9e:	bfab      	itete	ge
 8000ca0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000ca2:	89a3      	ldrhlt	r3, [r4, #12]
 8000ca4:	181b      	addge	r3, r3, r0
 8000ca6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000caa:	bfac      	ite	ge
 8000cac:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000cae:	81a3      	strhlt	r3, [r4, #12]
 8000cb0:	bd10      	pop	{r4, pc}

08000cb2 <__swrite>:
 8000cb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb6:	461f      	mov	r7, r3
 8000cb8:	898b      	ldrh	r3, [r1, #12]
 8000cba:	05db      	lsls	r3, r3, #23
 8000cbc:	4605      	mov	r5, r0
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	4616      	mov	r6, r2
 8000cc2:	d505      	bpl.n	8000cd0 <__swrite+0x1e>
 8000cc4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cc8:	2302      	movs	r3, #2
 8000cca:	2200      	movs	r2, #0
 8000ccc:	f000 f8d0 	bl	8000e70 <_lseek_r>
 8000cd0:	89a3      	ldrh	r3, [r4, #12]
 8000cd2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cd6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000cda:	81a3      	strh	r3, [r4, #12]
 8000cdc:	4632      	mov	r2, r6
 8000cde:	463b      	mov	r3, r7
 8000ce0:	4628      	mov	r0, r5
 8000ce2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ce6:	f000 b8e7 	b.w	8000eb8 <_write_r>

08000cea <__sseek>:
 8000cea:	b510      	push	{r4, lr}
 8000cec:	460c      	mov	r4, r1
 8000cee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cf2:	f000 f8bd 	bl	8000e70 <_lseek_r>
 8000cf6:	1c43      	adds	r3, r0, #1
 8000cf8:	89a3      	ldrh	r3, [r4, #12]
 8000cfa:	bf15      	itete	ne
 8000cfc:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000cfe:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000d02:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000d06:	81a3      	strheq	r3, [r4, #12]
 8000d08:	bf18      	it	ne
 8000d0a:	81a3      	strhne	r3, [r4, #12]
 8000d0c:	bd10      	pop	{r4, pc}

08000d0e <__sclose>:
 8000d0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d12:	f000 b89d 	b.w	8000e50 <_close_r>

08000d16 <__swbuf_r>:
 8000d16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d18:	460e      	mov	r6, r1
 8000d1a:	4614      	mov	r4, r2
 8000d1c:	4605      	mov	r5, r0
 8000d1e:	b118      	cbz	r0, 8000d28 <__swbuf_r+0x12>
 8000d20:	6a03      	ldr	r3, [r0, #32]
 8000d22:	b90b      	cbnz	r3, 8000d28 <__swbuf_r+0x12>
 8000d24:	f7ff ff64 	bl	8000bf0 <__sinit>
 8000d28:	69a3      	ldr	r3, [r4, #24]
 8000d2a:	60a3      	str	r3, [r4, #8]
 8000d2c:	89a3      	ldrh	r3, [r4, #12]
 8000d2e:	071a      	lsls	r2, r3, #28
 8000d30:	d501      	bpl.n	8000d36 <__swbuf_r+0x20>
 8000d32:	6923      	ldr	r3, [r4, #16]
 8000d34:	b943      	cbnz	r3, 8000d48 <__swbuf_r+0x32>
 8000d36:	4621      	mov	r1, r4
 8000d38:	4628      	mov	r0, r5
 8000d3a:	f000 f82b 	bl	8000d94 <__swsetup_r>
 8000d3e:	b118      	cbz	r0, 8000d48 <__swbuf_r+0x32>
 8000d40:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000d44:	4638      	mov	r0, r7
 8000d46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d48:	6823      	ldr	r3, [r4, #0]
 8000d4a:	6922      	ldr	r2, [r4, #16]
 8000d4c:	1a98      	subs	r0, r3, r2
 8000d4e:	6963      	ldr	r3, [r4, #20]
 8000d50:	b2f6      	uxtb	r6, r6
 8000d52:	4283      	cmp	r3, r0
 8000d54:	4637      	mov	r7, r6
 8000d56:	dc05      	bgt.n	8000d64 <__swbuf_r+0x4e>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	4628      	mov	r0, r5
 8000d5c:	f000 fa62 	bl	8001224 <_fflush_r>
 8000d60:	2800      	cmp	r0, #0
 8000d62:	d1ed      	bne.n	8000d40 <__swbuf_r+0x2a>
 8000d64:	68a3      	ldr	r3, [r4, #8]
 8000d66:	3b01      	subs	r3, #1
 8000d68:	60a3      	str	r3, [r4, #8]
 8000d6a:	6823      	ldr	r3, [r4, #0]
 8000d6c:	1c5a      	adds	r2, r3, #1
 8000d6e:	6022      	str	r2, [r4, #0]
 8000d70:	701e      	strb	r6, [r3, #0]
 8000d72:	6962      	ldr	r2, [r4, #20]
 8000d74:	1c43      	adds	r3, r0, #1
 8000d76:	429a      	cmp	r2, r3
 8000d78:	d004      	beq.n	8000d84 <__swbuf_r+0x6e>
 8000d7a:	89a3      	ldrh	r3, [r4, #12]
 8000d7c:	07db      	lsls	r3, r3, #31
 8000d7e:	d5e1      	bpl.n	8000d44 <__swbuf_r+0x2e>
 8000d80:	2e0a      	cmp	r6, #10
 8000d82:	d1df      	bne.n	8000d44 <__swbuf_r+0x2e>
 8000d84:	4621      	mov	r1, r4
 8000d86:	4628      	mov	r0, r5
 8000d88:	f000 fa4c 	bl	8001224 <_fflush_r>
 8000d8c:	2800      	cmp	r0, #0
 8000d8e:	d0d9      	beq.n	8000d44 <__swbuf_r+0x2e>
 8000d90:	e7d6      	b.n	8000d40 <__swbuf_r+0x2a>
	...

08000d94 <__swsetup_r>:
 8000d94:	b538      	push	{r3, r4, r5, lr}
 8000d96:	4b29      	ldr	r3, [pc, #164]	@ (8000e3c <__swsetup_r+0xa8>)
 8000d98:	4605      	mov	r5, r0
 8000d9a:	6818      	ldr	r0, [r3, #0]
 8000d9c:	460c      	mov	r4, r1
 8000d9e:	b118      	cbz	r0, 8000da8 <__swsetup_r+0x14>
 8000da0:	6a03      	ldr	r3, [r0, #32]
 8000da2:	b90b      	cbnz	r3, 8000da8 <__swsetup_r+0x14>
 8000da4:	f7ff ff24 	bl	8000bf0 <__sinit>
 8000da8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000dac:	0719      	lsls	r1, r3, #28
 8000dae:	d422      	bmi.n	8000df6 <__swsetup_r+0x62>
 8000db0:	06da      	lsls	r2, r3, #27
 8000db2:	d407      	bmi.n	8000dc4 <__swsetup_r+0x30>
 8000db4:	2209      	movs	r2, #9
 8000db6:	602a      	str	r2, [r5, #0]
 8000db8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000dbc:	81a3      	strh	r3, [r4, #12]
 8000dbe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000dc2:	e033      	b.n	8000e2c <__swsetup_r+0x98>
 8000dc4:	0758      	lsls	r0, r3, #29
 8000dc6:	d512      	bpl.n	8000dee <__swsetup_r+0x5a>
 8000dc8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000dca:	b141      	cbz	r1, 8000dde <__swsetup_r+0x4a>
 8000dcc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000dd0:	4299      	cmp	r1, r3
 8000dd2:	d002      	beq.n	8000dda <__swsetup_r+0x46>
 8000dd4:	4628      	mov	r0, r5
 8000dd6:	f000 f8a9 	bl	8000f2c <_free_r>
 8000dda:	2300      	movs	r3, #0
 8000ddc:	6363      	str	r3, [r4, #52]	@ 0x34
 8000dde:	89a3      	ldrh	r3, [r4, #12]
 8000de0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000de4:	81a3      	strh	r3, [r4, #12]
 8000de6:	2300      	movs	r3, #0
 8000de8:	6063      	str	r3, [r4, #4]
 8000dea:	6923      	ldr	r3, [r4, #16]
 8000dec:	6023      	str	r3, [r4, #0]
 8000dee:	89a3      	ldrh	r3, [r4, #12]
 8000df0:	f043 0308 	orr.w	r3, r3, #8
 8000df4:	81a3      	strh	r3, [r4, #12]
 8000df6:	6923      	ldr	r3, [r4, #16]
 8000df8:	b94b      	cbnz	r3, 8000e0e <__swsetup_r+0x7a>
 8000dfa:	89a3      	ldrh	r3, [r4, #12]
 8000dfc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000e00:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000e04:	d003      	beq.n	8000e0e <__swsetup_r+0x7a>
 8000e06:	4621      	mov	r1, r4
 8000e08:	4628      	mov	r0, r5
 8000e0a:	f000 fa59 	bl	80012c0 <__smakebuf_r>
 8000e0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e12:	f013 0201 	ands.w	r2, r3, #1
 8000e16:	d00a      	beq.n	8000e2e <__swsetup_r+0x9a>
 8000e18:	2200      	movs	r2, #0
 8000e1a:	60a2      	str	r2, [r4, #8]
 8000e1c:	6962      	ldr	r2, [r4, #20]
 8000e1e:	4252      	negs	r2, r2
 8000e20:	61a2      	str	r2, [r4, #24]
 8000e22:	6922      	ldr	r2, [r4, #16]
 8000e24:	b942      	cbnz	r2, 8000e38 <__swsetup_r+0xa4>
 8000e26:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000e2a:	d1c5      	bne.n	8000db8 <__swsetup_r+0x24>
 8000e2c:	bd38      	pop	{r3, r4, r5, pc}
 8000e2e:	0799      	lsls	r1, r3, #30
 8000e30:	bf58      	it	pl
 8000e32:	6962      	ldrpl	r2, [r4, #20]
 8000e34:	60a2      	str	r2, [r4, #8]
 8000e36:	e7f4      	b.n	8000e22 <__swsetup_r+0x8e>
 8000e38:	2000      	movs	r0, #0
 8000e3a:	e7f7      	b.n	8000e2c <__swsetup_r+0x98>
 8000e3c:	20000010 	.word	0x20000010

08000e40 <memset>:
 8000e40:	4402      	add	r2, r0
 8000e42:	4603      	mov	r3, r0
 8000e44:	4293      	cmp	r3, r2
 8000e46:	d100      	bne.n	8000e4a <memset+0xa>
 8000e48:	4770      	bx	lr
 8000e4a:	f803 1b01 	strb.w	r1, [r3], #1
 8000e4e:	e7f9      	b.n	8000e44 <memset+0x4>

08000e50 <_close_r>:
 8000e50:	b538      	push	{r3, r4, r5, lr}
 8000e52:	4d06      	ldr	r5, [pc, #24]	@ (8000e6c <_close_r+0x1c>)
 8000e54:	2300      	movs	r3, #0
 8000e56:	4604      	mov	r4, r0
 8000e58:	4608      	mov	r0, r1
 8000e5a:	602b      	str	r3, [r5, #0]
 8000e5c:	f000 fad2 	bl	8001404 <_close>
 8000e60:	1c43      	adds	r3, r0, #1
 8000e62:	d102      	bne.n	8000e6a <_close_r+0x1a>
 8000e64:	682b      	ldr	r3, [r5, #0]
 8000e66:	b103      	cbz	r3, 8000e6a <_close_r+0x1a>
 8000e68:	6023      	str	r3, [r4, #0]
 8000e6a:	bd38      	pop	{r3, r4, r5, pc}
 8000e6c:	200001b8 	.word	0x200001b8

08000e70 <_lseek_r>:
 8000e70:	b538      	push	{r3, r4, r5, lr}
 8000e72:	4d07      	ldr	r5, [pc, #28]	@ (8000e90 <_lseek_r+0x20>)
 8000e74:	4604      	mov	r4, r0
 8000e76:	4608      	mov	r0, r1
 8000e78:	4611      	mov	r1, r2
 8000e7a:	2200      	movs	r2, #0
 8000e7c:	602a      	str	r2, [r5, #0]
 8000e7e:	461a      	mov	r2, r3
 8000e80:	f000 fad8 	bl	8001434 <_lseek>
 8000e84:	1c43      	adds	r3, r0, #1
 8000e86:	d102      	bne.n	8000e8e <_lseek_r+0x1e>
 8000e88:	682b      	ldr	r3, [r5, #0]
 8000e8a:	b103      	cbz	r3, 8000e8e <_lseek_r+0x1e>
 8000e8c:	6023      	str	r3, [r4, #0]
 8000e8e:	bd38      	pop	{r3, r4, r5, pc}
 8000e90:	200001b8 	.word	0x200001b8

08000e94 <_read_r>:
 8000e94:	b538      	push	{r3, r4, r5, lr}
 8000e96:	4d07      	ldr	r5, [pc, #28]	@ (8000eb4 <_read_r+0x20>)
 8000e98:	4604      	mov	r4, r0
 8000e9a:	4608      	mov	r0, r1
 8000e9c:	4611      	mov	r1, r2
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	602a      	str	r2, [r5, #0]
 8000ea2:	461a      	mov	r2, r3
 8000ea4:	f000 face 	bl	8001444 <_read>
 8000ea8:	1c43      	adds	r3, r0, #1
 8000eaa:	d102      	bne.n	8000eb2 <_read_r+0x1e>
 8000eac:	682b      	ldr	r3, [r5, #0]
 8000eae:	b103      	cbz	r3, 8000eb2 <_read_r+0x1e>
 8000eb0:	6023      	str	r3, [r4, #0]
 8000eb2:	bd38      	pop	{r3, r4, r5, pc}
 8000eb4:	200001b8 	.word	0x200001b8

08000eb8 <_write_r>:
 8000eb8:	b538      	push	{r3, r4, r5, lr}
 8000eba:	4d07      	ldr	r5, [pc, #28]	@ (8000ed8 <_write_r+0x20>)
 8000ebc:	4604      	mov	r4, r0
 8000ebe:	4608      	mov	r0, r1
 8000ec0:	4611      	mov	r1, r2
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	602a      	str	r2, [r5, #0]
 8000ec6:	461a      	mov	r2, r3
 8000ec8:	f7ff fa19 	bl	80002fe <_write>
 8000ecc:	1c43      	adds	r3, r0, #1
 8000ece:	d102      	bne.n	8000ed6 <_write_r+0x1e>
 8000ed0:	682b      	ldr	r3, [r5, #0]
 8000ed2:	b103      	cbz	r3, 8000ed6 <_write_r+0x1e>
 8000ed4:	6023      	str	r3, [r4, #0]
 8000ed6:	bd38      	pop	{r3, r4, r5, pc}
 8000ed8:	200001b8 	.word	0x200001b8

08000edc <__libc_init_array>:
 8000edc:	b570      	push	{r4, r5, r6, lr}
 8000ede:	4d0d      	ldr	r5, [pc, #52]	@ (8000f14 <__libc_init_array+0x38>)
 8000ee0:	4c0d      	ldr	r4, [pc, #52]	@ (8000f18 <__libc_init_array+0x3c>)
 8000ee2:	1b64      	subs	r4, r4, r5
 8000ee4:	10a4      	asrs	r4, r4, #2
 8000ee6:	2600      	movs	r6, #0
 8000ee8:	42a6      	cmp	r6, r4
 8000eea:	d109      	bne.n	8000f00 <__libc_init_array+0x24>
 8000eec:	4d0b      	ldr	r5, [pc, #44]	@ (8000f1c <__libc_init_array+0x40>)
 8000eee:	4c0c      	ldr	r4, [pc, #48]	@ (8000f20 <__libc_init_array+0x44>)
 8000ef0:	f000 fabe 	bl	8001470 <_init>
 8000ef4:	1b64      	subs	r4, r4, r5
 8000ef6:	10a4      	asrs	r4, r4, #2
 8000ef8:	2600      	movs	r6, #0
 8000efa:	42a6      	cmp	r6, r4
 8000efc:	d105      	bne.n	8000f0a <__libc_init_array+0x2e>
 8000efe:	bd70      	pop	{r4, r5, r6, pc}
 8000f00:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f04:	4798      	blx	r3
 8000f06:	3601      	adds	r6, #1
 8000f08:	e7ee      	b.n	8000ee8 <__libc_init_array+0xc>
 8000f0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f0e:	4798      	blx	r3
 8000f10:	3601      	adds	r6, #1
 8000f12:	e7f2      	b.n	8000efa <__libc_init_array+0x1e>
 8000f14:	08001514 	.word	0x08001514
 8000f18:	08001514 	.word	0x08001514
 8000f1c:	08001514 	.word	0x08001514
 8000f20:	08001518 	.word	0x08001518

08000f24 <__retarget_lock_init_recursive>:
 8000f24:	4770      	bx	lr

08000f26 <__retarget_lock_acquire_recursive>:
 8000f26:	4770      	bx	lr

08000f28 <__retarget_lock_release_recursive>:
 8000f28:	4770      	bx	lr
	...

08000f2c <_free_r>:
 8000f2c:	b538      	push	{r3, r4, r5, lr}
 8000f2e:	4605      	mov	r5, r0
 8000f30:	2900      	cmp	r1, #0
 8000f32:	d041      	beq.n	8000fb8 <_free_r+0x8c>
 8000f34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f38:	1f0c      	subs	r4, r1, #4
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	bfb8      	it	lt
 8000f3e:	18e4      	addlt	r4, r4, r3
 8000f40:	f000 f8e0 	bl	8001104 <__malloc_lock>
 8000f44:	4a1d      	ldr	r2, [pc, #116]	@ (8000fbc <_free_r+0x90>)
 8000f46:	6813      	ldr	r3, [r2, #0]
 8000f48:	b933      	cbnz	r3, 8000f58 <_free_r+0x2c>
 8000f4a:	6063      	str	r3, [r4, #4]
 8000f4c:	6014      	str	r4, [r2, #0]
 8000f4e:	4628      	mov	r0, r5
 8000f50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f54:	f000 b8dc 	b.w	8001110 <__malloc_unlock>
 8000f58:	42a3      	cmp	r3, r4
 8000f5a:	d908      	bls.n	8000f6e <_free_r+0x42>
 8000f5c:	6820      	ldr	r0, [r4, #0]
 8000f5e:	1821      	adds	r1, r4, r0
 8000f60:	428b      	cmp	r3, r1
 8000f62:	bf01      	itttt	eq
 8000f64:	6819      	ldreq	r1, [r3, #0]
 8000f66:	685b      	ldreq	r3, [r3, #4]
 8000f68:	1809      	addeq	r1, r1, r0
 8000f6a:	6021      	streq	r1, [r4, #0]
 8000f6c:	e7ed      	b.n	8000f4a <_free_r+0x1e>
 8000f6e:	461a      	mov	r2, r3
 8000f70:	685b      	ldr	r3, [r3, #4]
 8000f72:	b10b      	cbz	r3, 8000f78 <_free_r+0x4c>
 8000f74:	42a3      	cmp	r3, r4
 8000f76:	d9fa      	bls.n	8000f6e <_free_r+0x42>
 8000f78:	6811      	ldr	r1, [r2, #0]
 8000f7a:	1850      	adds	r0, r2, r1
 8000f7c:	42a0      	cmp	r0, r4
 8000f7e:	d10b      	bne.n	8000f98 <_free_r+0x6c>
 8000f80:	6820      	ldr	r0, [r4, #0]
 8000f82:	4401      	add	r1, r0
 8000f84:	1850      	adds	r0, r2, r1
 8000f86:	4283      	cmp	r3, r0
 8000f88:	6011      	str	r1, [r2, #0]
 8000f8a:	d1e0      	bne.n	8000f4e <_free_r+0x22>
 8000f8c:	6818      	ldr	r0, [r3, #0]
 8000f8e:	685b      	ldr	r3, [r3, #4]
 8000f90:	6053      	str	r3, [r2, #4]
 8000f92:	4408      	add	r0, r1
 8000f94:	6010      	str	r0, [r2, #0]
 8000f96:	e7da      	b.n	8000f4e <_free_r+0x22>
 8000f98:	d902      	bls.n	8000fa0 <_free_r+0x74>
 8000f9a:	230c      	movs	r3, #12
 8000f9c:	602b      	str	r3, [r5, #0]
 8000f9e:	e7d6      	b.n	8000f4e <_free_r+0x22>
 8000fa0:	6820      	ldr	r0, [r4, #0]
 8000fa2:	1821      	adds	r1, r4, r0
 8000fa4:	428b      	cmp	r3, r1
 8000fa6:	bf04      	itt	eq
 8000fa8:	6819      	ldreq	r1, [r3, #0]
 8000faa:	685b      	ldreq	r3, [r3, #4]
 8000fac:	6063      	str	r3, [r4, #4]
 8000fae:	bf04      	itt	eq
 8000fb0:	1809      	addeq	r1, r1, r0
 8000fb2:	6021      	streq	r1, [r4, #0]
 8000fb4:	6054      	str	r4, [r2, #4]
 8000fb6:	e7ca      	b.n	8000f4e <_free_r+0x22>
 8000fb8:	bd38      	pop	{r3, r4, r5, pc}
 8000fba:	bf00      	nop
 8000fbc:	200001c4 	.word	0x200001c4

08000fc0 <sbrk_aligned>:
 8000fc0:	b570      	push	{r4, r5, r6, lr}
 8000fc2:	4e0f      	ldr	r6, [pc, #60]	@ (8001000 <sbrk_aligned+0x40>)
 8000fc4:	460c      	mov	r4, r1
 8000fc6:	6831      	ldr	r1, [r6, #0]
 8000fc8:	4605      	mov	r5, r0
 8000fca:	b911      	cbnz	r1, 8000fd2 <sbrk_aligned+0x12>
 8000fcc:	f000 fa0a 	bl	80013e4 <_sbrk_r>
 8000fd0:	6030      	str	r0, [r6, #0]
 8000fd2:	4621      	mov	r1, r4
 8000fd4:	4628      	mov	r0, r5
 8000fd6:	f000 fa05 	bl	80013e4 <_sbrk_r>
 8000fda:	1c43      	adds	r3, r0, #1
 8000fdc:	d103      	bne.n	8000fe6 <sbrk_aligned+0x26>
 8000fde:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000fe2:	4620      	mov	r0, r4
 8000fe4:	bd70      	pop	{r4, r5, r6, pc}
 8000fe6:	1cc4      	adds	r4, r0, #3
 8000fe8:	f024 0403 	bic.w	r4, r4, #3
 8000fec:	42a0      	cmp	r0, r4
 8000fee:	d0f8      	beq.n	8000fe2 <sbrk_aligned+0x22>
 8000ff0:	1a21      	subs	r1, r4, r0
 8000ff2:	4628      	mov	r0, r5
 8000ff4:	f000 f9f6 	bl	80013e4 <_sbrk_r>
 8000ff8:	3001      	adds	r0, #1
 8000ffa:	d1f2      	bne.n	8000fe2 <sbrk_aligned+0x22>
 8000ffc:	e7ef      	b.n	8000fde <sbrk_aligned+0x1e>
 8000ffe:	bf00      	nop
 8001000:	200001c0 	.word	0x200001c0

08001004 <_malloc_r>:
 8001004:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001008:	1ccd      	adds	r5, r1, #3
 800100a:	f025 0503 	bic.w	r5, r5, #3
 800100e:	3508      	adds	r5, #8
 8001010:	2d0c      	cmp	r5, #12
 8001012:	bf38      	it	cc
 8001014:	250c      	movcc	r5, #12
 8001016:	2d00      	cmp	r5, #0
 8001018:	4606      	mov	r6, r0
 800101a:	db01      	blt.n	8001020 <_malloc_r+0x1c>
 800101c:	42a9      	cmp	r1, r5
 800101e:	d904      	bls.n	800102a <_malloc_r+0x26>
 8001020:	230c      	movs	r3, #12
 8001022:	6033      	str	r3, [r6, #0]
 8001024:	2000      	movs	r0, #0
 8001026:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800102a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8001100 <_malloc_r+0xfc>
 800102e:	f000 f869 	bl	8001104 <__malloc_lock>
 8001032:	f8d8 3000 	ldr.w	r3, [r8]
 8001036:	461c      	mov	r4, r3
 8001038:	bb44      	cbnz	r4, 800108c <_malloc_r+0x88>
 800103a:	4629      	mov	r1, r5
 800103c:	4630      	mov	r0, r6
 800103e:	f7ff ffbf 	bl	8000fc0 <sbrk_aligned>
 8001042:	1c43      	adds	r3, r0, #1
 8001044:	4604      	mov	r4, r0
 8001046:	d158      	bne.n	80010fa <_malloc_r+0xf6>
 8001048:	f8d8 4000 	ldr.w	r4, [r8]
 800104c:	4627      	mov	r7, r4
 800104e:	2f00      	cmp	r7, #0
 8001050:	d143      	bne.n	80010da <_malloc_r+0xd6>
 8001052:	2c00      	cmp	r4, #0
 8001054:	d04b      	beq.n	80010ee <_malloc_r+0xea>
 8001056:	6823      	ldr	r3, [r4, #0]
 8001058:	4639      	mov	r1, r7
 800105a:	4630      	mov	r0, r6
 800105c:	eb04 0903 	add.w	r9, r4, r3
 8001060:	f000 f9c0 	bl	80013e4 <_sbrk_r>
 8001064:	4581      	cmp	r9, r0
 8001066:	d142      	bne.n	80010ee <_malloc_r+0xea>
 8001068:	6821      	ldr	r1, [r4, #0]
 800106a:	1a6d      	subs	r5, r5, r1
 800106c:	4629      	mov	r1, r5
 800106e:	4630      	mov	r0, r6
 8001070:	f7ff ffa6 	bl	8000fc0 <sbrk_aligned>
 8001074:	3001      	adds	r0, #1
 8001076:	d03a      	beq.n	80010ee <_malloc_r+0xea>
 8001078:	6823      	ldr	r3, [r4, #0]
 800107a:	442b      	add	r3, r5
 800107c:	6023      	str	r3, [r4, #0]
 800107e:	f8d8 3000 	ldr.w	r3, [r8]
 8001082:	685a      	ldr	r2, [r3, #4]
 8001084:	bb62      	cbnz	r2, 80010e0 <_malloc_r+0xdc>
 8001086:	f8c8 7000 	str.w	r7, [r8]
 800108a:	e00f      	b.n	80010ac <_malloc_r+0xa8>
 800108c:	6822      	ldr	r2, [r4, #0]
 800108e:	1b52      	subs	r2, r2, r5
 8001090:	d420      	bmi.n	80010d4 <_malloc_r+0xd0>
 8001092:	2a0b      	cmp	r2, #11
 8001094:	d917      	bls.n	80010c6 <_malloc_r+0xc2>
 8001096:	1961      	adds	r1, r4, r5
 8001098:	42a3      	cmp	r3, r4
 800109a:	6025      	str	r5, [r4, #0]
 800109c:	bf18      	it	ne
 800109e:	6059      	strne	r1, [r3, #4]
 80010a0:	6863      	ldr	r3, [r4, #4]
 80010a2:	bf08      	it	eq
 80010a4:	f8c8 1000 	streq.w	r1, [r8]
 80010a8:	5162      	str	r2, [r4, r5]
 80010aa:	604b      	str	r3, [r1, #4]
 80010ac:	4630      	mov	r0, r6
 80010ae:	f000 f82f 	bl	8001110 <__malloc_unlock>
 80010b2:	f104 000b 	add.w	r0, r4, #11
 80010b6:	1d23      	adds	r3, r4, #4
 80010b8:	f020 0007 	bic.w	r0, r0, #7
 80010bc:	1ac2      	subs	r2, r0, r3
 80010be:	bf1c      	itt	ne
 80010c0:	1a1b      	subne	r3, r3, r0
 80010c2:	50a3      	strne	r3, [r4, r2]
 80010c4:	e7af      	b.n	8001026 <_malloc_r+0x22>
 80010c6:	6862      	ldr	r2, [r4, #4]
 80010c8:	42a3      	cmp	r3, r4
 80010ca:	bf0c      	ite	eq
 80010cc:	f8c8 2000 	streq.w	r2, [r8]
 80010d0:	605a      	strne	r2, [r3, #4]
 80010d2:	e7eb      	b.n	80010ac <_malloc_r+0xa8>
 80010d4:	4623      	mov	r3, r4
 80010d6:	6864      	ldr	r4, [r4, #4]
 80010d8:	e7ae      	b.n	8001038 <_malloc_r+0x34>
 80010da:	463c      	mov	r4, r7
 80010dc:	687f      	ldr	r7, [r7, #4]
 80010de:	e7b6      	b.n	800104e <_malloc_r+0x4a>
 80010e0:	461a      	mov	r2, r3
 80010e2:	685b      	ldr	r3, [r3, #4]
 80010e4:	42a3      	cmp	r3, r4
 80010e6:	d1fb      	bne.n	80010e0 <_malloc_r+0xdc>
 80010e8:	2300      	movs	r3, #0
 80010ea:	6053      	str	r3, [r2, #4]
 80010ec:	e7de      	b.n	80010ac <_malloc_r+0xa8>
 80010ee:	230c      	movs	r3, #12
 80010f0:	6033      	str	r3, [r6, #0]
 80010f2:	4630      	mov	r0, r6
 80010f4:	f000 f80c 	bl	8001110 <__malloc_unlock>
 80010f8:	e794      	b.n	8001024 <_malloc_r+0x20>
 80010fa:	6005      	str	r5, [r0, #0]
 80010fc:	e7d6      	b.n	80010ac <_malloc_r+0xa8>
 80010fe:	bf00      	nop
 8001100:	200001c4 	.word	0x200001c4

08001104 <__malloc_lock>:
 8001104:	4801      	ldr	r0, [pc, #4]	@ (800110c <__malloc_lock+0x8>)
 8001106:	f7ff bf0e 	b.w	8000f26 <__retarget_lock_acquire_recursive>
 800110a:	bf00      	nop
 800110c:	200001bc 	.word	0x200001bc

08001110 <__malloc_unlock>:
 8001110:	4801      	ldr	r0, [pc, #4]	@ (8001118 <__malloc_unlock+0x8>)
 8001112:	f7ff bf09 	b.w	8000f28 <__retarget_lock_release_recursive>
 8001116:	bf00      	nop
 8001118:	200001bc 	.word	0x200001bc

0800111c <__sflush_r>:
 800111c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001124:	0716      	lsls	r6, r2, #28
 8001126:	4605      	mov	r5, r0
 8001128:	460c      	mov	r4, r1
 800112a:	d454      	bmi.n	80011d6 <__sflush_r+0xba>
 800112c:	684b      	ldr	r3, [r1, #4]
 800112e:	2b00      	cmp	r3, #0
 8001130:	dc02      	bgt.n	8001138 <__sflush_r+0x1c>
 8001132:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001134:	2b00      	cmp	r3, #0
 8001136:	dd48      	ble.n	80011ca <__sflush_r+0xae>
 8001138:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800113a:	2e00      	cmp	r6, #0
 800113c:	d045      	beq.n	80011ca <__sflush_r+0xae>
 800113e:	2300      	movs	r3, #0
 8001140:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001144:	682f      	ldr	r7, [r5, #0]
 8001146:	6a21      	ldr	r1, [r4, #32]
 8001148:	602b      	str	r3, [r5, #0]
 800114a:	d030      	beq.n	80011ae <__sflush_r+0x92>
 800114c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800114e:	89a3      	ldrh	r3, [r4, #12]
 8001150:	0759      	lsls	r1, r3, #29
 8001152:	d505      	bpl.n	8001160 <__sflush_r+0x44>
 8001154:	6863      	ldr	r3, [r4, #4]
 8001156:	1ad2      	subs	r2, r2, r3
 8001158:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800115a:	b10b      	cbz	r3, 8001160 <__sflush_r+0x44>
 800115c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800115e:	1ad2      	subs	r2, r2, r3
 8001160:	2300      	movs	r3, #0
 8001162:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001164:	6a21      	ldr	r1, [r4, #32]
 8001166:	4628      	mov	r0, r5
 8001168:	47b0      	blx	r6
 800116a:	1c43      	adds	r3, r0, #1
 800116c:	89a3      	ldrh	r3, [r4, #12]
 800116e:	d106      	bne.n	800117e <__sflush_r+0x62>
 8001170:	6829      	ldr	r1, [r5, #0]
 8001172:	291d      	cmp	r1, #29
 8001174:	d82b      	bhi.n	80011ce <__sflush_r+0xb2>
 8001176:	4a2a      	ldr	r2, [pc, #168]	@ (8001220 <__sflush_r+0x104>)
 8001178:	410a      	asrs	r2, r1
 800117a:	07d6      	lsls	r6, r2, #31
 800117c:	d427      	bmi.n	80011ce <__sflush_r+0xb2>
 800117e:	2200      	movs	r2, #0
 8001180:	6062      	str	r2, [r4, #4]
 8001182:	04d9      	lsls	r1, r3, #19
 8001184:	6922      	ldr	r2, [r4, #16]
 8001186:	6022      	str	r2, [r4, #0]
 8001188:	d504      	bpl.n	8001194 <__sflush_r+0x78>
 800118a:	1c42      	adds	r2, r0, #1
 800118c:	d101      	bne.n	8001192 <__sflush_r+0x76>
 800118e:	682b      	ldr	r3, [r5, #0]
 8001190:	b903      	cbnz	r3, 8001194 <__sflush_r+0x78>
 8001192:	6560      	str	r0, [r4, #84]	@ 0x54
 8001194:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001196:	602f      	str	r7, [r5, #0]
 8001198:	b1b9      	cbz	r1, 80011ca <__sflush_r+0xae>
 800119a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800119e:	4299      	cmp	r1, r3
 80011a0:	d002      	beq.n	80011a8 <__sflush_r+0x8c>
 80011a2:	4628      	mov	r0, r5
 80011a4:	f7ff fec2 	bl	8000f2c <_free_r>
 80011a8:	2300      	movs	r3, #0
 80011aa:	6363      	str	r3, [r4, #52]	@ 0x34
 80011ac:	e00d      	b.n	80011ca <__sflush_r+0xae>
 80011ae:	2301      	movs	r3, #1
 80011b0:	4628      	mov	r0, r5
 80011b2:	47b0      	blx	r6
 80011b4:	4602      	mov	r2, r0
 80011b6:	1c50      	adds	r0, r2, #1
 80011b8:	d1c9      	bne.n	800114e <__sflush_r+0x32>
 80011ba:	682b      	ldr	r3, [r5, #0]
 80011bc:	2b00      	cmp	r3, #0
 80011be:	d0c6      	beq.n	800114e <__sflush_r+0x32>
 80011c0:	2b1d      	cmp	r3, #29
 80011c2:	d001      	beq.n	80011c8 <__sflush_r+0xac>
 80011c4:	2b16      	cmp	r3, #22
 80011c6:	d11e      	bne.n	8001206 <__sflush_r+0xea>
 80011c8:	602f      	str	r7, [r5, #0]
 80011ca:	2000      	movs	r0, #0
 80011cc:	e022      	b.n	8001214 <__sflush_r+0xf8>
 80011ce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011d2:	b21b      	sxth	r3, r3
 80011d4:	e01b      	b.n	800120e <__sflush_r+0xf2>
 80011d6:	690f      	ldr	r7, [r1, #16]
 80011d8:	2f00      	cmp	r7, #0
 80011da:	d0f6      	beq.n	80011ca <__sflush_r+0xae>
 80011dc:	0793      	lsls	r3, r2, #30
 80011de:	680e      	ldr	r6, [r1, #0]
 80011e0:	bf08      	it	eq
 80011e2:	694b      	ldreq	r3, [r1, #20]
 80011e4:	600f      	str	r7, [r1, #0]
 80011e6:	bf18      	it	ne
 80011e8:	2300      	movne	r3, #0
 80011ea:	eba6 0807 	sub.w	r8, r6, r7
 80011ee:	608b      	str	r3, [r1, #8]
 80011f0:	f1b8 0f00 	cmp.w	r8, #0
 80011f4:	dde9      	ble.n	80011ca <__sflush_r+0xae>
 80011f6:	6a21      	ldr	r1, [r4, #32]
 80011f8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80011fa:	4643      	mov	r3, r8
 80011fc:	463a      	mov	r2, r7
 80011fe:	4628      	mov	r0, r5
 8001200:	47b0      	blx	r6
 8001202:	2800      	cmp	r0, #0
 8001204:	dc08      	bgt.n	8001218 <__sflush_r+0xfc>
 8001206:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800120a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800120e:	81a3      	strh	r3, [r4, #12]
 8001210:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001218:	4407      	add	r7, r0
 800121a:	eba8 0800 	sub.w	r8, r8, r0
 800121e:	e7e7      	b.n	80011f0 <__sflush_r+0xd4>
 8001220:	dfbffffe 	.word	0xdfbffffe

08001224 <_fflush_r>:
 8001224:	b538      	push	{r3, r4, r5, lr}
 8001226:	690b      	ldr	r3, [r1, #16]
 8001228:	4605      	mov	r5, r0
 800122a:	460c      	mov	r4, r1
 800122c:	b913      	cbnz	r3, 8001234 <_fflush_r+0x10>
 800122e:	2500      	movs	r5, #0
 8001230:	4628      	mov	r0, r5
 8001232:	bd38      	pop	{r3, r4, r5, pc}
 8001234:	b118      	cbz	r0, 800123e <_fflush_r+0x1a>
 8001236:	6a03      	ldr	r3, [r0, #32]
 8001238:	b90b      	cbnz	r3, 800123e <_fflush_r+0x1a>
 800123a:	f7ff fcd9 	bl	8000bf0 <__sinit>
 800123e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001242:	2b00      	cmp	r3, #0
 8001244:	d0f3      	beq.n	800122e <_fflush_r+0xa>
 8001246:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001248:	07d0      	lsls	r0, r2, #31
 800124a:	d404      	bmi.n	8001256 <_fflush_r+0x32>
 800124c:	0599      	lsls	r1, r3, #22
 800124e:	d402      	bmi.n	8001256 <_fflush_r+0x32>
 8001250:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001252:	f7ff fe68 	bl	8000f26 <__retarget_lock_acquire_recursive>
 8001256:	4628      	mov	r0, r5
 8001258:	4621      	mov	r1, r4
 800125a:	f7ff ff5f 	bl	800111c <__sflush_r>
 800125e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001260:	07da      	lsls	r2, r3, #31
 8001262:	4605      	mov	r5, r0
 8001264:	d4e4      	bmi.n	8001230 <_fflush_r+0xc>
 8001266:	89a3      	ldrh	r3, [r4, #12]
 8001268:	059b      	lsls	r3, r3, #22
 800126a:	d4e1      	bmi.n	8001230 <_fflush_r+0xc>
 800126c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800126e:	f7ff fe5b 	bl	8000f28 <__retarget_lock_release_recursive>
 8001272:	e7dd      	b.n	8001230 <_fflush_r+0xc>

08001274 <__swhatbuf_r>:
 8001274:	b570      	push	{r4, r5, r6, lr}
 8001276:	460c      	mov	r4, r1
 8001278:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800127c:	2900      	cmp	r1, #0
 800127e:	b096      	sub	sp, #88	@ 0x58
 8001280:	4615      	mov	r5, r2
 8001282:	461e      	mov	r6, r3
 8001284:	da0d      	bge.n	80012a2 <__swhatbuf_r+0x2e>
 8001286:	89a3      	ldrh	r3, [r4, #12]
 8001288:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800128c:	f04f 0100 	mov.w	r1, #0
 8001290:	bf14      	ite	ne
 8001292:	2340      	movne	r3, #64	@ 0x40
 8001294:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001298:	2000      	movs	r0, #0
 800129a:	6031      	str	r1, [r6, #0]
 800129c:	602b      	str	r3, [r5, #0]
 800129e:	b016      	add	sp, #88	@ 0x58
 80012a0:	bd70      	pop	{r4, r5, r6, pc}
 80012a2:	466a      	mov	r2, sp
 80012a4:	f000 f87c 	bl	80013a0 <_fstat_r>
 80012a8:	2800      	cmp	r0, #0
 80012aa:	dbec      	blt.n	8001286 <__swhatbuf_r+0x12>
 80012ac:	9901      	ldr	r1, [sp, #4]
 80012ae:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012b2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012b6:	4259      	negs	r1, r3
 80012b8:	4159      	adcs	r1, r3
 80012ba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012be:	e7eb      	b.n	8001298 <__swhatbuf_r+0x24>

080012c0 <__smakebuf_r>:
 80012c0:	898b      	ldrh	r3, [r1, #12]
 80012c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012c4:	079d      	lsls	r5, r3, #30
 80012c6:	4606      	mov	r6, r0
 80012c8:	460c      	mov	r4, r1
 80012ca:	d507      	bpl.n	80012dc <__smakebuf_r+0x1c>
 80012cc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	6123      	str	r3, [r4, #16]
 80012d4:	2301      	movs	r3, #1
 80012d6:	6163      	str	r3, [r4, #20]
 80012d8:	b003      	add	sp, #12
 80012da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012dc:	ab01      	add	r3, sp, #4
 80012de:	466a      	mov	r2, sp
 80012e0:	f7ff ffc8 	bl	8001274 <__swhatbuf_r>
 80012e4:	9f00      	ldr	r7, [sp, #0]
 80012e6:	4605      	mov	r5, r0
 80012e8:	4639      	mov	r1, r7
 80012ea:	4630      	mov	r0, r6
 80012ec:	f7ff fe8a 	bl	8001004 <_malloc_r>
 80012f0:	b948      	cbnz	r0, 8001306 <__smakebuf_r+0x46>
 80012f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012f6:	059a      	lsls	r2, r3, #22
 80012f8:	d4ee      	bmi.n	80012d8 <__smakebuf_r+0x18>
 80012fa:	f023 0303 	bic.w	r3, r3, #3
 80012fe:	f043 0302 	orr.w	r3, r3, #2
 8001302:	81a3      	strh	r3, [r4, #12]
 8001304:	e7e2      	b.n	80012cc <__smakebuf_r+0xc>
 8001306:	89a3      	ldrh	r3, [r4, #12]
 8001308:	6020      	str	r0, [r4, #0]
 800130a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800130e:	81a3      	strh	r3, [r4, #12]
 8001310:	9b01      	ldr	r3, [sp, #4]
 8001312:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001316:	b15b      	cbz	r3, 8001330 <__smakebuf_r+0x70>
 8001318:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800131c:	4630      	mov	r0, r6
 800131e:	f000 f851 	bl	80013c4 <_isatty_r>
 8001322:	b128      	cbz	r0, 8001330 <__smakebuf_r+0x70>
 8001324:	89a3      	ldrh	r3, [r4, #12]
 8001326:	f023 0303 	bic.w	r3, r3, #3
 800132a:	f043 0301 	orr.w	r3, r3, #1
 800132e:	81a3      	strh	r3, [r4, #12]
 8001330:	89a3      	ldrh	r3, [r4, #12]
 8001332:	431d      	orrs	r5, r3
 8001334:	81a5      	strh	r5, [r4, #12]
 8001336:	e7cf      	b.n	80012d8 <__smakebuf_r+0x18>

08001338 <_putc_r>:
 8001338:	b570      	push	{r4, r5, r6, lr}
 800133a:	460d      	mov	r5, r1
 800133c:	4614      	mov	r4, r2
 800133e:	4606      	mov	r6, r0
 8001340:	b118      	cbz	r0, 800134a <_putc_r+0x12>
 8001342:	6a03      	ldr	r3, [r0, #32]
 8001344:	b90b      	cbnz	r3, 800134a <_putc_r+0x12>
 8001346:	f7ff fc53 	bl	8000bf0 <__sinit>
 800134a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800134c:	07d8      	lsls	r0, r3, #31
 800134e:	d405      	bmi.n	800135c <_putc_r+0x24>
 8001350:	89a3      	ldrh	r3, [r4, #12]
 8001352:	0599      	lsls	r1, r3, #22
 8001354:	d402      	bmi.n	800135c <_putc_r+0x24>
 8001356:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001358:	f7ff fde5 	bl	8000f26 <__retarget_lock_acquire_recursive>
 800135c:	68a3      	ldr	r3, [r4, #8]
 800135e:	3b01      	subs	r3, #1
 8001360:	2b00      	cmp	r3, #0
 8001362:	60a3      	str	r3, [r4, #8]
 8001364:	da05      	bge.n	8001372 <_putc_r+0x3a>
 8001366:	69a2      	ldr	r2, [r4, #24]
 8001368:	4293      	cmp	r3, r2
 800136a:	db12      	blt.n	8001392 <_putc_r+0x5a>
 800136c:	b2eb      	uxtb	r3, r5
 800136e:	2b0a      	cmp	r3, #10
 8001370:	d00f      	beq.n	8001392 <_putc_r+0x5a>
 8001372:	6823      	ldr	r3, [r4, #0]
 8001374:	1c5a      	adds	r2, r3, #1
 8001376:	6022      	str	r2, [r4, #0]
 8001378:	701d      	strb	r5, [r3, #0]
 800137a:	b2ed      	uxtb	r5, r5
 800137c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800137e:	07da      	lsls	r2, r3, #31
 8001380:	d405      	bmi.n	800138e <_putc_r+0x56>
 8001382:	89a3      	ldrh	r3, [r4, #12]
 8001384:	059b      	lsls	r3, r3, #22
 8001386:	d402      	bmi.n	800138e <_putc_r+0x56>
 8001388:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800138a:	f7ff fdcd 	bl	8000f28 <__retarget_lock_release_recursive>
 800138e:	4628      	mov	r0, r5
 8001390:	bd70      	pop	{r4, r5, r6, pc}
 8001392:	4629      	mov	r1, r5
 8001394:	4622      	mov	r2, r4
 8001396:	4630      	mov	r0, r6
 8001398:	f7ff fcbd 	bl	8000d16 <__swbuf_r>
 800139c:	4605      	mov	r5, r0
 800139e:	e7ed      	b.n	800137c <_putc_r+0x44>

080013a0 <_fstat_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4d07      	ldr	r5, [pc, #28]	@ (80013c0 <_fstat_r+0x20>)
 80013a4:	2300      	movs	r3, #0
 80013a6:	4604      	mov	r4, r0
 80013a8:	4608      	mov	r0, r1
 80013aa:	4611      	mov	r1, r2
 80013ac:	602b      	str	r3, [r5, #0]
 80013ae:	f000 f831 	bl	8001414 <_fstat>
 80013b2:	1c43      	adds	r3, r0, #1
 80013b4:	d102      	bne.n	80013bc <_fstat_r+0x1c>
 80013b6:	682b      	ldr	r3, [r5, #0]
 80013b8:	b103      	cbz	r3, 80013bc <_fstat_r+0x1c>
 80013ba:	6023      	str	r3, [r4, #0]
 80013bc:	bd38      	pop	{r3, r4, r5, pc}
 80013be:	bf00      	nop
 80013c0:	200001b8 	.word	0x200001b8

080013c4 <_isatty_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4d06      	ldr	r5, [pc, #24]	@ (80013e0 <_isatty_r+0x1c>)
 80013c8:	2300      	movs	r3, #0
 80013ca:	4604      	mov	r4, r0
 80013cc:	4608      	mov	r0, r1
 80013ce:	602b      	str	r3, [r5, #0]
 80013d0:	f000 f828 	bl	8001424 <_isatty>
 80013d4:	1c43      	adds	r3, r0, #1
 80013d6:	d102      	bne.n	80013de <_isatty_r+0x1a>
 80013d8:	682b      	ldr	r3, [r5, #0]
 80013da:	b103      	cbz	r3, 80013de <_isatty_r+0x1a>
 80013dc:	6023      	str	r3, [r4, #0]
 80013de:	bd38      	pop	{r3, r4, r5, pc}
 80013e0:	200001b8 	.word	0x200001b8

080013e4 <_sbrk_r>:
 80013e4:	b538      	push	{r3, r4, r5, lr}
 80013e6:	4d06      	ldr	r5, [pc, #24]	@ (8001400 <_sbrk_r+0x1c>)
 80013e8:	2300      	movs	r3, #0
 80013ea:	4604      	mov	r4, r0
 80013ec:	4608      	mov	r0, r1
 80013ee:	602b      	str	r3, [r5, #0]
 80013f0:	f000 f830 	bl	8001454 <_sbrk>
 80013f4:	1c43      	adds	r3, r0, #1
 80013f6:	d102      	bne.n	80013fe <_sbrk_r+0x1a>
 80013f8:	682b      	ldr	r3, [r5, #0]
 80013fa:	b103      	cbz	r3, 80013fe <_sbrk_r+0x1a>
 80013fc:	6023      	str	r3, [r4, #0]
 80013fe:	bd38      	pop	{r3, r4, r5, pc}
 8001400:	200001b8 	.word	0x200001b8

08001404 <_close>:
 8001404:	4b02      	ldr	r3, [pc, #8]	@ (8001410 <_close+0xc>)
 8001406:	2258      	movs	r2, #88	@ 0x58
 8001408:	601a      	str	r2, [r3, #0]
 800140a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800140e:	4770      	bx	lr
 8001410:	200001b8 	.word	0x200001b8

08001414 <_fstat>:
 8001414:	4b02      	ldr	r3, [pc, #8]	@ (8001420 <_fstat+0xc>)
 8001416:	2258      	movs	r2, #88	@ 0x58
 8001418:	601a      	str	r2, [r3, #0]
 800141a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800141e:	4770      	bx	lr
 8001420:	200001b8 	.word	0x200001b8

08001424 <_isatty>:
 8001424:	4b02      	ldr	r3, [pc, #8]	@ (8001430 <_isatty+0xc>)
 8001426:	2258      	movs	r2, #88	@ 0x58
 8001428:	601a      	str	r2, [r3, #0]
 800142a:	2000      	movs	r0, #0
 800142c:	4770      	bx	lr
 800142e:	bf00      	nop
 8001430:	200001b8 	.word	0x200001b8

08001434 <_lseek>:
 8001434:	4b02      	ldr	r3, [pc, #8]	@ (8001440 <_lseek+0xc>)
 8001436:	2258      	movs	r2, #88	@ 0x58
 8001438:	601a      	str	r2, [r3, #0]
 800143a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800143e:	4770      	bx	lr
 8001440:	200001b8 	.word	0x200001b8

08001444 <_read>:
 8001444:	4b02      	ldr	r3, [pc, #8]	@ (8001450 <_read+0xc>)
 8001446:	2258      	movs	r2, #88	@ 0x58
 8001448:	601a      	str	r2, [r3, #0]
 800144a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800144e:	4770      	bx	lr
 8001450:	200001b8 	.word	0x200001b8

08001454 <_sbrk>:
 8001454:	4a04      	ldr	r2, [pc, #16]	@ (8001468 <_sbrk+0x14>)
 8001456:	6811      	ldr	r1, [r2, #0]
 8001458:	4603      	mov	r3, r0
 800145a:	b909      	cbnz	r1, 8001460 <_sbrk+0xc>
 800145c:	4903      	ldr	r1, [pc, #12]	@ (800146c <_sbrk+0x18>)
 800145e:	6011      	str	r1, [r2, #0]
 8001460:	6810      	ldr	r0, [r2, #0]
 8001462:	4403      	add	r3, r0
 8001464:	6013      	str	r3, [r2, #0]
 8001466:	4770      	bx	lr
 8001468:	200001c8 	.word	0x200001c8
 800146c:	200001d0 	.word	0x200001d0

08001470 <_init>:
 8001470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001472:	bf00      	nop
 8001474:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001476:	bc08      	pop	{r3}
 8001478:	469e      	mov	lr, r3
 800147a:	4770      	bx	lr

0800147c <_fini>:
 800147c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800147e:	bf00      	nop
 8001480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001482:	bc08      	pop	{r3}
 8001484:	469e      	mov	lr, r3
 8001486:	4770      	bx	lr
